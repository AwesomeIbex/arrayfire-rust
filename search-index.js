var N=null,E="",T="t",U="u",searchIndex={};
var R=["rustc_serialize","frombase64error","The input had an invalid length","string","result","fromhexerror","encodable","Object","Creates a new encoder whose output will be written in…","encoder","buildererror","option","object","stackelement","asprettyjson","Read an enumeration value.","The error type for method results.","rustc_serialize::base64","to_owned","clone_into","try_from","borrow_mut","try_into","type_id","rustc_serialize::hex","to_string","borrow","typeid","rustc_serialize::json","emit_nil","encoderesult","emit_usize","emit_u64","emit_u32","emit_u16","emit_isize","emit_i64","emit_i32","emit_i16","emit_bool","emit_f64","emit_f32","emit_char","emit_str","emit_enum","emit_enum_variant","emit_enum_variant_arg","emit_enum_struct_variant","emit_enum_struct_variant_field","emit_struct","emit_struct_field","emit_tuple","emit_tuple_arg","emit_tuple_struct","emit_tuple_struct_arg","emit_option","emit_option_none","emit_option_some","emit_seq","emit_seq_elt","emit_map","emit_map_elt_key","emit_map_elt_val","read_nil","decoderesult","read_usize","read_u16","read_u32","read_u64","read_isize","read_i16","read_i32","read_i64","read_f32","read_f64","read_bool","read_char","read_str","read_enum","read_enum_variant","read_enum_variant_arg","read_enum_struct_variant","read_enum_struct_variant_field","read_struct","read_struct_field","read_tuple","read_tuple_arg","read_tuple_struct","read_tuple_struct_arg","read_option","read_seq","read_seq_elt","read_map","read_map_elt_key","read_map_elt_val","errorcode","decodererror","jsonevent","parsererror","encodererror","formatter","Encodes a json value into a string","description","CharacterSet","FromBase64Error","FromBase64","FromHexError","ErrorCode","ParserError","DecoderError","EncoderError","JsonEvent","StackElement","AsPrettyJson","Decodable","Encodable","DecoderHelpers","EncoderHelpers","PrettyJson","it_interval","envelope","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","statvfs64","if_nameindex","ipv6_mreq","itimerval","sockaddr_in","sockaddr_in6","sockaddr_un","sockaddr_storage","sockaddr_nl","sockaddr_ll","sched_param","epoll_event","in_pktinfo","in6_rtmsg","pthread_mutex_t","pthread_rwlock_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_cond_t","pthread_condattr_t","signalfd_siginfo","itimerspec","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","__exit_status","__timeval","siginfo_t","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_fpregs_struct","user_regs_struct","mcontext_t","ucontext_t","timespec","in6_addr","protoent","sockaddr","addrinfo","sigevent","dirent64","rlimit64","input_id","Elf32_Phdr","Elf64_Phdr","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","sigset_t","A wrapper for generating floating point numbers uniformly…","rand::distributions","jitterrng","timererror","ChaChaRng","A random number generator that uses the ChaCha20 algorithm…","A random number generator that uses the ISAAC algorithm[1].","Isaac64Rng","A random number generator that uses ISAAC-64[1], the…","new_unseeded","xorshiftrng","samplerange","partialord","into_iter","rand::distributions::range","rand::distributions::gamma","rand::distributions::normal","rand::distributions::exponential","rand::jitter","rand::read","rand::reseeding","ind_sample","chacharng","isaac64rng","fill_bytes","next_u32","rand::os","next_u64","from_seed","reseedingrng","isaacrng","Create an ISAAC random number generator with a seed. This…","chisquared","standardnormal","lognormal","threadrng","reseedwithdefault","SampleRange","ChiSquared","StandardNormal","LogNormal","IndependentSample","RandSample","WeightedChoice","TimerError","JitterRng","ReseedingRng","IsaacRng","XorShiftRng","SeedableRng","Generator","AsciiGenerator","ThreadRng","ReseedWithDefault","num_traits","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","num_traits::ops","Shifts a number to the left, checking for overflow. If…","Performs the fused multiply-add operation.","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Fused multiply-add. Computes `(self * a) + b` with only…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","checkedmul","The result after applying the operator.","ParseFloatError","FloatErrorKind","Saturating","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","WrappingAdd","WrappingSub","WrappingMul","MulAddAssign","FloatCore","FloatConst","ToPrimitive","FromPrimitive","AsPrimitive","lazy_static","num_integer","integer","div_floor","mod_floor","div_mod_floor","IterBinomial","num_complex","complex","parsecomplexerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","ParseComplexError","from_str","from_str_radix","size_hint","next_back","rangeinclusive","rangestep","rangestepinclusive","RangeInclusive","RangeStep","RangeStepInclusive","num_bigint","Creates and initializes a `BigUint`.","biguint","Creates and initializes a `BigUint`. Each u8 of the input…","Returns the byte representation of the `BigUint` in…","bigdigit","from_slice","Creates and initializes a `BigInt`.","assign_from_slice","from_bytes_be","from_bytes_le","Creates and initializes a `BigInt` from an array of bytes…","parse_bytes","from_radix_be","from_radix_le","Creates and initializes a `BigInt`. Each u8 of the input…","to_bytes_be","to_bytes_le","Returns the sign and the byte representation of the…","Returns the two's complement byte representation of the…","to_str_radix","Returns the integer formatted as a string in the given…","to_radix_be","Returns the integer in the requested base in big-endian…","to_radix_le","Returns the integer in the requested base in little-endian…","Determines the fewest bits necessary to express the…","doublebigdigit","A `BigDigit` is a `BigUint`'s composing element.","DoubleBigDigit","A `DoubleBigDigit` is the internal type used to do the…","ZERO_BIG_DIGIT","to_biguint","to_bigint","parsebiginterror","ordering","partial_cmp","bitand_assign","bitor_assign","bitxor_assign","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if the number is a multiple of `other`.","Returns `true` if the number is divisible by `2`.","Returns `true` if the number is not divisible by `2`.","Creates and initializes a BigInt.","checked_add","checked_sub","checked_mul","checked_div","ParseBigIntError","ToBigUint","RandBigInt","BigDigit","is_positive","is_negative","from_i64","from_u64","from_f64","num_rational","bigrational","parseratioerror","from_f32","ParseRatioError","abs_sub","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","A generic trait for converting a number to a value.","from_isize","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","from_i128","Convert an `i128` to return an optional value of this…","from_usize","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","from_u128","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","A big unsigned integer type.","num::bigint","A big signed integer type.","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Floored integer division.","Floored integer modulo, satisfying:","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Returns `true` if `self` is a multiple of `other`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","range_step","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","num::traits","Useful functions for signed numbers (i.e. numbers that can…","Returns true if the number is positive and false if the…","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","num::traits::ops","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Generic trait for floating point numbers","Returns the `NaN` value.","infinity","Returns the infinite value.","Returns the negative infinite value.","neg_zero","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","classify","Raise a number to a floating point power.","to_isize","to_usize","from_i16","from_i32","from_u16","from_u32","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","count_ones","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Binary operator for raising a value to a power.","Returns `self` to the power `rhs`.","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","Alias for a `Ratio` of machine-sized integers.","BigRational","Alias for arbitrary precision rationals.","num::complex","num::integer","num::iter","num::rational","is_zero","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","identities","Unsigned","saturating","Performs an integral remainder that returns `None` instead…","checked_rem","Finds the remainder of dividing two numbers, checking for…","Performs negation that returns `None` if the result can't…","checked_neg","Negates a number, returning `None` for results that can't…","Performs a left shift that returns `None` on overflow.","checked_shl","Performs a right shift that returns `None` on overflow.","checked_shr","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Unary operator for retrieving the multiplicative inverse,…","Returns the multiplicative inverse of `self`.","mul_add","The fused multiply-add operation. Computes (self * a) + b…","The resulting type after applying the fused multiply-add.","The fused multiply-add assignment operation.","mul_add_assign","Generic trait for floating point numbers that works with…","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns `true` if the number is NaN.","Returns `true` if the number is infinite.","Returns `true` if the number is neither infinite or NaN.","Returns `true` if `self` is positive, including `+0.0` and…","Returns `true` if `self` is negative, including `-0.0` and…","Returns the reciprocal (multiplicative inverse) of the…","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","epsilon","Return Euler’s number.","FRAC_1_PI","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","FRAC_2_PI","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","FRAC_PI_2","Return `π / 2.0`.","FRAC_PI_3","Return `π / 3.0`.","FRAC_PI_4","Return `π / 4.0`.","FRAC_PI_6","Return `π / 6.0`.","FRAC_PI_8","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","NumAssign","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","NumCast","An iterator over binomial coefficients.","div_rem","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients…","iterbinomial","Complex32","Complex64","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","from_polar","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","A Sign is a `BigInt`'s composing element.","Assign a value to a `BigUint`.","Creates and initializes a `BigUint`. The input slice must…","Returns `(self ^ exponent) % modulus`.","from_biguint","Reinitializes a `BigInt`.","from_signed_bytes_be","from_signed_bytes_le","to_signed_bytes_be","to_signed_bytes_le","Returns the sign of the `BigInt` as a `Sign`.","Converts this `BigInt` into a `BigUint`, if it's not…","Returns `(self ^ exponent) mod modulus`","big_digit","from_doublebigdigit","Split one `DoubleBigDigit` into two `BigDigit`s.","to_doublebigdigit","Join two `BigDigit`s into one `DoubleBigDigit`","A generic trait for converting a value to a `BigUint`.","Converts the value of `self` to a `BigUint`.","ToBigInt","A generic trait for converting a value to a `BigInt`.","Converts the value of `self` to a `BigInt`.","gen_biguint","Generate a random `BigUint` of the given bit size.","gen_bigint","Generate a random BigInt of the given bit size.","gen_biguint_below","Generate a random `BigUint` less than the given bound.…","gen_biguint_range","Generate a random `BigUint` within the given range. The…","gen_bigint_range","Generate a random `BigInt` within the given range. The…","parseinterror","default","Negate Sign value.","shl_assign","shr_assign","divides","is_even","Represents the ratio between 2 numbers.","Rational","Rational32","Rational64","Creates a new `Ratio`. Fails if `denom` is zero.","from_integer","Creates a `Ratio` representing the integer `t`.","Creates a `Ratio` without checking for `denom == 0` or…","to_integer","Converts to an integer, rounding towards zero.","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","is_integer","Returns true if the rational number is an integer…","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away…","Rounds towards zero.","Returns the fractional part of a number, with division…","Raises the `Ratio` to the power of an exponent.","from_float","Converts a float into a rational number.","approximate_float","Renders as `numer/denom`. If denom=1, renders as numer.","Parses `numer/denom` or just `numer`.","Parses `numer/denom` where the numbers are in base `radix`.","arrayfire","32 bit float","32 bit complex float","64 bit float","64 bit complex float","8 bit boolean","32 bit signed integer","32 bit unsigned integer","8 bit unsigned integer","64 bit signed integer","64 bit unsigned integer","16 bit signed integer","16 bit unsigned integer","Quadratic flux function","DEFAULT","Sort the values in input Arrays","hasafenum","Element wise conditional operator for Arrays","Inplace replace in Array based on a condition","interptype","bordertype","momenttype","Solve a system of equations","randomengine","convdomain","convmode","sparseformat","matchtype","features","markertype","randomenginetype","Get random engine type","This type alias points to a data type that can store the…","is_complex","Trait qualifier for given type indicating computability of…","Trait qualifier for type of Array's that are accepted by…","join_many","backend","connectivity","colorspace","matprop","homographytype","binaryop","cannythresholdtype","diffusioneq","normtype","colormap","fmterror","InterpType","BorderType","Connectivity","ConvDomain","MatchType","ColorSpace","HomographyType","MarkerType","MomentType","SparseFormat","RandomEngineType","CannyThresholdType","DiffusionEq","RandomEngine","Convertable","ConstGenerator","Indexable","HasAfEnum","ImplicitPromote","FloatingPoint","ArrayFire is a high performance software library for…","A multidimensional data container","Dim4 is used to store Array dimensions","Callback","Structure holding handle to callback function","Struct to manage an array of resources of type…","Sequences are used for indexing Arrays","Used to render Array objects","Random number generator engine","Features","A set of Array objects (usually, used in Computer vision…","Error codes","The function returned successfully","ERR_NO_MEM","The system or device ran out of memory","ERR_DRIVER","There was an error in the device driver","ERR_RUNTIME","There was an error with the runtime environment","ERR_INVALID_ARRAY","The input array is not a valid Array object","One of the function arguments is incorrect","The size is incorrect","The type is not suppported by this function","ERR_DIFF_TYPE","The type of the input arrays are not compatible","ERR_BATCH","Function does not support GFOR / batch mode","ERR_DEVICE","Input does not belong to the current device","ERR_NOT_SUPPORTED","The option is not supported","ERR_NOT_CONFIGURED","This build of ArrayFire does not support this feature","ERR_NO_DBL","This device does not support double","ERR_NO_GFX","This build of ArrayFire was not built with graphics or…","ERR_INTERNAL","There was an internal error either in ArrayFire or in a…","ERR_UNKNOWN","Unknown Error","Compute/Acceleration Backend","Default backend order: OpenCL -> CUDA -> CPU","CPU a.k.a sequential algorithms","CUDA Compute Backend","OpenCL Compute Backend","Types of Array data type","Dictates the interpolation method to be used by a function","Nearest Neighbor interpolation method","Linear interpolation method","Bilinear interpolation method","Cubic interpolation method","Floor indexed","LINEAR_COSINE","Linear interpolation with cosine smoothing","BILINEAR_COSINE","Bilinear interpolation with cosine smoothing","Bicubic interpolation","CUBIC_SPLINE","Cubic interpolation with Catmull-Rom splines","BICUBIC_SPLINE","Bicubic interpolation with Catmull-Rom splines","Helps determine how to pad kernels along borders","Pad using zeros","SYMMETRIC","Pad using mirrored values along border","Used by `regions` function to identify type of connectivity","North-East-South-West (N-E-S-W) connectivity from given…","N-NE-E-SE-S-SW-W-NW connectivity from given pixel/point","ConvMode","Helps determine the size of output of convolution","Default convolution mode where output size is same as…","Output of convolution is expanded based on signal and…","Helps determine if convolution is in Spatial or Frequency…","ArrayFire chooses whether the convolution will be in…","Convoltion in spatial domain","FREQUENCY","Convolution in frequency domain","Error metric used by `matchTemplate` function","Sum of Absolute Differences","Zero-mean Sum of Absolute Differences","Locally scaled Sum of Absolute Differences","Sum of Squared Differences","Zero-mean Sum of Squared Differences","Localy scaled Sum of Squared Differences","Normalized Cross Correlation","Zero-mean Normalized Cross Correlation","Sum of Hamming Distances","Identify the color space of given image(Array)","Grayscale color space","Red-Green-Blue color space","Hue-Saturation-value color space","Helps determine the type of a Matrix","Default (no-op)","Data needs to be transposed","Data needs to be conjugate transposed","Matrix is upper triangular","Matrix is lower triangular","Matrix diagonal has unitary values","Matrix is symmetric","Matrix is positive definite","Matrix is orthogonal","Matrix is tri-diagonal","BLOCKDIAG","Matrix is block-diagonal","NormType","Norm type","Treats input as a vector and return sum of absolute values","VECTOR_INF","Treats input as vector and return max of absolute values","Treats input as vector and returns euclidean norm","Treats input as vector and returns the p-norm","Return the max of column sums","MATRIX_INF","Return the max of row sums","Returns the max singular value (Currently not supported)","MATRIX_L_PQ","Returns Lpq-norm","ColorMap","Dictates what color map is used for Image rendering","Default color map is grayscale range [0-1]","Visible spectrum color map","Red hue map","Mood color map","Heat color map","Blue hue map","YCbCr Standards","ITU-R BT.601 (formerly CCIR 601) standard","ITU-R BT.709 standard","ITU-R BT.2020 standard","Homography type","RANdom SAmple Consensus algorithm","Least Median of Squares","Plotting markers","No marker","Pointer marker","Hollow circle marker","Hollow Square marker","Hollow Triangle marker","Cross-hair marker","Plus symbol marker","Start symbol marker","Image moment types","Central moment of order (0 + 0)","Central moment of order (0 + 1)","Central moment of order (1 + 0)","Central moment of order (1 + 1)","FIRST_ORDER","All central moments of order (0,0), (0,1), (1,0) and (1,1)","Sparse storage format type","Dense format","Compressed sparse row format","Compressed sparse coloumn format","Coordinate list (row, coloumn, value) tuples.","Binary operation types for generalized scan functions","Addition operation","Multiplication operation","Minimum operation","Maximum operation","Random engine types","PHILOX_4X32_10","Philox variant with N=4, W=32 and Rounds=10","THREEFRY_2X32_16","Threefry variant with N=2, W=32 and Rounds=16","MERSENNE_GP11213","Mersenne variant with MEXP = 11213","Scalar value types","Canny edge detector threshold operations types","User has to define canny thresholds manually","Determine canny algorithm high threshold using Otsu…","Anisotropic diffusion flux equation types","EXPONENTIAL","Exponential flux function","Default flux function, a.k.a exponential","Diffusion equation types","Modified curvature diffusion equation","Default diffusion method, Gradient","topk function ordering","Top k min values","Top k max values","Default option(max)","Print data in the Array","Generalized Array print function","eval_multiple","evaluate multiple arrays","set_manual_eval","Set eval flag value","is_eval_manual","Get eval flag value","Sum elements along a given dimension","Compute product of elements along a given dimension","Find minimum among elements of given dimension","Find maximum among elements of given dimension","Find if all of the values along a given dimension in the…","Find if any of the values along a given dimension in the…","Count number of non-zero elements along a given dimension","Perform exclusive sum of elements along a given dimension","Calculate first order numerical difference along a given…","Calculate second order numerical difference along a given…","Sum along specific dimension using user specified value…","product_nan","Product of elements along specific dimension using user…","Sum all values of the Array","product_all","Product of all values of the Array","Find minimum among all values of the Array","Find maximum among all values of the Array","all_true_all","Find if all values of Array are non-zero","any_true_all","Find if any value of Array is non-zero","Count number of non-zero values in the Array","sum_nan_all","Sum all values using user provided value for `NAN`","product_nan_all","Product of all values using user provided value for `NAN`","Find minimum value along given dimension and their…","Find maximum value along given dimension and their…","Find minimum and it's index in the whole Array","Find maximum and it's index in the whole Array","Locate the indices of non-zero elements.","sort_by_key","Find unique values from a Set","Find union of two sets","set_intersect","Find intersection of two sets","Generalized scan","scan_by_key","Generalized scan by key","Computes absolute value","Computes phase value","Truncate the values in an Array","Computes the sign of input Array values","Round the values in an Array","Floor the values in an Array","Ceil the values in an Array","Compute sigmoid function","Compute e raised to the power of value -1","Compute error function value","Compute the complementary error function value","Compute logarithm base 10","Compute the logarithm of input Array + 1","Compute logarithm base 2","Compute the cube root","Compute gamma function","Compute the logarithm of absolute values of gamma function","Compute acosh","Compute acos","Compute asin","Compute asinh","Compute atan","Compute atanh","Compute cos","Compute cosh","Compute e raised to the power of value","Compute the natural logarithm","Compute sin","Compute sinh","Compute the square root","Compute tan","Compute tanh","Extract real values from a complex Array","Extract imaginary values from a complex Array","Create a complex Array from real Array","Compute the complex conjugate","Compute two raised to the power of value","Compute the factorial","Check if values are zero","Check if values are infinity","Check if values are NaN","Elementwise AND(bit) operation of two Arrays","Elementwise OR(bit) operation of two Arrays","Elementwise XOR(bit) operation of two Arrays","Elementwise not equals comparison of two Arrays","Elementwise logical and operation of two Arrays","Elementwise logical or operation of two Arrays","Elementwise minimum operation of two Arrays","Elementwise maximum operation of two Arrays","Compute length of hypotenuse of two Arrays","Addition of two Arrays","Subtraction of two Arrays","Multiplication of two Arrays","Division of two Arrays","Compute remainder from two Arrays","Compute left shift","Compute right shift","Compute modulo of two Arrays","Calculate atan2 of two Arrays","Create complex array from two Arrays","Compute root","Computer power","Perform `less than` comparison operation","Perform `greater than` comparison operation","Perform `less than equals` comparison operation","Perform `greater than equals` comparison operation","Perform `equals` comparison operation","Clamp the values of Array","set_backend","Toggle backends between cuda, opencl or cpu","get_backend_count","Get the available backend count","get_available_backends","Get the available backends","get_active_backend","Get current active backend","Matrix multiple of two Arrays","Calculate the dot product of vectors.","Transpose of a matrix.","transpose_inplace","Inplace transpose of a matrix.","Create an Array with constant value","constgenerator","Create a Range of values","Create a range of values","Create an identity array with 1's in diagonal","diag_create","Create a diagonal matrix","diag_extract","Extract diagonal from a given Matrix","Join two arrays","Join multiple arrays","Tile the input array along specified dimension","Reorder the array in specified order","\"Circular shift of values along specified dimension","Change the shape of the Array","Flatten the multidimensional Array to an 1D Array","Flip the Array","Create lower triangular matrix","Create upper triangular matrix","replace_scalar","get_version","Get ArrayFire Version Number","get_revision","Get ArrayFire Revision (commit) information of the library.","Print library meta-info","info_string","Return library meta-info as `String`","device_info","Gets the information about device and platform as strings.","Initialize ArrayFire library","device_count","Get total number of available devices","is_double_available","Check if a device has double support","Set active device","Get the current active device id","device_mem_info","Get memory information from the memory manager for the…","print_mem_info","Print buffer details from the ArrayFire device manager","set_mem_step_size","Set the minimum memory chunk size","get_mem_step_size","Get the minimum memory chunk size","Call the garbage collection routine","Sync all operations on given device","handle_error_general","Default error handling callback provided by ArrayFire crate","register_error_handler","Register user provided error handler","Indexes the `input` Array using `seqs` Sequences","Extract `row_num` row from `input` Array","Set `row_num`^th row in `input` Array to a new Array…","Get an Array with all rows from `first` to `last` in the…","Set rows from `first` to `last` in `input` Array with rows…","Extract `col_num` col from `input` Array","Set `col_num`^th col in `input` Array to a new Array…","Get all cols from `first` to `last` in the `input` Array","Set cols from `first` to `last` in `input` Array with cols…","Get `slice_num`^th slice from `input` Array","Set slice `slice_num` in `input` Array to a new Array…","Get slices from `first` to `last` in `input` Array","Set `first` to `last` slices of `input` Array to a new…","Lookup(hash) an Array using another Array","Assign(copy) content of an Array to another Array indexed…","Index an Array using any combination of Array's and…","Assign an Array to another after indexing it using any…","Calculate the gradients","Load Image into Array","load_image_native","Load Image into Array in it's native type","Save an Array to an image file","save_image_native","Save an Array without modifications to an image file","Resize an Image","Transform(Affine) an Image","Rotate an Image","Translate an Image","Scale an Image","Skew an image","Compute Histogram of an Array","Dilate an Image","Erode an Image","Dilate a Volume","Erode a Volume","Bilateral Filter.","Meanshift Filter.","Median filter","Box filter with minimum as box operation","Box filter with maximum as box operation","gaussian_kernel","Creates a Gaussian Kernel.","color_space","Color space conversion","Find blobs in given image.","Sobel Operator","Histogram Equalization","Color(RGB) to Grayscale conversion","Grayscale to Color(RGB) conversion","HSV to RGB color space conversion","RGB to HSV color space conversion","Generate an array with image windows as columns","Converts unwrapped image to an image","Summed area table of an Image","RGB to YCbCr colorspace converter.","YCbCr to RGB colorspace converter.","is_imageio_available","Function to check if Image I/O is available","transform_coords","Transform input coordinates","Find Image moments","moments_all","Find Image moment for whole image","One dimensional median filter on image","Canny edge detection operator","anisotropic_diffusion","Anisotropic smoothing filter","Perform Singular Value Decomposition","svd_inplace","Perform Singular Value Decomposition inplace","Perform LU decomposition","Perform inplace LU decomposition","Perform QR decomposition","Perform inplace QR decomposition","Perform Cholesky decomposition","cholesky_inplace","Perform inplace Cholesky decomposition","Compute inverse of a matrix","Find rank of a matrix","Find the determinant of the matrix","Find the norm of a matrix","is_lapack_available","Function to check if lapack support is available","Set seed for random number generation","Get the seed of random number generator","Create random numbers from uniform distribution","Create random numbers from normal distribution","get_default_random_engine","Get default random engine","set_default_random_engine_type","Set the random engine type for default random number…","random_uniform","Generate array of uniform numbers using a random engine","random_normal","Generate array of normal numbers using a random engine","Perform signal interpolation for 1d signals","Perform signal interpolation for 2d signals","set_fft_plan_cache_size","Set fft plan cache size","Fast fourier transform for 1d signals","Fast fourier transform for 2d signals","Fast fourier transform for 3d signals","Inverse fast fourier transform for 1d signals","Inverse fast fourier transform for 2d signals","Inverse fast fourier transform for 3d signals","1d convolution","2d convolution","3d convolution","convolve2_sep","Separable convolution for 2d signals","fft_convolve1","1d convolution using fast-fourier transform","fft_convolve2","2d convolution using fast-fourier transform","fft_convolve3","3d convolution using fast-fourier transform","Finite impulse filter","Infinite impulse response filter","fft_inplace","In place 1d dimensional Fast fourier transform","fft2_inplace","In place 2d dimensional Fast fourier transform","fft3_inplace","In place 3d dimensional Fast fourier transform","ifft_inplace","In place 1d dimensional inverse fast fourier transform","ifft2_inplace","In place 2d dimensional inverse fast fourier transform","ifft3_inplace","In place 3d dimensional inverse fast fourier transform","1d Real to Complex fast fourier transform","2d Real to Complex fast fourier transform","3d Real to Complex fast fourier transform","1d Complex to Real fast fourier transform","2d Complex to Real fast fourier transform","3d Complex to Real fast fourier transform","Create sprase matrix from arrays","sparse_from_host","Create sprase matrix from data on host memory","sparse_from_dense","Convert dense array to sparse array","sparse_convert_to","Convert between sparse formats","sparse_to_dense","Convert sparse array to dense array","sparse_get_info","Get sparse Array information","sparse_get_values","Get values of sparse Array","sparse_get_row_indices","Get row indices Array","sparse_get_col_indices","Get cololumn indices Array","sparse_get_nnz","Get number of non-zero elements in sparse array","sparse_get_format","Get sparse format","Find the median along a given dimension","Mean along specified dimension","Standard deviation along specified dimension","mean_weighted","Weighted mean along specified dimension","var_weighted","Weight variance along specified dimension","Compute Variance along a specific dimension","Compute covariance of two Arrays","Compute Variance of all elements","Compute mean of all data","Compute standard deviation of all data","Compute median of all data","mean_all_weighted","Compute weighted mean of all data","var_all_weighted","Compute weighted variance of all data","Compute correlation coefficient","Find top k elements along a given dimension","Get size, in bytes, of the arrayfire native type","Fast feature detector","Harris corner detector.","ORB feature descriptor","hamming_matcher","Hamming feature matcher","nearest_neighbour","Nearest Neighbour.","match_template","Image matching","SUSAN corner detector.","Difference of Gaussians.","Homography estimation","Constructs a new Array object","new_strided","Constructs a new Array object from strided data","Constructs a new Array object of specified dimensions and…","get_backend","Returns the backend of the Array","get_device_id","Returns the device identifier(integer) on which the Array…","Returns the number of elements in the Array","Returns the Array data type","Returns the dimensions of the Array","Returns the strides of the Array","Returns the number of dimensions of the Array","Returns the offset to the pointer from where data begins","Returns the native FFI handle for Rust object `Array`","Copies the data from the Array to the mutable slice `data`","Evaluates any pending lazy expressions that represent the…","Makes an copy of the Array","Check if Array is empty","Check if Array is scalar","Check if Array is a row","Check if Array is a column","Check if Array is a vector","Check if Array is of complex type","Check if Array's numerical type is of double precision","Check if Array's numerical type is of single precision","Check if Array is of real type","is_floating","Check if Array is of single precision","Check if Array is of integral type","Check if Array is of boolean type","Check if Array's memory layout is continuous and one…","Check if Array's memory is owned by it and not a view of…","Cast the Array data type to `target_type`","Find if the current array is sparse","Lock the device buffer in the memory manager","Unlock the device buffer in the memory manager","Get the device pointer and lock the buffer in memory manager","get_allocated_bytes","Get the size of physical allocated bytes.","Create Dim4 object","Get the number of elements represented by Dim4 object","Get the number of dimensions of Dim4","Get the dimensions as a slice of 4 values","Associated function to create a new Callback object","errorcallback","call invokes the error callback with `error_code`.","Create a new Indexer object and set the dimension specific…","Set either Array or Seq to index an Array along `idx`…","Get number of indexing objects set","Get native(ArrayFire) resource handle","Create a `Seq` that goes from `begin` to `end` at a step…","Get begin index of Seq","Get end index of Seq","Get step size of Seq","Creates new Window object","set_position","Set window starting position on the screen","Set window title","set_visibility","Set window visibility","Set window size","set_colormap","Set color map to be used for rendering image, it can take…","Returns true if the window close is triggered by the user","Setup display layout in multiview mode","Used in multiview mode to swap back buffer with front…","Set the current sub-region to render","set_axes_titles","Set chart axes titles","set_axes_limits_compute","Set chart axes limits by computing limits from data","set_axes_limits_2d","Set 2d chart axes limits","set_axes_limits_3d","Set 3d chart axes limits","Render given Array as an image","Render given two Array's `x` and `y` as a 2d line plot","Render given Array's `x`, `y` and `z` as a 3d line plot","Render give Arrays of points as a 3d line plot","Render given Array as a histogram","draw_surface","Render give Arrays as 3d surface","draw_scatter2","Render given Arrays as 2d scatter plot","draw_scatter3","Render given Arrays as 3d scatter plot","draw_scatter","Render give Array as 3d scatter plot","draw_vector_field2","Render given Arrays as 2d vector field","draw_vector_field3","Render given Arrays as 3d vector field","draw_vector_field","Render given Array as vector field","Create a new random engine object","Set seed for random engine","Get seed of the random engine","Returns the native FFI handle for Rust object `RandomEngine`","Create and return an object of type Features","num_features","Get total number of features found","Get x coordinates Array","Get y coordinates Array","Get score Array","orientation","Get orientation Array","Get features size Array","Get the internal handle for Features object","ErrorCallback","Signature of error handling callback function","Default Philon RandomEngine that points to PHILOX_4X32_10","Default Threefry RandomEngine that points to…","Default Mersenne RandomEngine that points to…","DEFAULT_RANDOM_ENGINE","Default RandomEngine that defaults to PHILOX","Type Trait to convert to an Array","This type alias always points to `Self` which is the type…","Get an Array of implementors type","Type Trait to generate a constant Array of given size","The type of Array object returned by generate function","Create an Array of `dims` size from scalar value `self`.","Trait bound indicating indexability","Set indexing object for a given dimension","Types of the data that can be generated using ArrayFire…","This type alias points to `Self` always.","This type alias points to the data type used to hold real…","This type alias points to `f32` for all 32 bit size types…","This type alias points to `f64`/`f32` for floating point…","UnaryOutType","This type alias is used to define the output Array type…","ComplexOutType","This type alias points to complex type created from a…","MeanOutType","AggregateOutType","SobelOutType","This type alias points to the output type for given input…","get_af_dtype","Return trait implmentors corresponding DType","This is an internal trait defined and implemented by…","This type alias points to the type of the result obtained…","ComplexFloating","Trait qualifier to accept complex data(numbers)","Trait qualifier to accept either real or complex typed data","RealFloating","Trait qualifier to accept real data(numbers)","Trait qualifier indicating it can hold real numbers only","CovarianceComputable","EdgeComputable","Trait qualifier for given type indicating if edge…","MedianComputable","MomentsComputable","GrayRGBConvertible","Trait qualifier for given type indicating conversion…","ImageFilterType","ImageNativeType","Trait qualifier for the type of Arrays accepted by scan…","Macro to print the current stats of ArrayFire's memory…","Join multiple Arrays along a given dimension","Print given message before printing out the Array to…","Evaluate arbitrary number of arrays"];
searchIndex[R[795]]={"doc":R[863],"i":[[3,"Array",R[795],R[864],N,N],[3,"Dim4",E,R[865],N,N],[3,R[866],E,R[867],N,N],[3,"Indexer",E,R[868],N,N],[3,"Seq",E,R[869],N,N],[3,"Window",E,R[870],N,N],[3,R[856],E,R[871],N,N],[3,R[872],E,R[873],N,N],[4,"AfError",E,R[874],N,N],[13,"SUCCESS",E,R[875],0,N],[13,R[876],E,R[877],0,N],[13,R[878],E,R[879],0,N],[13,R[880],E,R[881],0,N],[13,R[882],E,R[883],0,N],[13,"ERR_ARG",E,R[884],0,N],[13,"ERR_SIZE",E,R[885],0,N],[13,"ERR_TYPE",E,R[886],0,N],[13,R[887],E,R[888],0,N],[13,R[889],E,R[890],0,N],[13,R[891],E,R[892],0,N],[13,R[893],E,R[894],0,N],[13,R[895],E,R[896],0,N],[13,R[897],E,R[898],0,N],[13,R[899],E,R[900],0,N],[13,R[901],E,R[902],0,N],[13,R[903],E,R[904],0,N],[4,"Backend",E,R[905],N,N],[13,R[809],E,R[906],1,N],[13,"CPU",E,R[907],1,N],[13,"CUDA",E,R[908],1,N],[13,"OPENCL",E,R[909],1,N],[4,"DType",E,R[910],N,N],[13,"F32",E,R[796],2,N],[13,"C32",E,R[797],2,N],[13,"F64",E,R[798],2,N],[13,"C64",E,R[799],2,N],[13,"B8",E,R[800],2,N],[13,"S32",E,R[801],2,N],[13,"U32",E,R[802],2,N],[13,"U8",E,R[803],2,N],[13,"S64",E,R[804],2,N],[13,"U64",E,R[805],2,N],[13,"S16",E,R[806],2,N],[13,"U16",E,R[807],2,N],[4,R[843],E,R[911],N,N],[13,"NEAREST",E,R[912],3,N],[13,"LINEAR",E,R[913],3,N],[13,"BILINEAR",E,R[914],3,N],[13,"CUBIC",E,R[915],3,N],[13,"LOWER",E,R[916],3,N],[13,R[917],E,R[918],3,N],[13,R[919],E,R[920],3,N],[13,"BICUBIC",E,R[921],3,N],[13,R[922],E,R[923],3,N],[13,R[924],E,R[925],3,N],[4,R[844],E,R[926],N,N],[13,"ZERO",E,R[927],4,N],[13,R[928],E,R[929],4,N],[4,R[845],E,R[930],N,N],[13,"FOUR",E,R[931],5,N],[13,"EIGHT",E,R[932],5,N],[4,R[933],E,R[934],N,N],[13,R[809],E,R[935],6,N],[13,"EXPAND",E,R[936],6,N],[4,R[846],E,R[937],N,N],[13,"AUTO",E,R[938],7,N],[13,"SPATIAL",E,R[939],7,N],[13,R[940],E,R[941],7,N],[4,R[847],E,R[942],N,N],[13,"SAD",E,R[943],8,N],[13,"ZSAD",E,R[944],8,N],[13,"LSAD",E,R[945],8,N],[13,"SSD",E,R[946],8,N],[13,"ZSSD",E,R[947],8,N],[13,"LSSD",E,R[948],8,N],[13,"NCC",E,R[949],8,N],[13,"ZNCC",E,R[950],8,N],[13,"SHD",E,R[951],8,N],[4,R[848],E,R[952],N,N],[13,"GRAY",E,R[953],9,N],[13,"RGB",E,R[954],9,N],[13,"HSV",E,R[955],9,N],[4,"MatProp",E,R[956],N,N],[13,"NONE",E,R[957],10,N],[13,"TRANS",E,R[958],10,N],[13,"CTRANS",E,R[959],10,N],[13,"UPPER",E,R[960],10,N],[13,"LOWER",E,R[961],10,N],[13,"DIAGUNIT",E,R[962],10,N],[13,"SYM",E,R[963],10,N],[13,"POSDEF",E,R[964],10,N],[13,"ORTHOG",E,R[965],10,N],[13,"TRIDIAG",E,R[966],10,N],[13,R[967],E,R[968],10,N],[4,R[969],E,R[970],N,N],[13,"VECTOR_1",E,R[971],11,N],[13,R[972],E,R[973],11,N],[13,"VECTOR_2",E,R[974],11,N],[13,"VECTOR_P",E,R[975],11,N],[13,"MATRIX_1",E,R[976],11,N],[13,R[977],E,R[978],11,N],[13,"MATRIX_2",E,R[979],11,N],[13,R[980],E,R[981],11,N],[4,R[982],E,R[983],N,N],[13,R[809],E,R[984],12,N],[13,"SPECTRUM",E,R[985],12,N],[13,"COLORS",E,"Colors",12,N],[13,"RED",E,R[986],12,N],[13,"MOOD",E,R[987],12,N],[13,"HEAT",E,R[988],12,N],[13,"BLUE",E,R[989],12,N],[4,"YCCStd",E,R[990],N,N],[13,"YCC_601",E,R[991],13,N],[13,"YCC_709",E,R[992],13,N],[13,"YCC_2020",E,R[993],13,N],[4,R[849],E,R[994],N,N],[13,"RANSAC",E,R[995],14,N],[13,"LMEDS",E,R[996],14,N],[4,R[850],E,R[997],N,N],[13,"NONE",E,R[998],15,N],[13,"POINT",E,R[999],15,N],[13,"CIRCLE",E,R[1000],15,N],[13,"SQUARE",E,R[1001],15,N],[13,"TRIANGLE",E,R[1002],15,N],[13,"CROSS",E,R[1003],15,N],[13,"PLUS",E,R[1004],15,N],[13,"STAR",E,R[1005],15,N],[4,R[851],E,R[1006],N,N],[13,"M00",E,R[1007],16,N],[13,"M01",E,R[1008],16,N],[13,"M10",E,R[1009],16,N],[13,"M11",E,R[1010],16,N],[13,R[1011],E,R[1012],16,N],[4,R[852],E,R[1013],N,N],[13,"DENSE",E,R[1014],17,N],[13,"CSR",E,R[1015],17,N],[13,"CSC",E,R[1016],17,N],[13,"COO",E,R[1017],17,N],[4,"BinaryOp",E,R[1018],N,N],[13,"ADD",E,R[1019],18,N],[13,"MUL",E,R[1020],18,N],[13,"MIN",E,R[1021],18,N],[13,"MAX",E,R[1022],18,N],[4,R[853],E,R[1023],N,N],[13,R[1024],E,R[1025],19,N],[13,R[1026],E,R[1027],19,N],[13,R[1028],E,R[1029],19,N],[4,"Scalar",E,R[1030],N,N],[13,"F32",E,R[796],20,N],[13,"C32",E,R[797],20,N],[13,"F64",E,R[798],20,N],[13,"C64",E,R[799],20,N],[13,"B8",E,R[800],20,N],[13,"S32",E,R[801],20,N],[13,"U32",E,R[802],20,N],[13,"U8",E,R[803],20,N],[13,"S64",E,R[804],20,N],[13,"U64",E,R[805],20,N],[13,"S16",E,R[806],20,N],[13,"U16",E,R[807],20,N],[4,R[854],E,R[1031],N,N],[13,"MANUAL",E,R[1032],21,N],[13,"OTSU",E,R[1033],21,N],[4,R[855],E,R[1034],N,N],[13,"QUADRATIC",E,R[808],22,N],[13,R[1035],E,R[1036],22,N],[13,R[809],E,R[1037],22,N],[4,"FluxFn",E,R[1038],N,N],[13,"GRADIENT",E,R[808],23,N],[13,"MCDE",E,R[1039],23,N],[13,R[809],E,R[1040],23,N],[4,"TopkFn",E,R[1041],N,N],[13,"MIN",E,R[1042],24,N],[13,"MAX",E,R[1043],24,N],[13,R[809],E,R[1044],24,N],[5,"print",E,R[1045],N,[[["array"]]]],[5,"print_gen",E,R[1046],N,[[[R[3]],["i32"],["array"],[R[11],["i32"]]]]],[5,R[1047],E,R[1048],N,[[["array"],["vec",["array"]]]]],[5,R[1049],E,R[1050],N,[[["bool"]]]],[5,R[1051],E,R[1052],N,[[],["bool"]]],[5,"sum",E,R[1053],N,[[["i32"],["array"]],["array"]]],[5,"product",E,R[1054],N,[[["i32"],["array"]],["array"]]],[5,"min",E,R[1055],N,[[["i32"],["array"]],["array"]]],[5,"max",E,R[1056],N,[[["i32"],["array"]],["array"]]],[5,"all_true",E,R[1057],N,[[["i32"],["array"]],[["array",["bool"]],["bool"]]]],[5,"any_true",E,R[1058],N,[[["i32"],["array"]],[["array",["bool"]],["bool"]]]],[5,"count",E,R[1059],N,[[["i32"],["array"]],[["u32"],["array",["u32"]]]]],[5,"accum",E,R[1060],N,[[["i32"],["array"]],["array"]]],[5,"diff1",E,R[1061],N,[[["i32"],["array"]],["array"]]],[5,"diff2",E,R[1062],N,[[["i32"],["array"]],["array"]]],[5,"sum_nan",E,R[1063],N,[[["i32"],["array"],["f64"]],["array"]]],[5,R[1064],E,R[1065],N,[[["i32"],["array"],["f64"]],["array"]]],[5,"sum_all",E,R[1066],N,[[["array"]]]],[5,R[1067],E,R[1068],N,[[["array"]]]],[5,"min_all",E,R[1069],N,[[["array"]]]],[5,"max_all",E,R[1070],N,[[["array"]]]],[5,R[1071],E,R[1072],N,[[["array"]]]],[5,R[1073],E,R[1074],N,[[["array"]]]],[5,"count_all",E,R[1075],N,[[["array"]]]],[5,R[1076],E,R[1077],N,[[["array"],["f64"]]]],[5,R[1078],E,R[1079],N,[[["array"],["f64"]]]],[5,"imin",E,R[1080],N,[[["i32"],["array"]]]],[5,"imax",E,R[1081],N,[[["i32"],["array"]]]],[5,"imin_all",E,R[1082],N,[[["array"]]]],[5,"imax_all",E,R[1083],N,[[["array"]]]],[5,"locate",E,R[1084],N,[[["array"]],[["u32"],["array",["u32"]]]]],[5,"sort",E,R[810],N,[[["u32"],["array"],["bool"]],["array"]]],[5,"sort_index",E,R[810],N,[[["u32"],["array"],["bool"]]]],[5,R[1085],E,R[810],N,[[["u32"],["bool"],["array"],["array"]]]],[5,"set_unique",E,R[1086],N,[[["array"],["bool"]],["array"]]],[5,"set_union",E,R[1087],N,[[["array"],["bool"]],["array"]]],[5,R[1088],E,R[1089],N,[[["array"],["bool"]],["array"]]],[5,"scan",E,R[1090],N,[[[R[837]],["i32"],["array"],["bool"]],["array"]]],[5,R[1091],E,R[1092],N,[[[R[837]],["i32"],["bool"],["array"],["array"]],["array"]]],[5,"abs",E,R[1093],N,[[["array"]],["array"]]],[5,"arg",E,R[1094],N,[[["array"]],["array"]]],[5,"trunc",E,R[1095],N,[[["array"]],["array"]]],[5,"sign",E,R[1096],N,[[["array"]],["array"]]],[5,"round",E,R[1097],N,[[["array"]],["array"]]],[5,"floor",E,R[1098],N,[[["array"]],["array"]]],[5,"ceil",E,R[1099],N,[[["array"]],["array"]]],[5,"sigmoid",E,R[1100],N,[[["array"]],["array"]]],[5,"expm1",E,R[1101],N,[[["array"]],["array"]]],[5,"erf",E,R[1102],N,[[["array"]],["array"]]],[5,"erfc",E,R[1103],N,[[["array"]],["array"]]],[5,"log10",E,R[1104],N,[[["array"]],["array"]]],[5,"log1p",E,R[1105],N,[[["array"]],["array"]]],[5,"log2",E,R[1106],N,[[["array"]],["array"]]],[5,"cbrt",E,R[1107],N,[[["array"]],["array"]]],[5,"tgamma",E,R[1108],N,[[["array"]],["array"]]],[5,"lgamma",E,R[1109],N,[[["array"]],["array"]]],[5,"acosh",E,R[1110],N,[[["array"]],["array"]]],[5,"acos",E,R[1111],N,[[["array"]],["array"]]],[5,"asin",E,R[1112],N,[[["array"]],["array"]]],[5,"asinh",E,R[1113],N,[[["array"]],["array"]]],[5,"atan",E,R[1114],N,[[["array"]],["array"]]],[5,"atanh",E,R[1115],N,[[["array"]],["array"]]],[5,"cos",E,R[1116],N,[[["array"]],["array"]]],[5,"cosh",E,R[1117],N,[[["array"]],["array"]]],[5,"exp",E,R[1118],N,[[["array"]],["array"]]],[5,"log",E,R[1119],N,[[["array"]],["array"]]],[5,"sin",E,R[1120],N,[[["array"]],["array"]]],[5,"sinh",E,R[1121],N,[[["array"]],["array"]]],[5,"sqrt",E,R[1122],N,[[["array"]],["array"]]],[5,"tan",E,R[1123],N,[[["array"]],["array"]]],[5,"tanh",E,R[1124],N,[[["array"]],["array"]]],[5,"real",E,R[1125],N,[[["array"]],["array"]]],[5,"imag",E,R[1126],N,[[["array"]],["array"]]],[5,"cplx",E,R[1127],N,[[["array"]],["array"]]],[5,"conjg",E,R[1128],N,[[["array"]],["array"]]],[5,"pow2",E,R[1129],N,[[["array"]],["array"]]],[5,"factorial",E,R[1130],N,[[["array"]],["array"]]],[5,"iszero",E,R[1131],N,[[["array"]],[["array",["bool"]],["bool"]]]],[5,"isinf",E,R[1132],N,[[["array"]],[["array",["bool"]],["bool"]]]],[5,"isnan",E,R[1133],N,[[["array"]],[["array",["bool"]],["bool"]]]],[5,"bitand",E,R[1134],N,[[["array"],["array"],["bool"]],["array"]]],[5,"bitor",E,R[1135],N,[[["array"],["array"],["bool"]],["array"]]],[5,"bitxor",E,R[1136],N,[[["array"],["array"],["bool"]],["array"]]],[5,"neq",E,R[1137],N,[[["array"],["array"],["bool"]],["array"]]],[5,"and",E,R[1138],N,[[["array"],["array"],["bool"]],["array"]]],[5,"or",E,R[1139],N,[[["array"],["array"],["bool"]],["array"]]],[5,"minof",E,R[1140],N,[[["array"],["array"],["bool"]],["array"]]],[5,"maxof",E,R[1141],N,[[["array"],["array"],["bool"]],["array"]]],[5,"hypot",E,R[1142],N,[[["array"],["array"],["bool"]],["array"]]],[5,"add",E,R[1143],N,[[[U],[T],["bool"]],["array"]]],[5,"sub",E,R[1144],N,[[[U],[T],["bool"]],["array"]]],[5,"mul",E,R[1145],N,[[[U],[T],["bool"]],["array"]]],[5,"div",E,R[1146],N,[[[U],[T],["bool"]],["array"]]],[5,"rem",E,R[1147],N,[[[U],[T],["bool"]],["array"]]],[5,"shiftl",E,R[1148],N,[[[U],[T],["bool"]],["array"]]],[5,"shiftr",E,R[1149],N,[[[U],[T],["bool"]],["array"]]],[5,"modulo",E,R[1150],N,[[[U],[T],["bool"]],["array"]]],[5,"atan2",E,R[1151],N,[[[U],[T],["bool"]],["array"]]],[5,"cplx2",E,R[1152],N,[[[U],[T],["bool"]],["array"]]],[5,"root",E,R[1153],N,[[[U],[T],["bool"]],["array"]]],[5,"pow",E,R[1154],N,[[[U],[T],["bool"]],["array"]]],[5,"lt",E,R[1155],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"gt",E,R[1156],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"le",E,R[1157],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"ge",E,R[1158],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"eq",E,R[1159],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"clamp",E,R[1160],N,[[["c"],["array"],["bool"]],["array"]]],[5,R[1161],E,R[1162],N,[[[R[832]]]]],[5,R[1163],E,R[1164],N,[[],["u32"]]],[5,R[1165],E,R[1166],N,[[],[[R[832]],["vec",[R[832]]]]]],[5,R[1167],E,R[1168],N,[[],[R[832]]]],[5,"matmul",E,R[1169],N,[[["array"],[R[835]]],["array"]]],[5,"dot",E,R[1170],N,[[["array"],[R[835]]],["array"]]],[5,"transpose",E,R[1171],N,[[["array"],["bool"]],[[R[811]],["array"]]]],[5,R[1172],E,R[1173],N,[[["array"],["bool"]]]],[5,"constant",E,R[1174],N,[[["dim4"],[R[1175]]],["array"]]],[5,"range",E,R[1176],N,[[["dim4"],["i32"]],[[R[811]],["array"]]]],[5,"iota",E,R[1177],N,[[["dim4"]],[[R[811]],["array"]]]],[5,"identity",E,R[1178],N,[[["dim4"]],[[R[811]],["array"]]]],[5,R[1179],E,R[1180],N,[[["i32"],["array"]],["array"]]],[5,R[1181],E,R[1182],N,[[["i32"],["array"]],["array"]]],[5,"join",E,R[1183],N,[[["i32"],["array"]],["array"]]],[5,R[831],E,R[1184],N,[[["i32"],["array"],["vec",["array"]]],["array"]]],[5,"tile",E,R[1185],N,[[["dim4"],["array"]],["array"]]],[5,"reorder",E,R[1186],N,[[["dim4"],["array"]],["array"]]],[5,"shift",E,R[1187],N,[[["array"]],["array"]]],[5,"moddims",E,R[1188],N,[[["dim4"],["array"]],["array"]]],[5,"flat",E,R[1189],N,[[["array"]],["array"]]],[5,"flip",E,R[1190],N,[[["u32"],["array"]],["array"]]],[5,"lower",E,R[1191],N,[[["array"],["bool"]],["array"]]],[5,"upper",E,R[1192],N,[[["array"],["bool"]],["array"]]],[5,"select",E,R[812],N,[[["array"],["array"]],["array"]]],[5,"selectl",E,R[812],N,[[["array"],["f64"],["array"]],["array"]]],[5,"selectr",E,R[812],N,[[["array"],["f64"],["array"]],["array"]]],[5,"replace",E,R[813],N,[[["array"],["array"],["array"]]]],[5,R[1193],E,R[813],N,[[["f64"],["array"],["array"]]]],[5,R[1194],E,R[1195],N,[[]]],[5,R[1196],E,R[1197],N,[[],[["cow",["str"]],["str"]]]],[5,"info",E,R[1198],N,[[]]],[5,R[1199],E,R[1200],N,[[["bool"]],[R[3]]]],[5,R[1201],E,R[1202],N,[[]]],[5,"init",E,R[1203],N,[[]]],[5,R[1204],E,R[1205],N,[[],["i32"]]],[5,R[1206],E,R[1207],N,[[["i32"]],["bool"]]],[5,"set_device",E,R[1208],N,[[["i32"]]]],[5,"get_device",E,R[1209],N,[[],["i32"]]],[5,R[1210],E,R[1211],N,[[]]],[5,R[1212],E,R[1213],N,[[[R[3]],["i32"]]]],[5,R[1214],E,R[1215],N,[[["usize"]]]],[5,R[1216],E,R[1217],N,[[],["usize"]]],[5,"device_gc",E,R[1218],N,[[]]],[5,"sync",E,R[1219],N,[[["i32"]]]],[5,R[1220],E,R[1221],N,[[["aferror"]]]],[5,R[1222],E,R[1223],N,[[["callback"]]]],[5,"index",E,R[1224],N,[[["array"]],["array"]]],[5,"row",E,R[1225],N,[[["array"],["u64"]],["array"]]],[5,"set_row",E,R[1226],N,[[["array"],["u64"]],["array"]]],[5,"rows",E,R[1227],N,[[["array"],["u64"]],["array"]]],[5,"set_rows",E,R[1228],N,[[["array"],["u64"]],["array"]]],[5,"col",E,R[1229],N,[[["array"],["u64"]],["array"]]],[5,"set_col",E,R[1230],N,[[["array"],["u64"]],["array"]]],[5,"cols",E,R[1231],N,[[["array"],["u64"]],["array"]]],[5,"set_cols",E,R[1232],N,[[["array"],["u64"]],["array"]]],[5,"slice",E,R[1233],N,[[["array"],["u64"]],["array"]]],[5,"set_slice",E,R[1234],N,[[["array"],["u64"]],["array"]]],[5,"slices",E,R[1235],N,[[["array"],["u64"]],["array"]]],[5,"set_slices",E,R[1236],N,[[["array"],["u64"]],["array"]]],[5,"lookup",E,R[1237],N,[[["i32"],["array"],["array"]],["array"]]],[5,"assign_seq",E,R[1238],N,[[["array"]],["array"]]],[5,"index_gen",E,R[1239],N,[[["array"],["indexer"]],["array"]]],[5,"assign_gen",E,R[1240],N,[[["array"],["indexer"]],["array"]]],[5,"gradient",E,R[1241],N,[[["array"]]]],[5,"load_image",E,R[1242],N,[[[R[3]],["bool"]],["array"]]],[5,R[1243],E,R[1244],N,[[[R[3]]],["array"]]],[5,"save_image",E,R[1245],N,[[[R[3]],["array"]]]],[5,R[1246],E,R[1247],N,[[[R[3]],["array"]]]],[5,"resize",E,R[1248],N,[[["array"],["i64"],[R[814]]],[[R[811]],["array"]]]],[5,"transform",E,R[1249],N,[[["array"],["i64"],[R[814]],["bool"],["array"]],[[R[811]],["array"]]]],[5,"rotate",E,R[1250],N,[[["array"],["f64"],[R[814]],["bool"]],[[R[811]],["array"]]]],[5,"translate",E,R[1251],N,[[["array"],["i64"],[R[814]],["f32"]],[[R[811]],["array"]]]],[5,"scale",E,R[1252],N,[[["array"],["i64"],[R[814]],["f32"]],[[R[811]],["array"]]]],[5,"skew",E,R[1253],N,[[["array"],["i64"],[R[814]],["bool"],["f32"]],[[R[811]],["array"]]]],[5,"histogram",E,R[1254],N,[[["u32"],["array"],["f64"]],[["u32"],["array",["u32"]]]]],[5,"dilate",E,R[1255],N,[[["array"]],["array"]]],[5,"erode",E,R[1256],N,[[["array"]],["array"]]],[5,"dilate3",E,R[1257],N,[[["array"]],["array"]]],[5,"erode3",E,R[1258],N,[[["array"]],["array"]]],[5,"bilateral",E,R[1259],N,[[["array"],["bool"],["f32"]],["array"]]],[5,"mean_shift",E,R[1260],N,[[["u32"],["array"],["bool"],["f32"]],["array"]]],[5,"medfilt",E,R[1261],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,"minfilt",E,R[1262],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,"maxfilt",E,R[1263],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,R[1264],E,R[1265],N,[[["i32"],["f64"]],[["array",["f32"]],["f32"]]]],[5,R[1266],E,R[1267],N,[[["array"],[R[834]]],["array"]]],[5,"regions",E,R[1268],N,[[[R[833]],["array"]],["array"]]],[5,"sobel",E,R[1269],N,[[["u32"],["array"]]]],[5,"hist_equal",E,R[1270],N,[[["array"],["array"]],["array"]]],[5,"rgb2gray",E,R[1271],N,[[["array"],["f32"]],["array"]]],[5,"gray2rgb",E,R[1272],N,[[["array"],["f32"]],["array"]]],[5,"hsv2rgb",E,R[1273],N,[[["array"]],["array"]]],[5,"rgb2hsv",E,R[1274],N,[[["array"]],["array"]]],[5,"unwrap",E,R[1275],N,[[["array"],["i64"],["bool"]],[[R[811]],["array"]]]],[5,"wrap",E,R[1276],N,[[["array"],["i64"],["bool"]],[[R[811]],["array"]]]],[5,"sat",E,R[1277],N,[[["array"]],["array"]]],[5,"rgb2ycbcr",E,R[1278],N,[[["array"],["yccstd"]],["array"]]],[5,"ycbcr2rgb",E,R[1279],N,[[["array"],["yccstd"]],["array"]]],[5,R[1280],E,R[1281],N,[[],["bool"]]],[5,R[1282],E,R[1283],N,[[["array"],["f32"]],["array"]]],[5,"moments",E,R[1284],N,[[["array"],[R[816]]],[["array",["f32"]],["f32"]]]],[5,R[1285],E,R[1286],N,[[["array"],[R[816]]],["f64"]]],[5,"medfilt1",E,R[1287],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,"canny",E,R[1288],N,[[["u32"],["array"],[R[838]],["bool"],["f32"]],[["array",["bool"]],["bool"]]]],[5,R[1289],E,R[1290],N,[[["u32"],["fluxfn"],["array"],[R[839]],["f32"]],["array"]]],[5,"svd",E,R[1291],N,[[["array"]]]],[5,R[1292],E,R[1293],N,[[["array"]]]],[5,"lu",E,R[1294],N,[[["array"]]]],[5,"lu_inplace",E,R[1295],N,[[["array"],["bool"]],[["i32"],["array",["i32"]]]]],[5,"qr",E,R[1296],N,[[["array"]]]],[5,"qr_inplace",E,R[1297],N,[[["array"]],["array"]]],[5,"cholesky",E,R[1298],N,[[["array"],["bool"]]]],[5,R[1299],E,R[1300],N,[[["array"],["bool"]],["i32"]]],[5,"solve",E,R[817],N,[[["array"],[R[835]]],["array"]]],[5,"solve_lu",E,R[817],N,[[["array"],["array"],[R[835]]],["array"]]],[5,"inverse",E,R[1301],N,[[["array"],[R[835]]],["array"]]],[5,"rank",E,R[1302],N,[[["array"],["f64"]],["u32"]]],[5,"det",E,R[1303],N,[[["array"]]]],[5,"norm",E,R[1304],N,[[["array"],["f64"],[R[840]]],["f64"]]],[5,R[1305],E,R[1306],N,[[],["bool"]]],[5,"set_seed",E,R[1307],N,[[["u64"]]]],[5,"get_seed",E,R[1308],N,[[],["u64"]]],[5,"randu",E,R[1309],N,[[["dim4"]],["array"]]],[5,"randn",E,R[1310],N,[[["dim4"]],["array"]]],[5,R[1311],E,R[1312],N,[[],[R[818]]]],[5,R[1313],E,R[1314],N,[[[R[825]]]]],[5,R[1315],E,R[1316],N,[[["dim4"],[R[818]]],["array"]]],[5,R[1317],E,R[1318],N,[[["dim4"],[R[818]]],["array"]]],[5,"approx1",E,R[1319],N,[[["array"],[R[814]],["f32"],["array"]],["array"]]],[5,"approx2",E,R[1320],N,[[["array"],[R[814]],["f32"],["array"]],["array"]]],[5,R[1321],E,R[1322],N,[[["usize"]]]],[5,"fft",E,R[1323],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"fft2",E,R[1324],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"fft3",E,R[1325],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"ifft",E,R[1326],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"ifft2",E,R[1327],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"ifft3",E,R[1328],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"convolve1",E,R[1329],N,[[[R[819]],[R[820]],["array"],["array"]],["array"]]],[5,"convolve2",E,R[1330],N,[[[R[819]],[R[820]],["array"],["array"]],["array"]]],[5,"convolve3",E,R[1331],N,[[[R[819]],[R[820]],["array"],["array"]],["array"]]],[5,R[1332],E,R[1333],N,[[[R[820]],["array"],["array"]],["array"]]],[5,R[1334],E,R[1335],N,[[[R[820]],["array"],["array"]],["array"]]],[5,R[1336],E,R[1337],N,[[[R[820]],["array"],["array"]],["array"]]],[5,R[1338],E,R[1339],N,[[[R[820]],["array"],["array"]],["array"]]],[5,"fir",E,R[1340],N,[[["array"],["array"]],["array"]]],[5,"iir",E,R[1341],N,[[["array"]],[[R[811]],["array"]]]],[5,R[1342],E,R[1343],N,[[["f64"],["array"]]]],[5,R[1344],E,R[1345],N,[[["f64"],["array"]]]],[5,R[1346],E,R[1347],N,[[["f64"],["array"]]]],[5,R[1348],E,R[1349],N,[[["f64"],["array"]]]],[5,R[1350],E,R[1351],N,[[["f64"],["array"]]]],[5,R[1352],E,R[1353],N,[[["f64"],["array"]]]],[5,"fft_r2c",E,R[1354],N,[[["array"],["f64"],["i64"]],[["array",[R[364]]],[R[364]]]]],[5,"fft2_r2c",E,R[1355],N,[[["array"],["f64"],["i64"]],[["array",[R[364]]],[R[364]]]]],[5,"fft3_r2c",E,R[1356],N,[[["array"],["f64"],["i64"]],[["array",[R[364]]],[R[364]]]]],[5,"fft_c2r",E,R[1357],N,[[["array"],["f64"],["bool"]],["array"]]],[5,"fft2_c2r",E,R[1358],N,[[["array"],["f64"],["bool"]],["array"]]],[5,"fft3_c2r",E,R[1359],N,[[["array"],["f64"],["bool"]],["array"]]],[5,"sparse",E,R[1360],N,[[["array"],["array"],["u64"],[R[821]]],["array"]]],[5,R[1361],E,R[1362],N,[[["u64"],[R[821]]],["array"]]],[5,R[1363],E,R[1364],N,[[["array"],[R[821]]],["array"]]],[5,R[1365],E,R[1366],N,[[["array"],[R[821]]],["array"]]],[5,R[1367],E,R[1368],N,[[["array"]],["array"]]],[5,R[1369],E,R[1370],N,[[["array"]]]],[5,R[1371],E,R[1372],N,[[["array"]],["array"]]],[5,R[1373],E,R[1374],N,[[["array"]],[["i32"],["array",["i32"]]]]],[5,R[1375],E,R[1376],N,[[["array"]],[["i32"],["array",["i32"]]]]],[5,R[1377],E,R[1378],N,[[["array"]],["i64"]]],[5,R[1379],E,R[1380],N,[[["array"]],[R[821]]]],[5,"median",E,R[1381],N,[[["array"],["i64"]],["array"]]],[5,"mean",E,R[1382],N,[[["array"],["i64"]],["array"]]],[5,"stdev",E,R[1383],N,[[["array"],["i64"]],["array"]]],[5,R[1384],E,R[1385],N,[[["array"],["array"],["i64"]],["array"]]],[5,R[1386],E,R[1387],N,[[["array"],["array"],["i64"]],["array"]]],[5,"var",E,R[1388],N,[[["array"],["i64"],["bool"]],["array"]]],[5,"cov",E,R[1389],N,[[["array"],["bool"]],["array"]]],[5,"var_all",E,R[1390],N,[[["array"],["bool"]]]],[5,"mean_all",E,R[1391],N,[[["array"]]]],[5,"stdev_all",E,R[1392],N,[[["array"]]]],[5,"median_all",E,R[1393],N,[[["array"]]]],[5,R[1394],E,R[1395],N,[[["array"],["array"]]]],[5,R[1396],E,R[1397],N,[[["array"],["array"]]]],[5,"corrcoef",E,R[1398],N,[[["array"]]]],[5,"topk",E,R[1399],N,[[["u32"],["i32"],["array"],["topkfn"]]]],[5,"get_size",E,R[1400],N,[[["dtype"]],["usize"]]],[5,"fast",E,R[1401],N,[[["u32"],["array"],["bool"],["f32"]],[R[823]]]],[5,"harris",E,R[1402],N,[[["u32"],["array"],["f32"]],[R[823]]]],[5,"orb",E,R[1403],N,[[["u32"],["array"],["bool"],["f32"]]]],[5,R[1404],E,R[1405],N,[[["u32"],["array"],["i64"]]]],[5,R[1406],E,R[1407],N,[[["u32"],["array"],[R[822]],["i64"]]]],[5,R[1408],E,R[1409],N,[[["array"],[R[822]]],["array"]]],[5,"susan",E,R[1410],N,[[["u32"],["array"],["f32"]],[R[823]]]],[5,"dog",E,R[1411],N,[[["i32"],["array"]],["array"]]],[5,"homography",E,R[1412],N,[[["u32"],[R[836]],["f32"],["array"]]]],[11,"new",E,R[1413],25,[[["dim4"]],["self"]]],[11,R[1414],E,R[1415],25,[[["dim4"],["i64"]],["self"]]],[11,"new_empty",E,R[1416],25,[[["dim4"]],["self"]]],[11,R[1417],E,R[1418],25,[[["self"]],[R[832]]]],[11,R[1419],E,R[1420],25,[[["self"]],["i32"]]],[11,"elements",E,R[1421],25,[[["self"]],["usize"]]],[11,"get_type",E,R[1422],25,[[["self"]],["dtype"]]],[11,"dims",E,R[1423],25,[[["self"]],["dim4"]]],[11,"strides",E,R[1424],25,[[["self"]],["dim4"]]],[11,"numdims",E,R[1425],25,[[["self"]],["u32"]]],[11,"offset",E,R[1426],25,[[["self"]],["i64"]]],[11,"get",E,R[1427],25,[[["self"]],["i64"]]],[11,"host",E,R[1428],25,[[["self"]]]],[11,"eval",E,R[1429],25,[[["self"]]]],[11,"copy",E,R[1430],25,[[["self"]],["self"]]],[11,"is_empty",E,R[1431],25,[[["self"]],["bool"]]],[11,"is_scalar",E,R[1432],25,[[["self"]],["bool"]]],[11,"is_row",E,R[1433],25,[[["self"]],["bool"]]],[11,"is_column",E,R[1434],25,[[["self"]],["bool"]]],[11,"is_vector",E,R[1435],25,[[["self"]],["bool"]]],[11,R[828],E,R[1436],25,[[["self"]],["bool"]]],[11,"is_double",E,R[1437],25,[[["self"]],["bool"]]],[11,"is_single",E,R[1438],25,[[["self"]],["bool"]]],[11,"is_real",E,R[1439],25,[[["self"]],["bool"]]],[11,R[1440],E,R[1441],25,[[["self"]],["bool"]]],[11,R[779],E,R[1442],25,[[["self"]],["bool"]]],[11,"is_bool",E,R[1443],25,[[["self"]],["bool"]]],[11,"is_linear",E,R[1444],25,[[["self"]],["bool"]]],[11,"is_owner",E,R[1445],25,[[["self"]],["bool"]]],[11,"cast",E,R[1446],25,[[["self"]],[[R[811]],["array"]]]],[11,"is_sparse",E,R[1447],25,[[["self"]],["bool"]]],[11,"lock",E,R[1448],25,[[["self"]]]],[11,"unlock",E,R[1449],25,[[["self"]]]],[11,"device_ptr",E,R[1450],25,[[["self"]],["u64"]]],[11,R[1451],E,R[1452],25,[[["self"]],["usize"]]],[11,"new",E,R[1453],26,[[],["self"]]],[11,"elements",E,R[1454],26,[[["self"]],["u64"]]],[11,"ndims",E,R[1455],26,[[["self"]],["usize"]]],[11,"get",E,R[1456],26,[[["self"]]]],[11,"new",E,R[1457],27,[[[R[1458]]],["self"]]],[11,"call",E,R[1459],27,[[["aferror"],["self"]]]],[11,"new",E,R[1460],28,[[],["self"]]],[11,"set_index",E,R[1461],28,[[["u32"],[R[11],["bool"]],["self"],[T],["bool"]]]],[11,"len",E,R[1462],28,[[["self"]],["usize"]]],[11,"get",E,R[1463],28,[[["self"]],["i64"]]],[11,"new",E,R[1464],29,[[[T]],["self"]]],[11,"begin",E,R[1465],29,[[["self"]],[T]]],[11,"end",E,R[1466],29,[[["self"]],[T]]],[11,"step",E,R[1467],29,[[["self"]],[T]]],[11,"new",E,R[1468],30,[[[R[3]],["i32"]],["self"]]],[11,R[1469],E,R[1470],30,[[["u32"],["self"]]]],[11,"set_title",E,R[1471],30,[[[R[3]],["self"]]]],[11,R[1472],E,R[1473],30,[[["self"],["bool"]]]],[11,"set_size",E,R[1474],30,[[["u32"],["self"]]]],[11,R[1475],E,R[1476],30,[[[R[841]],["self"]]]],[11,"is_closed",E,R[1477],30,[[["self"]],["bool"]]],[11,"grid",E,R[1478],30,[[["i32"],["self"]]]],[11,"show",E,R[1479],30,[[["self"]]]],[11,"set_view",E,R[1480],30,[[["i32"],["self"]]]],[11,R[1481],E,R[1482],30,[[[R[3]],["self"]]]],[11,R[1483],E,R[1484],30,[[["array"],["self"],["bool"],[R[11],["array"]]]]],[11,R[1485],E,R[1486],30,[[["self"],["bool"],["f32"]]]],[11,R[1487],E,R[1488],30,[[["self"],["bool"],["f32"]]]],[11,"draw_image",E,R[1489],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_plot2",E,R[1490],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_plot3",E,R[1491],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_plot",E,R[1492],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_hist",E,R[1493],30,[[[R[3]],["array"],["f64"],[R[11],[R[3]]],["self"]]]],[11,R[1494],E,R[1495],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,R[1496],E,R[1497],30,[[[R[3]],["array"],[R[824]],[R[11],[R[3]]],["self"]]]],[11,R[1498],E,R[1499],30,[[[R[3]],["array"],[R[824]],[R[11],[R[3]]],["self"]]]],[11,R[1500],E,R[1501],30,[[[R[3]],["array"],[R[824]],[R[11],[R[3]]],["self"]]]],[11,R[1502],E,R[1503],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,R[1504],E,R[1505],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,R[1506],E,R[1507],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"new",E,R[1508],31,[[[R[11],["u64"]],[R[825]],["u64"]],["self"]]],[11,"get_type",E,R[826],31,[[["self"]],[R[825]]]],[11,"set_type",E,R[826],31,[[["self"],[R[825]]]]],[11,"set_seed",E,R[1509],31,[[["self"],["u64"]]]],[11,"get_seed",E,R[1510],31,[[["self"]],["u64"]]],[11,"get",E,R[1511],31,[[["self"]],["i64"]]],[11,"new",E,R[1512],32,[[["u64"]],["self"]]],[11,R[1513],E,R[1514],32,[[["self"]],["i64"]]],[11,"xpos",E,R[1515],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"ypos",E,R[1516],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"score",E,R[1517],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,R[1518],E,R[1519],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"size",E,R[1520],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"get",E,R[1521],32,[[["self"]],["i64"]]],[6,R[1522],E,R[1523],N,N],[17,"PHILOX",E,R[1524],N,N],[17,"THREEFRY",E,R[1525],N,N],[17,"MERSENNE",E,R[1526],N,N],[17,R[1527],E,R[1528],N,N],[8,R[857],E,R[1529],N,N],[16,"OutType",E,R[1530],33,N],[10,"convert",E,R[1531],33,[[["self"]],["array"]]],[8,R[858],E,R[1532],N,N],[16,"OutType",E,R[1533],34,N],[10,"generate",E,R[1534],34,[[["dim4"],["self"]],["array"]]],[8,R[859],E,R[1535],N,N],[10,"set",E,R[1536],35,[[["u32"],["indexer"],[R[11],["bool"]],["self"],["bool"]]]],[8,R[860],E,R[1537],N,N],[16,"InType",E,R[1538],36,N],[16,"BaseType",E,R[1539],36,N],[16,"AbsOutType",E,R[1540],36,N],[16,"ArgOutType",E,R[1541],36,N],[16,R[1542],E,R[1543],36,N],[16,R[1544],E,R[1545],36,N],[16,R[1546],E,R[827],36,N],[16,R[1547],E,R[827],36,N],[16,R[1548],E,R[1549],36,N],[10,R[1550],E,R[1551],36,[[],["dtype"]]],[8,R[861],E,R[1552],N,N],[16,"Output",E,R[1553],37,N],[8,R[1554],E,R[1555],N,N],[8,R[862],E,R[1556],N,N],[11,"is_real",E,E,38,[[],["bool"]]],[11,R[828],E,E,38,[[],["bool"]]],[8,R[1557],E,R[1558],N,N],[8,"RealNumber",E,R[1559],N,N],[8,R[1560],E,R[829],N,N],[8,R[1561],E,R[1562],N,N],[8,R[1563],E,R[829],N,N],[8,R[1564],E,R[829],N,N],[8,R[1565],E,R[1566],N,N],[8,R[1567],E,R[830],N,N],[8,R[1568],E,R[830],N,N],[8,"Scanable",E,R[1569],N,N],[14,"mem_info",E,R[1570],N,N],[14,R[831],E,R[1571],N,N],[14,"af_print",E,R[1572],N,N],[14,"eval",E,R[1573],N,N],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[18],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[[T],["self"]]]],[11,R[20],E,E,25,[[[U]],[R[4]]]],[11,R[26],E,E,25,[[["self"]],[T]]],[11,R[23],E,E,25,[[["self"]],[R[27]]]],[11,R[21],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[],[R[4]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[18],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[[T],["self"]]]],[11,R[25],E,E,26,[[["self"]],[R[3]]]],[11,R[20],E,E,26,[[[U]],[R[4]]]],[11,R[26],E,E,26,[[["self"]],[T]]],[11,R[23],E,E,26,[[["self"]],[R[27]]]],[11,R[21],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[],[R[4]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[20],E,E,27,[[[U]],[R[4]]]],[11,R[26],E,E,27,[[["self"]],[T]]],[11,R[23],E,E,27,[[["self"]],[R[27]]]],[11,R[21],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[],[R[4]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[20],E,E,28,[[[U]],[R[4]]]],[11,R[26],E,E,28,[[["self"]],[T]]],[11,R[23],E,E,28,[[["self"]],[R[27]]]],[11,R[21],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[],[R[4]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[18],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[[T],["self"]]]],[11,R[25],E,E,29,[[["self"]],[R[3]]]],[11,R[20],E,E,29,[[[U]],[R[4]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[R[27]]]],[11,R[21],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[],[R[4]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[18],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[[T],["self"]]]],[11,R[20],E,E,30,[[[U]],[R[4]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[R[27]]]],[11,R[21],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[],[R[4]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[18],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[[T],["self"]]]],[11,R[20],E,E,31,[[[U]],[R[4]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[R[27]]]],[11,R[21],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[],[R[4]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[18],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[[T],["self"]]]],[11,R[20],E,E,32,[[[U]],[R[4]]]],[11,R[26],E,E,32,[[["self"]],[T]]],[11,R[23],E,E,32,[[["self"]],[R[27]]]],[11,R[21],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[],[R[4]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,R[25],E,E,1,[[["self"]],[R[3]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[[T],["self"]]]],[11,R[20],E,E,3,[[[U]],[R[4]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[27]]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[],[R[4]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[[T],["self"]]]],[11,R[20],E,E,4,[[[U]],[R[4]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[R[27]]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[],[R[4]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[[T],["self"]]]],[11,R[20],E,E,5,[[[U]],[R[4]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[R[27]]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[],[R[4]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[[T],["self"]]]],[11,R[20],E,E,6,[[[U]],[R[4]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[R[27]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[],[R[4]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[[T],["self"]]]],[11,R[20],E,E,7,[[[U]],[R[4]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[R[27]]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[],[R[4]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[[T],["self"]]]],[11,R[20],E,E,8,[[[U]],[R[4]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[R[27]]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[],[R[4]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[[T],["self"]]]],[11,R[20],E,E,9,[[[U]],[R[4]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[R[27]]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[],[R[4]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[[T],["self"]]]],[11,R[20],E,E,10,[[[U]],[R[4]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[R[27]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[],[R[4]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[[T],["self"]]]],[11,R[20],E,E,11,[[[U]],[R[4]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[R[27]]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[],[R[4]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[[T],["self"]]]],[11,R[20],E,E,12,[[[U]],[R[4]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[R[27]]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[],[R[4]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[[T],["self"]]]],[11,R[20],E,E,13,[[[U]],[R[4]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[R[27]]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[],[R[4]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[18],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[[T],["self"]]]],[11,R[20],E,E,14,[[[U]],[R[4]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[R[27]]]],[11,R[21],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[],[R[4]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[18],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[[T],["self"]]]],[11,R[20],E,E,15,[[[U]],[R[4]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[R[27]]]],[11,R[21],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[],[R[4]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[18],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[[T],["self"]]]],[11,R[20],E,E,16,[[[U]],[R[4]]]],[11,R[26],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[R[27]]]],[11,R[21],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[],[R[4]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[18],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[[T],["self"]]]],[11,R[20],E,E,17,[[[U]],[R[4]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[R[27]]]],[11,R[21],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[],[R[4]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[18],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[[T],["self"]]]],[11,R[20],E,E,18,[[[U]],[R[4]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[R[27]]]],[11,R[21],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[],[R[4]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[18],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[[T],["self"]]]],[11,R[20],E,E,19,[[[U]],[R[4]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[R[27]]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[],[R[4]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[18],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[[T],["self"]]]],[11,R[20],E,E,20,[[[U]],[R[4]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[R[27]]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[],[R[4]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[18],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[[T],["self"]]]],[11,R[20],E,E,21,[[[U]],[R[4]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[R[27]]]],[11,R[21],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[],[R[4]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[18],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[[T],["self"]]]],[11,R[20],E,E,22,[[[U]],[R[4]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[R[27]]]],[11,R[21],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[],[R[4]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[18],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[[T],["self"]]]],[11,R[20],E,E,23,[[[U]],[R[4]]]],[11,R[26],E,E,23,[[["self"]],[T]]],[11,R[23],E,E,23,[[["self"]],[R[27]]]],[11,R[21],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[],[R[4]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[18],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[[T],["self"]]]],[11,R[20],E,E,24,[[[U]],[R[4]]]],[11,R[26],E,E,24,[[["self"]],[T]]],[11,R[23],E,E,24,[[["self"]],[R[27]]]],[11,R[21],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[],[R[4]]]],[11,"convert",E,E,25,[[["self"]],["array"]]],[11,"set",E,E,25,[[["u32"],["indexer"],[R[11],["bool"]],["self"],["bool"]]]],[11,"set",E,E,29,[[["u32"],["indexer"],[R[11],["bool"]],["self"],["bool"]]]],[11,"eq",E,E,0,[[["self"],["aferror"]],["bool"]]],[11,"eq",E,E,1,[[[R[832]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["dtype"]],["bool"]]],[11,"eq",E,E,3,[[[R[814]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[815]]],["bool"]]],[11,"eq",E,E,5,[[[R[833]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[820]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[819]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[822]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[834]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[835]]],["bool"]]],[11,"eq",E,E,11,[[[R[840]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[841]],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["yccstd"]],["bool"]]],[11,"eq",E,E,14,[[[R[836]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[824]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[816]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[821]]],["bool"]]],[11,"eq",E,E,18,[[[R[837]],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[825]],["self"]],["bool"]]],[11,"eq",E,E,20,[[["scalar"],["self"]],["bool"]]],[11,"ne",E,E,20,[[["scalar"],["self"]],["bool"]]],[11,"eq",E,E,21,[[[R[838]],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[839]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["fluxfn"]],["bool"]]],[11,"eq",E,E,24,[[["topkfn"],["self"]],["bool"]]],[11,"eq",E,E,26,[[["dim4"],["self"]],["bool"]]],[11,"ne",E,E,26,[[["dim4"],["self"]],["bool"]]],[11,"clone",E,E,25,[[["self"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["aferror"]]],[11,"clone",E,E,1,[[["self"]],[R[832]]]],[11,"clone",E,E,2,[[["self"]],["dtype"]]],[11,"clone",E,E,3,[[["self"]],[R[814]]]],[11,"clone",E,E,4,[[["self"]],[R[815]]]],[11,"clone",E,E,5,[[["self"]],[R[833]]]],[11,"clone",E,E,6,[[["self"]],[R[820]]]],[11,"clone",E,E,7,[[["self"]],[R[819]]]],[11,"clone",E,E,8,[[["self"]],[R[822]]]],[11,"clone",E,E,9,[[["self"]],[R[834]]]],[11,"clone",E,E,10,[[["self"]],[R[835]]]],[11,"clone",E,E,11,[[["self"]],[R[840]]]],[11,"clone",E,E,12,[[["self"]],[R[841]]]],[11,"clone",E,E,13,[[["self"]],["yccstd"]]],[11,"clone",E,E,14,[[["self"]],[R[836]]]],[11,"clone",E,E,15,[[["self"]],[R[824]]]],[11,"clone",E,E,16,[[["self"]],[R[816]]]],[11,"clone",E,E,17,[[["self"]],[R[821]]]],[11,"clone",E,E,18,[[["self"]],[R[837]]]],[11,"clone",E,E,19,[[["self"]],[R[825]]]],[11,"clone",E,E,20,[[["self"]],["scalar"]]],[11,"clone",E,E,21,[[["self"]],[R[838]]]],[11,"clone",E,E,22,[[["self"]],[R[839]]]],[11,"clone",E,E,23,[[["self"]],["fluxfn"]]],[11,"clone",E,E,24,[[["self"]],["topkfn"]]],[11,"clone",E,E,26,[[["self"]],["dim4"]]],[11,"clone",E,E,29,[[["self"]],["seq"]]],[11,"clone",E,E,30,[[["self"]],["window"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"from",E,E,30,[[["u64"]],["self"]]],[11,"from",E,E,31,[[["i64"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,3,[[["u32"]],["self"]]],[11,"from",E,E,6,[[["u32"]],["self"]]],[11,"from",E,E,7,[[["u32"]],["self"]]],[11,"from",E,E,8,[[["u32"]],["self"]]],[11,"from",E,E,12,[[["u32"]],["self"]]],[11,"from",E,E,17,[[["u32"]],["self"]]],[11,"from",E,E,18,[[["u32"]],["self"]]],[11,"from",E,E,19,[[["u32"]],["self"]]],[11,"drop",E,E,25,[[["self"]]]],[11,"drop",E,E,28,[[["self"]]]],[11,"drop",E,E,30,[[["self"]]]],[11,"drop",E,E,31,[[["self"]]]],[11,"drop",E,E,32,[[["self"]]]],[11,R[761],E,E,26,[[],["self"]]],[11,R[761],E,E,29,[[],["self"]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,4,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,5,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,6,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,7,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,8,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,9,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,10,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,11,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,12,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,13,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,14,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,15,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,16,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,17,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,18,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,19,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,20,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,21,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,22,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,23,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,24,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,26,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[100]]],[[R[842]],[R[4],[R[842]]]]]],[11,"fmt",E,E,0,[[["self"],[R[100]]],[[R[842]],[R[4],[R[842]]]]]],[11,"fmt",E,E,26,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,29,[[[R[100]],["self"]],[R[4]]]],[11,"div",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"div",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"div",E,E,25,[[["f64"]]]],[11,"div",E,E,25,[[["f32"]]]],[11,"div",E,E,25,[[["u64"]]]],[11,"div",E,E,25,[[["i64"]]]],[11,"div",E,E,25,[[["u32"]]]],[11,"div",E,E,25,[[["i32"]]]],[11,"div",E,E,25,[[["u8"]]]],[11,"div",E,E,25,[[["array"]]]],[11,"div",E,E,25,[[["array"]]]],[11,"add",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"add",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"add",E,E,25,[[["f64"]]]],[11,"add",E,E,25,[[["f32"]]]],[11,"add",E,E,25,[[["u64"]]]],[11,"add",E,E,25,[[["i64"]]]],[11,"add",E,E,25,[[["u32"]]]],[11,"add",E,E,25,[[["i32"]]]],[11,"add",E,E,25,[[["u8"]]]],[11,"add",E,E,25,[[["array"]]]],[11,"add",E,E,25,[[["array"]]]],[11,"sub",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"sub",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"sub",E,E,25,[[["f64"]]]],[11,"sub",E,E,25,[[["f32"]]]],[11,"sub",E,E,25,[[["u64"]]]],[11,"sub",E,E,25,[[["i64"]]]],[11,"sub",E,E,25,[[["u32"]]]],[11,"sub",E,E,25,[[["i32"]]]],[11,"sub",E,E,25,[[["u8"]]]],[11,"sub",E,E,25,[[["array"]]]],[11,"sub",E,E,25,[[["array"]]]],[11,"mul",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"mul",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"mul",E,E,25,[[["f64"]]]],[11,"mul",E,E,25,[[["f32"]]]],[11,"mul",E,E,25,[[["u64"]]]],[11,"mul",E,E,25,[[["i64"]]]],[11,"mul",E,E,25,[[["u32"]]]],[11,"mul",E,E,25,[[["i32"]]]],[11,"mul",E,E,25,[[["u8"]]]],[11,"mul",E,E,25,[[["array"]]]],[11,"mul",E,E,25,[[["array"]]]],[11,"rem",E,E,25,[[["array"]]]],[11,"rem",E,E,25,[[["array"]]]],[11,"neg",E,E,25,[[]]],[11,R[366],E,E,25,[[["array"],["self"]]]],[11,R[367],E,E,25,[[["array"],["self"]]]],[11,R[368],E,E,25,[[["array"],["self"]]]],[11,R[369],E,E,25,[[["array"],["self"]]]],[11,R[370],E,E,25,[[["array"],["self"]]]],[11,"bitand",E,E,25,[[["array"]]]],[11,"bitand",E,E,25,[[["array"]]]],[11,"bitor",E,E,25,[[["array"]]]],[11,"bitor",E,E,25,[[["array"]]]],[11,"bitxor",E,E,25,[[["array"]]]],[11,"bitxor",E,E,25,[[["array"]]]],[11,"shl",E,E,25,[[["array"]]]],[11,"shl",E,E,25,[[["array"]]]],[11,"shr",E,E,25,[[["array"]]]],[11,"shr",E,E,25,[[["array"]]]],[11,R[420],E,E,25,[[["array"],["self"]]]],[11,R[421],E,E,25,[[["array"],["self"]]]],[11,R[422],E,E,25,[[["array"],["self"]]]],[11,R[763],E,E,25,[[["array"],["self"]]]],[11,R[764],E,E,25,[[["array"],["self"]]]],[11,"index",E,E,26,[[["self"],["usize"]],["u64"]]],[11,R[102],E,E,0,[[["self"]],["str"]]],[11,"is_real",E,E,38,[[],["bool"]]],[11,R[828],E,E,38,[[],["bool"]]]],"p":[[4,"AfError"],[4,"Backend"],[4,"DType"],[4,R[843]],[4,R[844]],[4,R[845]],[4,R[933]],[4,R[846]],[4,R[847]],[4,R[848]],[4,"MatProp"],[4,R[969]],[4,R[982]],[4,"YCCStd"],[4,R[849]],[4,R[850]],[4,R[851]],[4,R[852]],[4,"BinaryOp"],[4,R[853]],[4,"Scalar"],[4,R[854]],[4,R[855]],[4,"FluxFn"],[4,"TopkFn"],[3,"Array"],[3,"Dim4"],[3,R[866]],[3,"Indexer"],[3,"Seq"],[3,"Window"],[3,R[856]],[3,R[872]],[8,R[857]],[8,R[858]],[8,R[859]],[8,R[860]],[8,R[861]],[8,R[862]]]};
searchIndex["libc"]={"doc":"Crate docs","i":[[3,"group","libc",E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[190],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,6,N],[3,R[191],E,E,N,N],[12,"s6_addr",E,E,7,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,8,N],[12,"imr_interface",E,E,8,N],[3,R[136],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,9,N],[12,"ipv6mr_interface",E,E,9,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,10,N],[12,"h_aliases",E,E,10,N],[12,"h_addrtype",E,E,10,N],[12,"h_length",E,E,10,N],[12,"h_addr_list",E,E,10,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,11,N],[12,"iov_len",E,E,11,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,12,N],[12,"events",E,E,12,N],[12,"revents",E,E,12,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,13,N],[12,"ws_col",E,E,13,N],[12,"ws_xpixel",E,E,13,N],[12,"ws_ypixel",E,E,13,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,14,N],[12,"l_linger",E,E,14,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,15,N],[3,R[137],E,E,N,N],[12,R[119],E,E,16,N],[12,"it_value",E,E,16,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,17,N],[12,"tms_stime",E,E,17,N],[12,"tms_cutime",E,E,17,N],[12,"tms_cstime",E,E,17,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,18,N],[12,"s_aliases",E,E,18,N],[12,"s_port",E,E,18,N],[12,"s_proto",E,E,18,N],[3,R[192],E,E,N,N],[12,"p_name",E,E,19,N],[12,"p_aliases",E,E,19,N],[12,"p_proto",E,E,19,N],[3,R[193],E,E,N,N],[12,"sa_family",E,E,20,N],[12,"sa_data",E,E,20,N],[3,R[138],E,E,N,N],[12,"sin_family",E,E,21,N],[12,"sin_port",E,E,21,N],[12,"sin_addr",E,E,21,N],[12,"sin_zero",E,E,21,N],[3,R[139],E,E,N,N],[12,"sin6_family",E,E,22,N],[12,"sin6_port",E,E,22,N],[12,"sin6_flowinfo",E,E,22,N],[12,"sin6_addr",E,E,22,N],[12,"sin6_scope_id",E,E,22,N],[3,R[140],E,E,N,N],[12,"sun_family",E,E,23,N],[12,"sun_path",E,E,23,N],[3,R[141],E,E,N,N],[12,"ss_family",E,E,24,N],[3,R[194],E,E,N,N],[12,"ai_flags",E,E,25,N],[12,"ai_family",E,E,25,N],[12,"ai_socktype",E,E,25,N],[12,"ai_protocol",E,E,25,N],[12,"ai_addrlen",E,E,25,N],[12,"ai_addr",E,E,25,N],[12,"ai_canonname",E,E,25,N],[12,"ai_next",E,E,25,N],[3,R[142],E,E,N,N],[12,"nl_family",E,E,26,N],[12,"nl_pid",E,E,26,N],[12,"nl_groups",E,E,26,N],[3,R[143],E,E,N,N],[12,"sll_family",E,E,27,N],[12,"sll_protocol",E,E,27,N],[12,"sll_ifindex",E,E,27,N],[12,"sll_hatype",E,E,27,N],[12,"sll_pkttype",E,E,27,N],[12,"sll_halen",E,E,27,N],[12,"sll_addr",E,E,27,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,28,N],[12,"tm_min",E,E,28,N],[12,"tm_hour",E,E,28,N],[12,"tm_mday",E,E,28,N],[12,"tm_mon",E,E,28,N],[12,"tm_year",E,E,28,N],[12,"tm_wday",E,E,28,N],[12,"tm_yday",E,E,28,N],[12,"tm_isdst",E,E,28,N],[12,"tm_gmtoff",E,E,28,N],[12,"tm_zone",E,E,28,N],[3,R[144],E,E,N,N],[12,"sched_priority",E,E,29,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,30,N],[12,"dli_fbase",E,E,30,N],[12,"dli_sname",E,E,30,N],[12,"dli_saddr",E,E,30,N],[3,R[145],E,E,N,N],[12,"events",E,E,31,N],[12,"u64",E,E,31,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,32,N],[12,"nodename",E,E,32,N],[12,"release",E,E,32,N],[12,"version",E,E,32,N],[12,"machine",E,E,32,N],[12,"domainname",E,E,32,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,33,N],[12,"thousands_sep",E,E,33,N],[12,"grouping",E,E,33,N],[12,"int_curr_symbol",E,E,33,N],[12,"currency_symbol",E,E,33,N],[12,"mon_decimal_point",E,E,33,N],[12,"mon_thousands_sep",E,E,33,N],[12,"mon_grouping",E,E,33,N],[12,"positive_sign",E,E,33,N],[12,"negative_sign",E,E,33,N],[12,"int_frac_digits",E,E,33,N],[12,"frac_digits",E,E,33,N],[12,"p_cs_precedes",E,E,33,N],[12,"p_sep_by_space",E,E,33,N],[12,"n_cs_precedes",E,E,33,N],[12,"n_sep_by_space",E,E,33,N],[12,"p_sign_posn",E,E,33,N],[12,"n_sign_posn",E,E,33,N],[12,"int_p_cs_precedes",E,E,33,N],[12,"int_p_sep_by_space",E,E,33,N],[12,"int_n_cs_precedes",E,E,33,N],[12,"int_n_sep_by_space",E,E,33,N],[12,"int_p_sign_posn",E,E,33,N],[12,"int_n_sign_posn",E,E,33,N],[3,R[195],E,E,N,N],[12,"sigev_value",E,E,34,N],[12,"sigev_signo",E,E,34,N],[12,"sigev_notify",E,E,34,N],[12,"sigev_notify_thread_id",E,E,34,N],[3,R[146],E,E,N,N],[12,"ipi_ifindex",E,E,35,N],[12,"ipi_spec_dst",E,E,35,N],[12,"ipi_addr",E,E,35,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,36,N],[12,"ifa_name",E,E,36,N],[12,"ifa_flags",E,E,36,N],[12,"ifa_addr",E,E,36,N],[12,"ifa_netmask",E,E,36,N],[12,"ifa_ifu",E,E,36,N],[12,"ifa_data",E,E,36,N],[3,R[147],E,E,N,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,37,N],[12,"d_off",E,E,37,N],[12,"d_reclen",E,E,37,N],[12,"d_type",E,E,37,N],[12,"d_name",E,E,37,N],[3,R[196],E,E,N,N],[12,"d_ino",E,E,38,N],[12,"d_off",E,E,38,N],[12,"d_reclen",E,E,38,N],[12,"d_type",E,E,38,N],[12,"d_name",E,E,38,N],[3,R[197],E,E,N,N],[12,"rlim_cur",E,E,39,N],[12,"rlim_max",E,E,39,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,40,N],[12,"gl_pathv",E,E,40,N],[12,"gl_offs",E,E,40,N],[12,"gl_flags",E,E,40,N],[3,R[148],E,E,N,N],[3,R[149],E,E,N,N],[3,R[150],E,E,N,N],[3,R[151],E,E,N,N],[3,R[152],E,E,N,N],[3,R[153],E,E,N,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,41,N],[12,"pw_passwd",E,E,41,N],[12,"pw_uid",E,E,41,N],[12,"pw_gid",E,E,41,N],[12,"pw_gecos",E,E,41,N],[12,"pw_dir",E,E,41,N],[12,"pw_shell",E,E,41,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,42,N],[12,"sp_pwdp",E,E,42,N],[12,"sp_lstchg",E,E,42,N],[12,"sp_min",E,E,42,N],[12,"sp_max",E,E,42,N],[12,"sp_warn",E,E,42,N],[12,"sp_inact",E,E,42,N],[12,"sp_expire",E,E,42,N],[12,"sp_flag",E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[154],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,"ssi_overrun",E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[3,R[155],E,E,N,N],[12,R[119],E,E,45,N],[12,"it_value",E,E,45,N],[3,"fsid_t",E,E,N,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,46,N],[12,"mq_maxmsg",E,E,46,N],[12,"mq_msgsize",E,E,46,N],[12,"mq_curmsgs",E,E,46,N],[3,R[132],E,E,N,N],[3,R[135],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,49,N],[12,"msg_len",E,E,49,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,50,N],[12,"sem_op",E,E,50,N],[12,"sem_flg",E,E,50,N],[3,R[156],E,E,N,N],[12,"time",E,E,51,N],[12,"type_",E,E,51,N],[12,"code",E,E,51,N],[12,"value",E,E,51,N],[3,R[198],E,E,N,N],[12,"bustype",E,E,52,N],[12,"vendor",E,E,52,N],[12,"product",E,E,52,N],[12,"version",E,E,52,N],[3,R[157],E,E,N,N],[12,"value",E,E,53,N],[12,"minimum",E,E,53,N],[12,"maximum",E,E,53,N],[12,"fuzz",E,E,53,N],[12,"flat",E,E,53,N],[12,"resolution",E,E,53,N],[3,R[158],E,E,N,N],[12,"flags",E,E,54,N],[12,"len",E,E,54,N],[12,"index",E,E,54,N],[12,"keycode",E,E,54,N],[12,"scancode",E,E,54,N],[3,R[159],E,E,N,N],[12,"type_",E,E,55,N],[12,"codes_size",E,E,55,N],[12,"codes_ptr",E,E,55,N],[3,R[160],E,E,N,N],[12,"length",E,E,56,N],[12,"delay",E,E,56,N],[3,R[161],E,E,N,N],[12,"button",E,E,57,N],[12,"interval",E,E,57,N],[3,R[162],E,E,N,N],[12,"attack_length",E,E,58,N],[12,"attack_level",E,E,58,N],[12,"fade_length",E,E,58,N],[12,"fade_level",E,E,58,N],[3,R[163],E,E,N,N],[12,"level",E,E,59,N],[12,R[120],E,E,59,N],[3,R[164],E,E,N,N],[12,"start_level",E,E,60,N],[12,"end_level",E,E,60,N],[12,R[120],E,E,60,N],[3,R[165],E,E,N,N],[12,"right_saturation",E,E,61,N],[12,"left_saturation",E,E,61,N],[12,"right_coeff",E,E,61,N],[12,"left_coeff",E,E,61,N],[12,"deadband",E,E,61,N],[12,"center",E,E,61,N],[3,R[166],E,E,N,N],[12,"waveform",E,E,62,N],[12,"period",E,E,62,N],[12,"magnitude",E,E,62,N],[12,"offset",E,E,62,N],[12,"phase",E,E,62,N],[12,R[120],E,E,62,N],[12,"custom_len",E,E,62,N],[12,"custom_data",E,E,62,N],[3,R[167],E,E,N,N],[12,"strong_magnitude",E,E,63,N],[12,"weak_magnitude",E,E,63,N],[3,R[168],E,E,N,N],[12,"type_",E,E,64,N],[12,"id",E,E,64,N],[12,"direction",E,E,64,N],[12,"trigger",E,E,64,N],[12,"replay",E,E,64,N],[12,U,E,E,64,N],[3,R[169],E,E,N,N],[12,"dlpi_addr",E,E,65,N],[12,"dlpi_name",E,E,65,N],[12,"dlpi_phdr",E,E,65,N],[12,"dlpi_phnum",E,E,65,N],[12,"dlpi_adds",E,E,65,N],[12,"dlpi_subs",E,E,65,N],[12,"dlpi_tls_modid",E,E,65,N],[12,"dlpi_tls_data",E,E,65,N],[3,R[199],E,E,N,N],[12,"p_type",E,E,66,N],[12,"p_offset",E,E,66,N],[12,"p_vaddr",E,E,66,N],[12,"p_paddr",E,E,66,N],[12,"p_filesz",E,E,66,N],[12,"p_memsz",E,E,66,N],[12,"p_flags",E,E,66,N],[12,"p_align",E,E,66,N],[3,R[200],E,E,N,N],[12,"p_type",E,E,67,N],[12,"p_flags",E,E,67,N],[12,"p_offset",E,E,67,N],[12,"p_vaddr",E,E,67,N],[12,"p_paddr",E,E,67,N],[12,"p_filesz",E,E,67,N],[12,"p_memsz",E,E,67,N],[12,"p_align",E,E,67,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,68,N],[12,"uid",E,E,68,N],[12,"gid",E,E,68,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,69,N],[12,"mnt_dir",E,E,69,N],[12,"mnt_type",E,E,69,N],[12,"mnt_opts",E,E,69,N],[12,"mnt_freq",E,E,69,N],[12,"mnt_passno",E,E,69,N],[3,R[170],E,E,N,N],[3,R[171],E,E,N,N],[3,R[172],E,E,N,N],[12,"cmd",E,E,70,N],[12,"version",E,E,70,N],[12,"reserved",E,E,70,N],[3,R[173],E,E,N,N],[12,"ipi6_addr",E,E,71,N],[12,"ipi6_ifindex",E,E,71,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,72,N],[12,"aio_lio_opcode",E,E,72,N],[12,"aio_reqprio",E,E,72,N],[12,"aio_buf",E,E,72,N],[12,"aio_nbytes",E,E,72,N],[12,"aio_sigevent",E,E,72,N],[12,"aio_offset",E,E,72,N],[3,R[174],E,E,N,N],[12,"e_termination",E,E,73,N],[12,"e_exit",E,E,73,N],[3,R[175],E,E,N,N],[12,"tv_sec",E,E,74,N],[12,"tv_usec",E,E,74,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,75,N],[12,"ut_pid",E,E,75,N],[12,"ut_line",E,E,75,N],[12,"ut_id",E,E,75,N],[12,"ut_user",E,E,75,N],[12,"ut_host",E,E,75,N],[12,"ut_exit",E,E,75,N],[12,"ut_session",E,E,75,N],[12,"ut_tv",E,E,75,N],[12,"ut_addr_v6",E,E,75,N],[3,R[133],E,E,N,N],[12,"sa_sigaction",E,E,76,N],[12,"sa_mask",E,E,76,N],[12,"sa_flags",E,E,76,N],[12,"sa_restorer",E,E,76,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,77,N],[12,"ss_flags",E,E,77,N],[12,"ss_size",E,E,77,N],[3,R[176],E,E,N,N],[12,"si_signo",E,E,78,N],[12,"si_errno",E,E,78,N],[12,"si_code",E,E,78,N],[12,"_pad",E,E,78,N],[3,R[201],E,E,N,N],[12,"gl_pathc",E,E,79,N],[12,"gl_pathv",E,E,79,N],[12,"gl_offs",E,E,79,N],[12,"gl_flags",E,E,79,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,80,N],[12,"f_bsize",E,E,80,N],[12,R[128],E,E,80,N],[12,"f_bfree",E,E,80,N],[12,R[129],E,E,80,N],[12,"f_files",E,E,80,N],[12,"f_ffree",E,E,80,N],[12,"f_fsid",E,E,80,N],[12,R[126],E,E,80,N],[12,R[127],E,E,80,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,81,N],[12,"msg_namelen",E,E,81,N],[12,"msg_iov",E,E,81,N],[12,"msg_iovlen",E,E,81,N],[12,"msg_control",E,E,81,N],[12,"msg_controllen",E,E,81,N],[12,"msg_flags",E,E,81,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,82,N],[12,"cmsg_level",E,E,82,N],[12,"cmsg_type",E,E,82,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,83,N],[12,"c_oflag",E,E,83,N],[12,"c_cflag",E,E,83,N],[12,"c_lflag",E,E,83,N],[12,"c_line",E,E,83,N],[12,"c_cc",E,E,83,N],[12,"c_ispeed",E,E,83,N],[12,"c_ospeed",E,E,83,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,84,N],[12,"l_whence",E,E,84,N],[12,"l_start",E,E,84,N],[12,"l_len",E,E,84,N],[12,"l_pid",E,E,84,N],[3,"sem_t",E,E,N,N],[3,R[177],E,E,N,N],[12,"arena",E,E,85,N],[12,"ordblks",E,E,85,N],[12,"smblks",E,E,85,N],[12,"hblks",E,E,85,N],[12,"hblkhd",E,E,85,N],[12,"usmblks",E,E,85,N],[12,"fsmblks",E,E,85,N],[12,"uordblks",E,E,85,N],[12,"fordblks",E,E,85,N],[12,"keepcost",E,E,85,N],[3,R[202],E,E,N,N],[12,"nlmsg_len",E,E,86,N],[12,"nlmsg_type",E,E,86,N],[12,"nlmsg_flags",E,E,86,N],[12,"nlmsg_seq",E,E,86,N],[12,"nlmsg_pid",E,E,86,N],[3,R[203],E,E,N,N],[12,"error",E,E,87,N],[12,"msg",E,E,87,N],[3,R[178],E,E,N,N],[12,"group",E,E,88,N],[3,R[179],E,E,N,N],[12,"nm_block_size",E,E,89,N],[12,"nm_block_nr",E,E,89,N],[12,"nm_frame_size",E,E,89,N],[12,"nm_frame_nr",E,E,89,N],[3,R[180],E,E,N,N],[12,"nm_status",E,E,90,N],[12,"nm_len",E,E,90,N],[12,"nm_group",E,E,90,N],[12,"nm_pid",E,E,90,N],[12,"nm_uid",E,E,90,N],[12,"nm_gid",E,E,90,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,91,N],[12,"nla_type",E,E,91,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,92,N],[12,"rt_dst",E,E,92,N],[12,"rt_gateway",E,E,92,N],[12,"rt_genmask",E,E,92,N],[12,"rt_flags",E,E,92,N],[12,"rt_pad2",E,E,92,N],[12,"rt_pad3",E,E,92,N],[12,"rt_tos",E,E,92,N],[12,"rt_class",E,E,92,N],[12,"rt_pad4",E,E,92,N],[12,"rt_metric",E,E,92,N],[12,"rt_dev",E,E,92,N],[12,"rt_mtu",E,E,92,N],[12,"rt_window",E,E,92,N],[12,"rt_irtt",E,E,92,N],[3,R[208],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,93,N],[12,"loads",E,E,93,N],[12,"totalram",E,E,93,N],[12,"freeram",E,E,93,N],[12,"sharedram",E,E,93,N],[12,"bufferram",E,E,93,N],[12,"totalswap",E,E,93,N],[12,"freeswap",E,E,93,N],[12,"procs",E,E,93,N],[12,"pad",E,E,93,N],[12,"totalhigh",E,E,93,N],[12,"freehigh",E,E,93,N],[12,"mem_unit",E,E,93,N],[12,"_f",E,E,93,N],[3,R[204],E,E,N,N],[12,"msg_perm",E,E,94,N],[12,"msg_stime",E,E,94,N],[12,"msg_rtime",E,E,94,N],[12,"msg_ctime",E,E,94,N],[12,"msg_qnum",E,E,94,N],[12,"msg_qbytes",E,E,94,N],[12,"msg_lspid",E,E,94,N],[12,"msg_lrpid",E,E,94,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,95,N],[12,"st_ino",E,E,95,N],[12,"st_nlink",E,E,95,N],[12,"st_mode",E,E,95,N],[12,"st_uid",E,E,95,N],[12,"st_gid",E,E,95,N],[12,"st_rdev",E,E,95,N],[12,"st_size",E,E,95,N],[12,R[121],E,E,95,N],[12,R[122],E,E,95,N],[12,"st_atime",E,E,95,N],[12,R[123],E,E,95,N],[12,"st_mtime",E,E,95,N],[12,R[124],E,E,95,N],[12,"st_ctime",E,E,95,N],[12,R[125],E,E,95,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,96,N],[12,"st_ino",E,E,96,N],[12,"st_nlink",E,E,96,N],[12,"st_mode",E,E,96,N],[12,"st_uid",E,E,96,N],[12,"st_gid",E,E,96,N],[12,"st_rdev",E,E,96,N],[12,"st_size",E,E,96,N],[12,R[121],E,E,96,N],[12,R[122],E,E,96,N],[12,"st_atime",E,E,96,N],[12,R[123],E,E,96,N],[12,"st_mtime",E,E,96,N],[12,R[124],E,E,96,N],[12,"st_ctime",E,E,96,N],[12,R[125],E,E,96,N],[3,R[181],E,E,N,N],[12,"f_type",E,E,97,N],[12,"f_bsize",E,E,97,N],[12,R[128],E,E,97,N],[12,"f_bfree",E,E,97,N],[12,R[129],E,E,97,N],[12,"f_files",E,E,97,N],[12,"f_ffree",E,E,97,N],[12,"f_fsid",E,E,97,N],[12,R[126],E,E,97,N],[12,R[127],E,E,97,N],[12,"f_flags",E,E,97,N],[12,"f_spare",E,E,97,N],[3,R[134],E,E,N,N],[12,"f_bsize",E,E,98,N],[12,R[127],E,E,98,N],[12,R[128],E,E,98,N],[12,"f_bfree",E,E,98,N],[12,R[129],E,E,98,N],[12,"f_files",E,E,98,N],[12,"f_ffree",E,E,98,N],[12,"f_favail",E,E,98,N],[12,"f_fsid",E,E,98,N],[12,"f_flag",E,E,98,N],[12,R[131],E,E,98,N],[3,R[182],E,E,N,N],[3,R[183],E,E,N,N],[12,"significand",E,E,99,N],[12,"exponent",E,E,99,N],[3,R[184],E,E,N,N],[12,"element",E,E,100,N],[3,R[185],E,E,N,N],[12,"cwd",E,E,101,N],[12,"swd",E,E,101,N],[12,"ftw",E,E,101,N],[12,"fop",E,E,101,N],[12,"rip",E,E,101,N],[12,"rdp",E,E,101,N],[12,"mxcsr",E,E,101,N],[12,R[130],E,E,101,N],[12,"_st",E,E,101,N],[12,"_xmm",E,E,101,N],[3,R[186],E,E,N,N],[12,"cwd",E,E,102,N],[12,"swd",E,E,102,N],[12,"ftw",E,E,102,N],[12,"fop",E,E,102,N],[12,"rip",E,E,102,N],[12,"rdp",E,E,102,N],[12,"mxcsr",E,E,102,N],[12,R[130],E,E,102,N],[12,"st_space",E,E,102,N],[12,"xmm_space",E,E,102,N],[3,R[187],E,E,N,N],[12,"r15",E,E,103,N],[12,"r14",E,E,103,N],[12,"r13",E,E,103,N],[12,"r12",E,E,103,N],[12,"rbp",E,E,103,N],[12,"rbx",E,E,103,N],[12,"r11",E,E,103,N],[12,"r10",E,E,103,N],[12,"r9",E,E,103,N],[12,"r8",E,E,103,N],[12,"rax",E,E,103,N],[12,"rcx",E,E,103,N],[12,"rdx",E,E,103,N],[12,"rsi",E,E,103,N],[12,"rdi",E,E,103,N],[12,"orig_rax",E,E,103,N],[12,"rip",E,E,103,N],[12,"cs",E,E,103,N],[12,"eflags",E,E,103,N],[12,"rsp",E,E,103,N],[12,"ss",E,E,103,N],[12,"fs_base",E,E,103,N],[12,"gs_base",E,E,103,N],[12,"ds",E,E,103,N],[12,"es",E,E,103,N],[12,"fs",E,E,103,N],[12,"gs",E,E,103,N],[3,"user",E,E,N,N],[12,"regs",E,E,104,N],[12,"u_fpvalid",E,E,104,N],[12,"i387",E,E,104,N],[12,"u_tsize",E,E,104,N],[12,"u_dsize",E,E,104,N],[12,"u_ssize",E,E,104,N],[12,"start_code",E,E,104,N],[12,"start_stack",E,E,104,N],[12,"signal",E,E,104,N],[12,"u_ar0",E,E,104,N],[12,"u_fpstate",E,E,104,N],[12,"magic",E,E,104,N],[12,"u_comm",E,E,104,N],[12,"u_debugreg",E,E,104,N],[3,R[188],E,E,N,N],[12,"gregs",E,E,105,N],[12,"fpregs",E,E,105,N],[3,R[189],E,E,N,N],[12,"uc_flags",E,E,106,N],[12,"uc_link",E,E,106,N],[12,"uc_stack",E,E,106,N],[12,"uc_mcontext",E,E,106,N],[12,"uc_sigmask",E,E,106,N],[3,R[205],E,E,N,N],[12,"__key",E,E,107,N],[12,"uid",E,E,107,N],[12,"gid",E,E,107,N],[12,"cuid",E,E,107,N],[12,"cgid",E,E,107,N],[12,"mode",E,E,107,N],[12,"__seq",E,E,107,N],[3,R[206],E,E,N,N],[12,"shm_perm",E,E,108,N],[12,"shm_segsz",E,E,108,N],[12,"shm_atime",E,E,108,N],[12,"shm_dtime",E,E,108,N],[12,"shm_ctime",E,E,108,N],[12,"shm_cpid",E,E,108,N],[12,"shm_lpid",E,E,108,N],[12,"shm_nattch",E,E,108,N],[3,R[207],E,E,N,N],[12,"c_iflag",E,E,109,N],[12,"c_oflag",E,E,109,N],[12,"c_cflag",E,E,109,N],[12,"c_lflag",E,E,109,N],[12,"c_line",E,E,109,N],[12,"c_cc",E,E,109,N],[12,"c_ispeed",E,E,109,N],[12,"c_ospeed",E,E,109,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,110,N],[12,R[127],E,E,110,N],[12,R[128],E,E,110,N],[12,"f_bfree",E,E,110,N],[12,R[129],E,E,110,N],[12,"f_files",E,E,110,N],[12,"f_ffree",E,E,110,N],[12,"f_favail",E,E,110,N],[12,"f_fsid",E,E,110,N],[12,"f_flag",E,E,110,N],[12,R[131],E,E,110,N],[4,"c_void",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,"DIR",E,E,N,N],[4,"locale_t",E,E,N,N],[4,"timezone",E,E,N,N],[4,"fpos64_t",E,E,N,N],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"CPU_ZERO",E,E,N,[[[R[132]]]]],[5,"CPU_SET",E,E,N,[[[R[132]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[132]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[132]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[132]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[133],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"uname",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[181],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[134],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[135],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[177],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[[T],["self"]]]],[11,R[20],E,E,3,[[[U]],[R[4]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[27]]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[],[R[4]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[[T],["self"]]]],[11,R[20],E,E,4,[[[U]],[R[4]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[R[27]]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[],[R[4]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[[T],["self"]]]],[11,R[20],E,E,5,[[[U]],[R[4]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[R[27]]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[],[R[4]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[[T],["self"]]]],[11,R[20],E,E,6,[[[U]],[R[4]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[R[27]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[],[R[4]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[[T],["self"]]]],[11,R[20],E,E,7,[[[U]],[R[4]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[R[27]]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[],[R[4]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[[T],["self"]]]],[11,R[20],E,E,8,[[[U]],[R[4]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[R[27]]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[],[R[4]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[[T],["self"]]]],[11,R[20],E,E,9,[[[U]],[R[4]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[R[27]]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[],[R[4]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[[T],["self"]]]],[11,R[20],E,E,10,[[[U]],[R[4]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[R[27]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[],[R[4]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[[T],["self"]]]],[11,R[20],E,E,11,[[[U]],[R[4]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[R[27]]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[],[R[4]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[[T],["self"]]]],[11,R[20],E,E,12,[[[U]],[R[4]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[R[27]]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[],[R[4]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[[T],["self"]]]],[11,R[20],E,E,13,[[[U]],[R[4]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[R[27]]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[],[R[4]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[18],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[[T],["self"]]]],[11,R[20],E,E,14,[[[U]],[R[4]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[R[27]]]],[11,R[21],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[],[R[4]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[18],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[[T],["self"]]]],[11,R[20],E,E,15,[[[U]],[R[4]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[R[27]]]],[11,R[21],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[],[R[4]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[18],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[[T],["self"]]]],[11,R[20],E,E,16,[[[U]],[R[4]]]],[11,R[26],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[R[27]]]],[11,R[21],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[],[R[4]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[18],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[[T],["self"]]]],[11,R[20],E,E,17,[[[U]],[R[4]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[R[27]]]],[11,R[21],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[],[R[4]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[18],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[[T],["self"]]]],[11,R[20],E,E,18,[[[U]],[R[4]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[R[27]]]],[11,R[21],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[],[R[4]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[18],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[[T],["self"]]]],[11,R[20],E,E,19,[[[U]],[R[4]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[R[27]]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[],[R[4]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[18],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[[T],["self"]]]],[11,R[20],E,E,20,[[[U]],[R[4]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[R[27]]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[],[R[4]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[18],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[[T],["self"]]]],[11,R[20],E,E,21,[[[U]],[R[4]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[R[27]]]],[11,R[21],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[],[R[4]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[18],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[[T],["self"]]]],[11,R[20],E,E,22,[[[U]],[R[4]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[R[27]]]],[11,R[21],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[],[R[4]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[18],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[[T],["self"]]]],[11,R[20],E,E,23,[[[U]],[R[4]]]],[11,R[26],E,E,23,[[["self"]],[T]]],[11,R[23],E,E,23,[[["self"]],[R[27]]]],[11,R[21],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[],[R[4]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[18],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[[T],["self"]]]],[11,R[20],E,E,24,[[[U]],[R[4]]]],[11,R[26],E,E,24,[[["self"]],[T]]],[11,R[23],E,E,24,[[["self"]],[R[27]]]],[11,R[21],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[],[R[4]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[18],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[[T],["self"]]]],[11,R[20],E,E,25,[[[U]],[R[4]]]],[11,R[26],E,E,25,[[["self"]],[T]]],[11,R[23],E,E,25,[[["self"]],[R[27]]]],[11,R[21],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[],[R[4]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[18],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[[T],["self"]]]],[11,R[20],E,E,26,[[[U]],[R[4]]]],[11,R[26],E,E,26,[[["self"]],[T]]],[11,R[23],E,E,26,[[["self"]],[R[27]]]],[11,R[21],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[],[R[4]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[18],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[[T],["self"]]]],[11,R[20],E,E,27,[[[U]],[R[4]]]],[11,R[26],E,E,27,[[["self"]],[T]]],[11,R[23],E,E,27,[[["self"]],[R[27]]]],[11,R[21],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[],[R[4]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[18],E,E,111,[[["self"]],[T]]],[11,R[19],E,E,111,[[[T],["self"]]]],[11,R[20],E,E,111,[[[U]],[R[4]]]],[11,R[26],E,E,111,[[["self"]],[T]]],[11,R[23],E,E,111,[[["self"]],[R[27]]]],[11,R[21],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[],[R[4]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[18],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[[T],["self"]]]],[11,R[20],E,E,28,[[[U]],[R[4]]]],[11,R[26],E,E,28,[[["self"]],[T]]],[11,R[23],E,E,28,[[["self"]],[R[27]]]],[11,R[21],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[],[R[4]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[18],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[[T],["self"]]]],[11,R[20],E,E,29,[[[U]],[R[4]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[R[27]]]],[11,R[21],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[],[R[4]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[18],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[[T],["self"]]]],[11,R[20],E,E,30,[[[U]],[R[4]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[R[27]]]],[11,R[21],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[],[R[4]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[18],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[[T],["self"]]]],[11,R[20],E,E,31,[[[U]],[R[4]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[R[27]]]],[11,R[21],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[],[R[4]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[18],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[[T],["self"]]]],[11,R[20],E,E,32,[[[U]],[R[4]]]],[11,R[26],E,E,32,[[["self"]],[T]]],[11,R[23],E,E,32,[[["self"]],[R[27]]]],[11,R[21],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[],[R[4]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[18],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[[T],["self"]]]],[11,R[20],E,E,33,[[[U]],[R[4]]]],[11,R[26],E,E,33,[[["self"]],[T]]],[11,R[23],E,E,33,[[["self"]],[R[27]]]],[11,R[21],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[],[R[4]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[18],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[[T],["self"]]]],[11,R[20],E,E,34,[[[U]],[R[4]]]],[11,R[26],E,E,34,[[["self"]],[T]]],[11,R[23],E,E,34,[[["self"]],[R[27]]]],[11,R[21],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[],[R[4]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[18],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[[T],["self"]]]],[11,R[20],E,E,35,[[[U]],[R[4]]]],[11,R[26],E,E,35,[[["self"]],[T]]],[11,R[23],E,E,35,[[["self"]],[R[27]]]],[11,R[21],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[],[R[4]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[18],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[[T],["self"]]]],[11,R[20],E,E,36,[[[U]],[R[4]]]],[11,R[26],E,E,36,[[["self"]],[T]]],[11,R[23],E,E,36,[[["self"]],[R[27]]]],[11,R[21],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[],[R[4]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[18],E,E,112,[[["self"]],[T]]],[11,R[19],E,E,112,[[[T],["self"]]]],[11,R[20],E,E,112,[[[U]],[R[4]]]],[11,R[26],E,E,112,[[["self"]],[T]]],[11,R[23],E,E,112,[[["self"]],[R[27]]]],[11,R[21],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[],[R[4]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[18],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[[T],["self"]]]],[11,R[20],E,E,37,[[[U]],[R[4]]]],[11,R[26],E,E,37,[[["self"]],[T]]],[11,R[23],E,E,37,[[["self"]],[R[27]]]],[11,R[21],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[],[R[4]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[18],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[[T],["self"]]]],[11,R[20],E,E,38,[[[U]],[R[4]]]],[11,R[26],E,E,38,[[["self"]],[T]]],[11,R[23],E,E,38,[[["self"]],[R[27]]]],[11,R[21],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[],[R[4]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[18],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[[T],["self"]]]],[11,R[20],E,E,39,[[[U]],[R[4]]]],[11,R[26],E,E,39,[[["self"]],[T]]],[11,R[23],E,E,39,[[["self"]],[R[27]]]],[11,R[21],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[],[R[4]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[18],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[[T],["self"]]]],[11,R[20],E,E,40,[[[U]],[R[4]]]],[11,R[26],E,E,40,[[["self"]],[T]]],[11,R[23],E,E,40,[[["self"]],[R[27]]]],[11,R[21],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[],[R[4]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[18],E,E,113,[[["self"]],[T]]],[11,R[19],E,E,113,[[[T],["self"]]]],[11,R[20],E,E,113,[[[U]],[R[4]]]],[11,R[26],E,E,113,[[["self"]],[T]]],[11,R[23],E,E,113,[[["self"]],[R[27]]]],[11,R[21],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[],[R[4]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[18],E,E,114,[[["self"]],[T]]],[11,R[19],E,E,114,[[[T],["self"]]]],[11,R[20],E,E,114,[[[U]],[R[4]]]],[11,R[26],E,E,114,[[["self"]],[T]]],[11,R[23],E,E,114,[[["self"]],[R[27]]]],[11,R[21],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[],[R[4]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[18],E,E,115,[[["self"]],[T]]],[11,R[19],E,E,115,[[[T],["self"]]]],[11,R[20],E,E,115,[[[U]],[R[4]]]],[11,R[26],E,E,115,[[["self"]],[T]]],[11,R[23],E,E,115,[[["self"]],[R[27]]]],[11,R[21],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[],[R[4]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[18],E,E,116,[[["self"]],[T]]],[11,R[19],E,E,116,[[[T],["self"]]]],[11,R[20],E,E,116,[[[U]],[R[4]]]],[11,R[26],E,E,116,[[["self"]],[T]]],[11,R[23],E,E,116,[[["self"]],[R[27]]]],[11,R[21],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[],[R[4]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[18],E,E,117,[[["self"]],[T]]],[11,R[19],E,E,117,[[[T],["self"]]]],[11,R[20],E,E,117,[[[U]],[R[4]]]],[11,R[26],E,E,117,[[["self"]],[T]]],[11,R[23],E,E,117,[[["self"]],[R[27]]]],[11,R[21],E,E,117,[[["self"]],[T]]],[11,R[22],E,E,117,[[],[R[4]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[18],E,E,118,[[["self"]],[T]]],[11,R[19],E,E,118,[[[T],["self"]]]],[11,R[20],E,E,118,[[[U]],[R[4]]]],[11,R[26],E,E,118,[[["self"]],[T]]],[11,R[23],E,E,118,[[["self"]],[R[27]]]],[11,R[21],E,E,118,[[["self"]],[T]]],[11,R[22],E,E,118,[[],[R[4]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[18],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[[T],["self"]]]],[11,R[20],E,E,41,[[[U]],[R[4]]]],[11,R[26],E,E,41,[[["self"]],[T]]],[11,R[23],E,E,41,[[["self"]],[R[27]]]],[11,R[21],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[],[R[4]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[18],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[[T],["self"]]]],[11,R[20],E,E,42,[[[U]],[R[4]]]],[11,R[26],E,E,42,[[["self"]],[T]]],[11,R[23],E,E,42,[[["self"]],[R[27]]]],[11,R[21],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[],[R[4]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[18],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[[T],["self"]]]],[11,R[20],E,E,43,[[[U]],[R[4]]]],[11,R[26],E,E,43,[[["self"]],[T]]],[11,R[23],E,E,43,[[["self"]],[R[27]]]],[11,R[21],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[],[R[4]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[18],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[[T],["self"]]]],[11,R[20],E,E,44,[[[U]],[R[4]]]],[11,R[26],E,E,44,[[["self"]],[T]]],[11,R[23],E,E,44,[[["self"]],[R[27]]]],[11,R[21],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[],[R[4]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[18],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[[T],["self"]]]],[11,R[20],E,E,45,[[[U]],[R[4]]]],[11,R[26],E,E,45,[[["self"]],[T]]],[11,R[23],E,E,45,[[["self"]],[R[27]]]],[11,R[21],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[],[R[4]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[18],E,E,119,[[["self"]],[T]]],[11,R[19],E,E,119,[[[T],["self"]]]],[11,R[20],E,E,119,[[[U]],[R[4]]]],[11,R[26],E,E,119,[[["self"]],[T]]],[11,R[23],E,E,119,[[["self"]],[R[27]]]],[11,R[21],E,E,119,[[["self"]],[T]]],[11,R[22],E,E,119,[[],[R[4]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[18],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[[T],["self"]]]],[11,R[20],E,E,46,[[[U]],[R[4]]]],[11,R[26],E,E,46,[[["self"]],[T]]],[11,R[23],E,E,46,[[["self"]],[R[27]]]],[11,R[21],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[],[R[4]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[18],E,E,120,[[["self"]],[T]]],[11,R[19],E,E,120,[[[T],["self"]]]],[11,R[20],E,E,120,[[[U]],[R[4]]]],[11,R[26],E,E,120,[[["self"]],[T]]],[11,R[23],E,E,120,[[["self"]],[R[27]]]],[11,R[21],E,E,120,[[["self"]],[T]]],[11,R[22],E,E,120,[[],[R[4]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[18],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[[T],["self"]]]],[11,R[20],E,E,47,[[[U]],[R[4]]]],[11,R[26],E,E,47,[[["self"]],[T]]],[11,R[23],E,E,47,[[["self"]],[R[27]]]],[11,R[21],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[],[R[4]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[18],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[[T],["self"]]]],[11,R[20],E,E,48,[[[U]],[R[4]]]],[11,R[26],E,E,48,[[["self"]],[T]]],[11,R[23],E,E,48,[[["self"]],[R[27]]]],[11,R[21],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[],[R[4]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[18],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[[T],["self"]]]],[11,R[20],E,E,49,[[[U]],[R[4]]]],[11,R[26],E,E,49,[[["self"]],[T]]],[11,R[23],E,E,49,[[["self"]],[R[27]]]],[11,R[21],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[],[R[4]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[18],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[[T],["self"]]]],[11,R[20],E,E,50,[[[U]],[R[4]]]],[11,R[26],E,E,50,[[["self"]],[T]]],[11,R[23],E,E,50,[[["self"]],[R[27]]]],[11,R[21],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[],[R[4]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[18],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[[T],["self"]]]],[11,R[20],E,E,51,[[[U]],[R[4]]]],[11,R[26],E,E,51,[[["self"]],[T]]],[11,R[23],E,E,51,[[["self"]],[R[27]]]],[11,R[21],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[],[R[4]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[18],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[[T],["self"]]]],[11,R[20],E,E,52,[[[U]],[R[4]]]],[11,R[26],E,E,52,[[["self"]],[T]]],[11,R[23],E,E,52,[[["self"]],[R[27]]]],[11,R[21],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[],[R[4]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[18],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[[T],["self"]]]],[11,R[20],E,E,53,[[[U]],[R[4]]]],[11,R[26],E,E,53,[[["self"]],[T]]],[11,R[23],E,E,53,[[["self"]],[R[27]]]],[11,R[21],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[],[R[4]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[18],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[[T],["self"]]]],[11,R[20],E,E,54,[[[U]],[R[4]]]],[11,R[26],E,E,54,[[["self"]],[T]]],[11,R[23],E,E,54,[[["self"]],[R[27]]]],[11,R[21],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[],[R[4]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[18],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[[T],["self"]]]],[11,R[20],E,E,55,[[[U]],[R[4]]]],[11,R[26],E,E,55,[[["self"]],[T]]],[11,R[23],E,E,55,[[["self"]],[R[27]]]],[11,R[21],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[],[R[4]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[18],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[[T],["self"]]]],[11,R[20],E,E,56,[[[U]],[R[4]]]],[11,R[26],E,E,56,[[["self"]],[T]]],[11,R[23],E,E,56,[[["self"]],[R[27]]]],[11,R[21],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[],[R[4]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[18],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[[T],["self"]]]],[11,R[20],E,E,57,[[[U]],[R[4]]]],[11,R[26],E,E,57,[[["self"]],[T]]],[11,R[23],E,E,57,[[["self"]],[R[27]]]],[11,R[21],E,E,57,[[["self"]],[T]]],[11,R[22],E,E,57,[[],[R[4]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[18],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[[T],["self"]]]],[11,R[20],E,E,58,[[[U]],[R[4]]]],[11,R[26],E,E,58,[[["self"]],[T]]],[11,R[23],E,E,58,[[["self"]],[R[27]]]],[11,R[21],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[],[R[4]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[18],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[[T],["self"]]]],[11,R[20],E,E,59,[[[U]],[R[4]]]],[11,R[26],E,E,59,[[["self"]],[T]]],[11,R[23],E,E,59,[[["self"]],[R[27]]]],[11,R[21],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[],[R[4]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[18],E,E,60,[[["self"]],[T]]],[11,R[19],E,E,60,[[[T],["self"]]]],[11,R[20],E,E,60,[[[U]],[R[4]]]],[11,R[26],E,E,60,[[["self"]],[T]]],[11,R[23],E,E,60,[[["self"]],[R[27]]]],[11,R[21],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[],[R[4]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[18],E,E,61,[[["self"]],[T]]],[11,R[19],E,E,61,[[[T],["self"]]]],[11,R[20],E,E,61,[[[U]],[R[4]]]],[11,R[26],E,E,61,[[["self"]],[T]]],[11,R[23],E,E,61,[[["self"]],[R[27]]]],[11,R[21],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[],[R[4]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[18],E,E,62,[[["self"]],[T]]],[11,R[19],E,E,62,[[[T],["self"]]]],[11,R[20],E,E,62,[[[U]],[R[4]]]],[11,R[26],E,E,62,[[["self"]],[T]]],[11,R[23],E,E,62,[[["self"]],[R[27]]]],[11,R[21],E,E,62,[[["self"]],[T]]],[11,R[22],E,E,62,[[],[R[4]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[18],E,E,63,[[["self"]],[T]]],[11,R[19],E,E,63,[[[T],["self"]]]],[11,R[20],E,E,63,[[[U]],[R[4]]]],[11,R[26],E,E,63,[[["self"]],[T]]],[11,R[23],E,E,63,[[["self"]],[R[27]]]],[11,R[21],E,E,63,[[["self"]],[T]]],[11,R[22],E,E,63,[[],[R[4]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[18],E,E,64,[[["self"]],[T]]],[11,R[19],E,E,64,[[[T],["self"]]]],[11,R[20],E,E,64,[[[U]],[R[4]]]],[11,R[26],E,E,64,[[["self"]],[T]]],[11,R[23],E,E,64,[[["self"]],[R[27]]]],[11,R[21],E,E,64,[[["self"]],[T]]],[11,R[22],E,E,64,[[],[R[4]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[18],E,E,65,[[["self"]],[T]]],[11,R[19],E,E,65,[[[T],["self"]]]],[11,R[20],E,E,65,[[[U]],[R[4]]]],[11,R[26],E,E,65,[[["self"]],[T]]],[11,R[23],E,E,65,[[["self"]],[R[27]]]],[11,R[21],E,E,65,[[["self"]],[T]]],[11,R[22],E,E,65,[[],[R[4]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[18],E,E,66,[[["self"]],[T]]],[11,R[19],E,E,66,[[[T],["self"]]]],[11,R[20],E,E,66,[[[U]],[R[4]]]],[11,R[26],E,E,66,[[["self"]],[T]]],[11,R[23],E,E,66,[[["self"]],[R[27]]]],[11,R[21],E,E,66,[[["self"]],[T]]],[11,R[22],E,E,66,[[],[R[4]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[18],E,E,67,[[["self"]],[T]]],[11,R[19],E,E,67,[[[T],["self"]]]],[11,R[20],E,E,67,[[[U]],[R[4]]]],[11,R[26],E,E,67,[[["self"]],[T]]],[11,R[23],E,E,67,[[["self"]],[R[27]]]],[11,R[21],E,E,67,[[["self"]],[T]]],[11,R[22],E,E,67,[[],[R[4]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[18],E,E,68,[[["self"]],[T]]],[11,R[19],E,E,68,[[[T],["self"]]]],[11,R[20],E,E,68,[[[U]],[R[4]]]],[11,R[26],E,E,68,[[["self"]],[T]]],[11,R[23],E,E,68,[[["self"]],[R[27]]]],[11,R[21],E,E,68,[[["self"]],[T]]],[11,R[22],E,E,68,[[],[R[4]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[18],E,E,69,[[["self"]],[T]]],[11,R[19],E,E,69,[[[T],["self"]]]],[11,R[20],E,E,69,[[[U]],[R[4]]]],[11,R[26],E,E,69,[[["self"]],[T]]],[11,R[23],E,E,69,[[["self"]],[R[27]]]],[11,R[21],E,E,69,[[["self"]],[T]]],[11,R[22],E,E,69,[[],[R[4]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[18],E,E,121,[[["self"]],[T]]],[11,R[19],E,E,121,[[[T],["self"]]]],[11,R[20],E,E,121,[[[U]],[R[4]]]],[11,R[26],E,E,121,[[["self"]],[T]]],[11,R[23],E,E,121,[[["self"]],[R[27]]]],[11,R[21],E,E,121,[[["self"]],[T]]],[11,R[22],E,E,121,[[],[R[4]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[18],E,E,122,[[["self"]],[T]]],[11,R[19],E,E,122,[[[T],["self"]]]],[11,R[20],E,E,122,[[[U]],[R[4]]]],[11,R[26],E,E,122,[[["self"]],[T]]],[11,R[23],E,E,122,[[["self"]],[R[27]]]],[11,R[21],E,E,122,[[["self"]],[T]]],[11,R[22],E,E,122,[[],[R[4]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[18],E,E,70,[[["self"]],[T]]],[11,R[19],E,E,70,[[[T],["self"]]]],[11,R[20],E,E,70,[[[U]],[R[4]]]],[11,R[26],E,E,70,[[["self"]],[T]]],[11,R[23],E,E,70,[[["self"]],[R[27]]]],[11,R[21],E,E,70,[[["self"]],[T]]],[11,R[22],E,E,70,[[],[R[4]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[18],E,E,71,[[["self"]],[T]]],[11,R[19],E,E,71,[[[T],["self"]]]],[11,R[20],E,E,71,[[[U]],[R[4]]]],[11,R[26],E,E,71,[[["self"]],[T]]],[11,R[23],E,E,71,[[["self"]],[R[27]]]],[11,R[21],E,E,71,[[["self"]],[T]]],[11,R[22],E,E,71,[[],[R[4]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[18],E,E,72,[[["self"]],[T]]],[11,R[19],E,E,72,[[[T],["self"]]]],[11,R[20],E,E,72,[[[U]],[R[4]]]],[11,R[26],E,E,72,[[["self"]],[T]]],[11,R[23],E,E,72,[[["self"]],[R[27]]]],[11,R[21],E,E,72,[[["self"]],[T]]],[11,R[22],E,E,72,[[],[R[4]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[18],E,E,73,[[["self"]],[T]]],[11,R[19],E,E,73,[[[T],["self"]]]],[11,R[20],E,E,73,[[[U]],[R[4]]]],[11,R[26],E,E,73,[[["self"]],[T]]],[11,R[23],E,E,73,[[["self"]],[R[27]]]],[11,R[21],E,E,73,[[["self"]],[T]]],[11,R[22],E,E,73,[[],[R[4]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[18],E,E,74,[[["self"]],[T]]],[11,R[19],E,E,74,[[[T],["self"]]]],[11,R[20],E,E,74,[[[U]],[R[4]]]],[11,R[26],E,E,74,[[["self"]],[T]]],[11,R[23],E,E,74,[[["self"]],[R[27]]]],[11,R[21],E,E,74,[[["self"]],[T]]],[11,R[22],E,E,74,[[],[R[4]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[18],E,E,75,[[["self"]],[T]]],[11,R[19],E,E,75,[[[T],["self"]]]],[11,R[20],E,E,75,[[[U]],[R[4]]]],[11,R[26],E,E,75,[[["self"]],[T]]],[11,R[23],E,E,75,[[["self"]],[R[27]]]],[11,R[21],E,E,75,[[["self"]],[T]]],[11,R[22],E,E,75,[[],[R[4]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[18],E,E,76,[[["self"]],[T]]],[11,R[19],E,E,76,[[[T],["self"]]]],[11,R[20],E,E,76,[[[U]],[R[4]]]],[11,R[26],E,E,76,[[["self"]],[T]]],[11,R[23],E,E,76,[[["self"]],[R[27]]]],[11,R[21],E,E,76,[[["self"]],[T]]],[11,R[22],E,E,76,[[],[R[4]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[18],E,E,77,[[["self"]],[T]]],[11,R[19],E,E,77,[[[T],["self"]]]],[11,R[20],E,E,77,[[[U]],[R[4]]]],[11,R[26],E,E,77,[[["self"]],[T]]],[11,R[23],E,E,77,[[["self"]],[R[27]]]],[11,R[21],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[],[R[4]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[18],E,E,78,[[["self"]],[T]]],[11,R[19],E,E,78,[[[T],["self"]]]],[11,R[20],E,E,78,[[[U]],[R[4]]]],[11,R[26],E,E,78,[[["self"]],[T]]],[11,R[23],E,E,78,[[["self"]],[R[27]]]],[11,R[21],E,E,78,[[["self"]],[T]]],[11,R[22],E,E,78,[[],[R[4]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[18],E,E,79,[[["self"]],[T]]],[11,R[19],E,E,79,[[[T],["self"]]]],[11,R[20],E,E,79,[[[U]],[R[4]]]],[11,R[26],E,E,79,[[["self"]],[T]]],[11,R[23],E,E,79,[[["self"]],[R[27]]]],[11,R[21],E,E,79,[[["self"]],[T]]],[11,R[22],E,E,79,[[],[R[4]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[18],E,E,80,[[["self"]],[T]]],[11,R[19],E,E,80,[[[T],["self"]]]],[11,R[20],E,E,80,[[[U]],[R[4]]]],[11,R[26],E,E,80,[[["self"]],[T]]],[11,R[23],E,E,80,[[["self"]],[R[27]]]],[11,R[21],E,E,80,[[["self"]],[T]]],[11,R[22],E,E,80,[[],[R[4]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[18],E,E,81,[[["self"]],[T]]],[11,R[19],E,E,81,[[[T],["self"]]]],[11,R[20],E,E,81,[[[U]],[R[4]]]],[11,R[26],E,E,81,[[["self"]],[T]]],[11,R[23],E,E,81,[[["self"]],[R[27]]]],[11,R[21],E,E,81,[[["self"]],[T]]],[11,R[22],E,E,81,[[],[R[4]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[18],E,E,82,[[["self"]],[T]]],[11,R[19],E,E,82,[[[T],["self"]]]],[11,R[20],E,E,82,[[[U]],[R[4]]]],[11,R[26],E,E,82,[[["self"]],[T]]],[11,R[23],E,E,82,[[["self"]],[R[27]]]],[11,R[21],E,E,82,[[["self"]],[T]]],[11,R[22],E,E,82,[[],[R[4]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[18],E,E,83,[[["self"]],[T]]],[11,R[19],E,E,83,[[[T],["self"]]]],[11,R[20],E,E,83,[[[U]],[R[4]]]],[11,R[26],E,E,83,[[["self"]],[T]]],[11,R[23],E,E,83,[[["self"]],[R[27]]]],[11,R[21],E,E,83,[[["self"]],[T]]],[11,R[22],E,E,83,[[],[R[4]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[18],E,E,84,[[["self"]],[T]]],[11,R[19],E,E,84,[[[T],["self"]]]],[11,R[20],E,E,84,[[[U]],[R[4]]]],[11,R[26],E,E,84,[[["self"]],[T]]],[11,R[23],E,E,84,[[["self"]],[R[27]]]],[11,R[21],E,E,84,[[["self"]],[T]]],[11,R[22],E,E,84,[[],[R[4]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[18],E,E,123,[[["self"]],[T]]],[11,R[19],E,E,123,[[[T],["self"]]]],[11,R[20],E,E,123,[[[U]],[R[4]]]],[11,R[26],E,E,123,[[["self"]],[T]]],[11,R[23],E,E,123,[[["self"]],[R[27]]]],[11,R[21],E,E,123,[[["self"]],[T]]],[11,R[22],E,E,123,[[],[R[4]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[18],E,E,85,[[["self"]],[T]]],[11,R[19],E,E,85,[[[T],["self"]]]],[11,R[20],E,E,85,[[[U]],[R[4]]]],[11,R[26],E,E,85,[[["self"]],[T]]],[11,R[23],E,E,85,[[["self"]],[R[27]]]],[11,R[21],E,E,85,[[["self"]],[T]]],[11,R[22],E,E,85,[[],[R[4]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[18],E,E,86,[[["self"]],[T]]],[11,R[19],E,E,86,[[[T],["self"]]]],[11,R[20],E,E,86,[[[U]],[R[4]]]],[11,R[26],E,E,86,[[["self"]],[T]]],[11,R[23],E,E,86,[[["self"]],[R[27]]]],[11,R[21],E,E,86,[[["self"]],[T]]],[11,R[22],E,E,86,[[],[R[4]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[18],E,E,87,[[["self"]],[T]]],[11,R[19],E,E,87,[[[T],["self"]]]],[11,R[20],E,E,87,[[[U]],[R[4]]]],[11,R[26],E,E,87,[[["self"]],[T]]],[11,R[23],E,E,87,[[["self"]],[R[27]]]],[11,R[21],E,E,87,[[["self"]],[T]]],[11,R[22],E,E,87,[[],[R[4]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[18],E,E,88,[[["self"]],[T]]],[11,R[19],E,E,88,[[[T],["self"]]]],[11,R[20],E,E,88,[[[U]],[R[4]]]],[11,R[26],E,E,88,[[["self"]],[T]]],[11,R[23],E,E,88,[[["self"]],[R[27]]]],[11,R[21],E,E,88,[[["self"]],[T]]],[11,R[22],E,E,88,[[],[R[4]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[18],E,E,89,[[["self"]],[T]]],[11,R[19],E,E,89,[[[T],["self"]]]],[11,R[20],E,E,89,[[[U]],[R[4]]]],[11,R[26],E,E,89,[[["self"]],[T]]],[11,R[23],E,E,89,[[["self"]],[R[27]]]],[11,R[21],E,E,89,[[["self"]],[T]]],[11,R[22],E,E,89,[[],[R[4]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[18],E,E,90,[[["self"]],[T]]],[11,R[19],E,E,90,[[[T],["self"]]]],[11,R[20],E,E,90,[[[U]],[R[4]]]],[11,R[26],E,E,90,[[["self"]],[T]]],[11,R[23],E,E,90,[[["self"]],[R[27]]]],[11,R[21],E,E,90,[[["self"]],[T]]],[11,R[22],E,E,90,[[],[R[4]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[18],E,E,91,[[["self"]],[T]]],[11,R[19],E,E,91,[[[T],["self"]]]],[11,R[20],E,E,91,[[[U]],[R[4]]]],[11,R[26],E,E,91,[[["self"]],[T]]],[11,R[23],E,E,91,[[["self"]],[R[27]]]],[11,R[21],E,E,91,[[["self"]],[T]]],[11,R[22],E,E,91,[[],[R[4]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[18],E,E,92,[[["self"]],[T]]],[11,R[19],E,E,92,[[[T],["self"]]]],[11,R[20],E,E,92,[[[U]],[R[4]]]],[11,R[26],E,E,92,[[["self"]],[T]]],[11,R[23],E,E,92,[[["self"]],[R[27]]]],[11,R[21],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[],[R[4]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[18],E,E,124,[[["self"]],[T]]],[11,R[19],E,E,124,[[[T],["self"]]]],[11,R[20],E,E,124,[[[U]],[R[4]]]],[11,R[26],E,E,124,[[["self"]],[T]]],[11,R[23],E,E,124,[[["self"]],[R[27]]]],[11,R[21],E,E,124,[[["self"]],[T]]],[11,R[22],E,E,124,[[],[R[4]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[18],E,E,93,[[["self"]],[T]]],[11,R[19],E,E,93,[[[T],["self"]]]],[11,R[20],E,E,93,[[[U]],[R[4]]]],[11,R[26],E,E,93,[[["self"]],[T]]],[11,R[23],E,E,93,[[["self"]],[R[27]]]],[11,R[21],E,E,93,[[["self"]],[T]]],[11,R[22],E,E,93,[[],[R[4]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[18],E,E,94,[[["self"]],[T]]],[11,R[19],E,E,94,[[[T],["self"]]]],[11,R[20],E,E,94,[[[U]],[R[4]]]],[11,R[26],E,E,94,[[["self"]],[T]]],[11,R[23],E,E,94,[[["self"]],[R[27]]]],[11,R[21],E,E,94,[[["self"]],[T]]],[11,R[22],E,E,94,[[],[R[4]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[18],E,E,95,[[["self"]],[T]]],[11,R[19],E,E,95,[[[T],["self"]]]],[11,R[20],E,E,95,[[[U]],[R[4]]]],[11,R[26],E,E,95,[[["self"]],[T]]],[11,R[23],E,E,95,[[["self"]],[R[27]]]],[11,R[21],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[],[R[4]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[18],E,E,96,[[["self"]],[T]]],[11,R[19],E,E,96,[[[T],["self"]]]],[11,R[20],E,E,96,[[[U]],[R[4]]]],[11,R[26],E,E,96,[[["self"]],[T]]],[11,R[23],E,E,96,[[["self"]],[R[27]]]],[11,R[21],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[],[R[4]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[18],E,E,97,[[["self"]],[T]]],[11,R[19],E,E,97,[[[T],["self"]]]],[11,R[20],E,E,97,[[[U]],[R[4]]]],[11,R[26],E,E,97,[[["self"]],[T]]],[11,R[23],E,E,97,[[["self"]],[R[27]]]],[11,R[21],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[],[R[4]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[18],E,E,98,[[["self"]],[T]]],[11,R[19],E,E,98,[[[T],["self"]]]],[11,R[20],E,E,98,[[[U]],[R[4]]]],[11,R[26],E,E,98,[[["self"]],[T]]],[11,R[23],E,E,98,[[["self"]],[R[27]]]],[11,R[21],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[],[R[4]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[18],E,E,125,[[["self"]],[T]]],[11,R[19],E,E,125,[[[T],["self"]]]],[11,R[20],E,E,125,[[[U]],[R[4]]]],[11,R[26],E,E,125,[[["self"]],[T]]],[11,R[23],E,E,125,[[["self"]],[R[27]]]],[11,R[21],E,E,125,[[["self"]],[T]]],[11,R[22],E,E,125,[[],[R[4]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[18],E,E,99,[[["self"]],[T]]],[11,R[19],E,E,99,[[[T],["self"]]]],[11,R[20],E,E,99,[[[U]],[R[4]]]],[11,R[26],E,E,99,[[["self"]],[T]]],[11,R[23],E,E,99,[[["self"]],[R[27]]]],[11,R[21],E,E,99,[[["self"]],[T]]],[11,R[22],E,E,99,[[],[R[4]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[18],E,E,100,[[["self"]],[T]]],[11,R[19],E,E,100,[[[T],["self"]]]],[11,R[20],E,E,100,[[[U]],[R[4]]]],[11,R[26],E,E,100,[[["self"]],[T]]],[11,R[23],E,E,100,[[["self"]],[R[27]]]],[11,R[21],E,E,100,[[["self"]],[T]]],[11,R[22],E,E,100,[[],[R[4]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[18],E,E,101,[[["self"]],[T]]],[11,R[19],E,E,101,[[[T],["self"]]]],[11,R[20],E,E,101,[[[U]],[R[4]]]],[11,R[26],E,E,101,[[["self"]],[T]]],[11,R[23],E,E,101,[[["self"]],[R[27]]]],[11,R[21],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[],[R[4]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[18],E,E,102,[[["self"]],[T]]],[11,R[19],E,E,102,[[[T],["self"]]]],[11,R[20],E,E,102,[[[U]],[R[4]]]],[11,R[26],E,E,102,[[["self"]],[T]]],[11,R[23],E,E,102,[[["self"]],[R[27]]]],[11,R[21],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[],[R[4]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[18],E,E,103,[[["self"]],[T]]],[11,R[19],E,E,103,[[[T],["self"]]]],[11,R[20],E,E,103,[[[U]],[R[4]]]],[11,R[26],E,E,103,[[["self"]],[T]]],[11,R[23],E,E,103,[[["self"]],[R[27]]]],[11,R[21],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[],[R[4]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[18],E,E,104,[[["self"]],[T]]],[11,R[19],E,E,104,[[[T],["self"]]]],[11,R[20],E,E,104,[[[U]],[R[4]]]],[11,R[26],E,E,104,[[["self"]],[T]]],[11,R[23],E,E,104,[[["self"]],[R[27]]]],[11,R[21],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[],[R[4]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[18],E,E,105,[[["self"]],[T]]],[11,R[19],E,E,105,[[[T],["self"]]]],[11,R[20],E,E,105,[[[U]],[R[4]]]],[11,R[26],E,E,105,[[["self"]],[T]]],[11,R[23],E,E,105,[[["self"]],[R[27]]]],[11,R[21],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[],[R[4]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[18],E,E,106,[[["self"]],[T]]],[11,R[19],E,E,106,[[[T],["self"]]]],[11,R[20],E,E,106,[[[U]],[R[4]]]],[11,R[26],E,E,106,[[["self"]],[T]]],[11,R[23],E,E,106,[[["self"]],[R[27]]]],[11,R[21],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[],[R[4]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[18],E,E,107,[[["self"]],[T]]],[11,R[19],E,E,107,[[[T],["self"]]]],[11,R[20],E,E,107,[[[U]],[R[4]]]],[11,R[26],E,E,107,[[["self"]],[T]]],[11,R[23],E,E,107,[[["self"]],[R[27]]]],[11,R[21],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[],[R[4]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[18],E,E,108,[[["self"]],[T]]],[11,R[19],E,E,108,[[[T],["self"]]]],[11,R[20],E,E,108,[[[U]],[R[4]]]],[11,R[26],E,E,108,[[["self"]],[T]]],[11,R[23],E,E,108,[[["self"]],[R[27]]]],[11,R[21],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[],[R[4]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[18],E,E,109,[[["self"]],[T]]],[11,R[19],E,E,109,[[[T],["self"]]]],[11,R[20],E,E,109,[[[U]],[R[4]]]],[11,R[26],E,E,109,[[["self"]],[T]]],[11,R[23],E,E,109,[[["self"]],[R[27]]]],[11,R[21],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[],[R[4]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[18],E,E,110,[[["self"]],[T]]],[11,R[19],E,E,110,[[[T],["self"]]]],[11,R[20],E,E,110,[[[U]],[R[4]]]],[11,R[26],E,E,110,[[["self"]],[T]]],[11,R[23],E,E,110,[[["self"]],[R[27]]]],[11,R[21],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[],[R[4]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[20],E,E,126,[[[U]],[R[4]]]],[11,R[26],E,E,126,[[["self"]],[T]]],[11,R[23],E,E,126,[[["self"]],[R[27]]]],[11,R[21],E,E,126,[[["self"]],[T]]],[11,R[22],E,E,126,[[],[R[4]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[20],E,E,127,[[[U]],[R[4]]]],[11,R[26],E,E,127,[[["self"]],[T]]],[11,R[23],E,E,127,[[["self"]],[R[27]]]],[11,R[21],E,E,127,[[["self"]],[T]]],[11,R[22],E,E,127,[[],[R[4]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[20],E,E,128,[[[U]],[R[4]]]],[11,R[26],E,E,128,[[["self"]],[T]]],[11,R[23],E,E,128,[[["self"]],[R[27]]]],[11,R[21],E,E,128,[[["self"]],[T]]],[11,R[22],E,E,128,[[],[R[4]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[20],E,E,129,[[[U]],[R[4]]]],[11,R[26],E,E,129,[[["self"]],[T]]],[11,R[23],E,E,129,[[["self"]],[R[27]]]],[11,R[21],E,E,129,[[["self"]],[T]]],[11,R[22],E,E,129,[[],[R[4]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[20],E,E,130,[[[U]],[R[4]]]],[11,R[26],E,E,130,[[["self"]],[T]]],[11,R[23],E,E,130,[[["self"]],[R[27]]]],[11,R[21],E,E,130,[[["self"]],[T]]],[11,R[22],E,E,130,[[],[R[4]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[20],E,E,131,[[[U]],[R[4]]]],[11,R[26],E,E,131,[[["self"]],[T]]],[11,R[23],E,E,131,[[["self"]],[R[27]]]],[11,R[21],E,E,131,[[["self"]],[T]]],[11,R[22],E,E,131,[[],[R[4]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[20],E,E,132,[[[U]],[R[4]]]],[11,R[26],E,E,132,[[["self"]],[T]]],[11,R[23],E,E,132,[[["self"]],[R[27]]]],[11,R[21],E,E,132,[[["self"]],[T]]],[11,R[22],E,E,132,[[],[R[4]]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[190]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],["in_addr"]]],[11,"clone",E,E,7,[[["self"]],[R[191]]]],[11,"clone",E,E,8,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,9,[[["self"]],[R[136]]]],[11,"clone",E,E,10,[[["self"]],["hostent"]]],[11,"clone",E,E,11,[[["self"]],["iovec"]]],[11,"clone",E,E,12,[[["self"]],["pollfd"]]],[11,"clone",E,E,13,[[["self"]],["winsize"]]],[11,"clone",E,E,14,[[["self"]],["linger"]]],[11,"clone",E,E,15,[[["self"]],["sigval"]]],[11,"clone",E,E,16,[[["self"]],[R[137]]]],[11,"clone",E,E,17,[[["self"]],["tms"]]],[11,"clone",E,E,18,[[["self"]],["servent"]]],[11,"clone",E,E,19,[[["self"]],[R[192]]]],[11,"clone",E,E,20,[[["self"]],[R[193]]]],[11,"clone",E,E,21,[[["self"]],[R[138]]]],[11,"clone",E,E,22,[[["self"]],[R[139]]]],[11,"clone",E,E,23,[[["self"]],[R[140]]]],[11,"clone",E,E,24,[[["self"]],[R[141]]]],[11,"clone",E,E,25,[[["self"]],[R[194]]]],[11,"clone",E,E,26,[[["self"]],[R[142]]]],[11,"clone",E,E,27,[[["self"]],[R[143]]]],[11,"clone",E,E,111,[[["self"]],["fd_set"]]],[11,"clone",E,E,28,[[["self"]],["tm"]]],[11,"clone",E,E,29,[[["self"]],[R[144]]]],[11,"clone",E,E,30,[[["self"]],["dl_info"]]],[11,"clone",E,E,31,[[["self"]],[R[145]]]],[11,"clone",E,E,32,[[["self"]],["utsname"]]],[11,"clone",E,E,33,[[["self"]],["lconv"]]],[11,"clone",E,E,34,[[["self"]],[R[195]]]],[11,"clone",E,E,35,[[["self"]],[R[146]]]],[11,"clone",E,E,36,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,112,[[["self"]],[R[147]]]],[11,"clone",E,E,37,[[["self"]],["dirent"]]],[11,"clone",E,E,38,[[["self"]],[R[196]]]],[11,"clone",E,E,39,[[["self"]],[R[197]]]],[11,"clone",E,E,40,[[["self"]],["glob_t"]]],[11,"clone",E,E,113,[[["self"]],[R[148]]]],[11,"clone",E,E,114,[[["self"]],[R[149]]]],[11,"clone",E,E,115,[[["self"]],[R[150]]]],[11,"clone",E,E,116,[[["self"]],[R[151]]]],[11,"clone",E,E,117,[[["self"]],[R[152]]]],[11,"clone",E,E,118,[[["self"]],[R[153]]]],[11,"clone",E,E,41,[[["self"]],["passwd"]]],[11,"clone",E,E,42,[[["self"]],["spwd"]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[154]]]],[11,"clone",E,E,45,[[["self"]],[R[155]]]],[11,"clone",E,E,119,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],["mq_attr"]]],[11,"clone",E,E,120,[[["self"]],[R[132]]]],[11,"clone",E,E,47,[[["self"]],[R[135]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,50,[[["self"]],["sembuf"]]],[11,"clone",E,E,51,[[["self"]],[R[156]]]],[11,"clone",E,E,52,[[["self"]],[R[198]]]],[11,"clone",E,E,53,[[["self"]],[R[157]]]],[11,"clone",E,E,54,[[["self"]],[R[158]]]],[11,"clone",E,E,55,[[["self"]],[R[159]]]],[11,"clone",E,E,56,[[["self"]],[R[160]]]],[11,"clone",E,E,57,[[["self"]],[R[161]]]],[11,"clone",E,E,58,[[["self"]],[R[162]]]],[11,"clone",E,E,59,[[["self"]],[R[163]]]],[11,"clone",E,E,60,[[["self"]],[R[164]]]],[11,"clone",E,E,61,[[["self"]],[R[165]]]],[11,"clone",E,E,62,[[["self"]],[R[166]]]],[11,"clone",E,E,63,[[["self"]],[R[167]]]],[11,"clone",E,E,64,[[["self"]],[R[168]]]],[11,"clone",E,E,65,[[["self"]],[R[169]]]],[11,"clone",E,E,66,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,67,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,68,[[["self"]],["ucred"]]],[11,"clone",E,E,69,[[["self"]],["mntent"]]],[11,"clone",E,E,121,[[["self"]],[R[170]]]],[11,"clone",E,E,122,[[["self"]],[R[171]]]],[11,"clone",E,E,70,[[["self"]],[R[172]]]],[11,"clone",E,E,71,[[["self"]],[R[173]]]],[11,"clone",E,E,72,[[["self"]],["aiocb"]]],[11,"clone",E,E,73,[[["self"]],[R[174]]]],[11,"clone",E,E,74,[[["self"]],[R[175]]]],[11,"clone",E,E,75,[[["self"]],["utmpx"]]],[11,"clone",E,E,76,[[["self"]],[R[133]]]],[11,"clone",E,E,77,[[["self"]],["stack_t"]]],[11,"clone",E,E,78,[[["self"]],[R[176]]]],[11,"clone",E,E,79,[[["self"]],[R[201]]]],[11,"clone",E,E,80,[[["self"]],["statfs"]]],[11,"clone",E,E,81,[[["self"]],["msghdr"]]],[11,"clone",E,E,82,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,83,[[["self"]],["termios"]]],[11,"clone",E,E,84,[[["self"]],["flock"]]],[11,"clone",E,E,123,[[["self"]],["sem_t"]]],[11,"clone",E,E,85,[[["self"]],[R[177]]]],[11,"clone",E,E,86,[[["self"]],[R[202]]]],[11,"clone",E,E,87,[[["self"]],[R[203]]]],[11,"clone",E,E,88,[[["self"]],[R[178]]]],[11,"clone",E,E,89,[[["self"]],[R[179]]]],[11,"clone",E,E,90,[[["self"]],[R[180]]]],[11,"clone",E,E,91,[[["self"]],["nlattr"]]],[11,"clone",E,E,92,[[["self"]],["rtentry"]]],[11,"clone",E,E,124,[[["self"]],[R[208]]]],[11,"clone",E,E,93,[[["self"]],["sysinfo"]]],[11,"clone",E,E,94,[[["self"]],[R[204]]]],[11,"clone",E,E,95,[[["self"]],["stat"]]],[11,"clone",E,E,96,[[["self"]],["stat64"]]],[11,"clone",E,E,97,[[["self"]],[R[181]]]],[11,"clone",E,E,98,[[["self"]],[R[134]]]],[11,"clone",E,E,125,[[["self"]],[R[182]]]],[11,"clone",E,E,99,[[["self"]],[R[183]]]],[11,"clone",E,E,100,[[["self"]],[R[184]]]],[11,"clone",E,E,101,[[["self"]],[R[185]]]],[11,"clone",E,E,102,[[["self"]],[R[186]]]],[11,"clone",E,E,103,[[["self"]],[R[187]]]],[11,"clone",E,E,104,[[["self"]],["user"]]],[11,"clone",E,E,105,[[["self"]],[R[188]]]],[11,"clone",E,E,106,[[["self"]],[R[189]]]],[11,"clone",E,E,107,[[["self"]],[R[205]]]],[11,"clone",E,E,108,[[["self"]],[R[206]]]],[11,"clone",E,E,109,[[["self"]],[R[207]]]],[11,"clone",E,E,110,[[["self"]],["statvfs"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[190]],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,R[191]],[3,"ip_mreq"],[3,R[136]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[137]],[3,"tms"],[3,"servent"],[3,R[192]],[3,R[193]],[3,R[138]],[3,R[139]],[3,R[140]],[3,R[141]],[3,R[194]],[3,R[142]],[3,R[143]],[3,"tm"],[3,R[144]],[3,"Dl_info"],[3,R[145]],[3,"utsname"],[3,"lconv"],[3,R[195]],[3,R[146]],[3,"ifaddrs"],[3,"dirent"],[3,R[196]],[3,R[197]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[154]],[3,R[155]],[3,"mq_attr"],[3,R[135]],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,R[156]],[3,R[198]],[3,R[157]],[3,R[158]],[3,R[159]],[3,R[160]],[3,R[161]],[3,R[162]],[3,R[163]],[3,R[164]],[3,R[165]],[3,R[166]],[3,R[167]],[3,R[168]],[3,R[169]],[3,R[199]],[3,R[200]],[3,"ucred"],[3,"mntent"],[3,R[172]],[3,R[173]],[3,"aiocb"],[3,R[174]],[3,R[175]],[3,"utmpx"],[3,R[133]],[3,"stack_t"],[3,R[176]],[3,R[201]],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,R[177]],[3,R[202]],[3,R[203]],[3,R[178]],[3,R[179]],[3,R[180]],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,R[204]],[3,"stat"],[3,"stat64"],[3,R[181]],[3,R[134]],[3,R[183]],[3,R[184]],[3,R[185]],[3,R[186]],[3,R[187]],[3,"user"],[3,R[188]],[3,R[189]],[3,R[205]],[3,R[206]],[3,R[207]],[3,"statvfs"],[3,"fd_set"],[3,R[147]],[3,R[148]],[3,R[149]],[3,R[150]],[3,R[151]],[3,R[152]],[3,R[153]],[3,"fsid_t"],[3,R[132]],[3,R[170]],[3,R[171]],[3,"sem_t"],[3,R[208]],[3,R[182]],[4,"c_void"],[4,"FILE"],[4,"fpos_t"],[4,"DIR"],[4,"locale_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num",R[492],N,N],[3,"BigUint",E,R[490],N,N],[6,R[768],E,R[588],N,N],[6,R[589],E,R[590],N,N],[3,"Complex",E,R[493],N,N],[12,"re",E,R[494],0,N],[12,"im",E,R[495],0,N],[8,"Integer",E,E,N,N],[10,R[359],E,R[496],1,[[["self"]],["self"]]],[10,R[360],E,R[497],1,[[["self"]],["self"]]],[10,"gcd",E,R[498],1,[[["self"]],["self"]]],[10,"lcm",E,R[499],1,[[["self"]],["self"]]],[10,R[765],E,R[425],1,[[["self"]],["bool"]]],[10,R[426],E,R[500],1,[[["self"]],["bool"]]],[10,R[766],E,R[501],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[502],1,[[["self"]],["bool"]]],[10,R[680],E,R[503],1,[[["self"]]]],[11,R[361],E,R[504],1,[[["self"]]]],[5,"range",E,R[505],N,[[["a"]],["range"]]],[5,R[506],E,R[507],N,[[["a"]],[R[377]]]],[5,R[508],E,R[509],N,[[["a"]],[R[378]]]],[5,R[510],E,R[511],N,[[["a"]],[R[379]]]],[8,"Num",E,R[584],N,N],[16,R[585],E,E,2,N],[10,R[374],E,R[586],2,[[["u32"],["str"]],[R[4]]]],[8,"Zero",E,R[512],N,N],[10,"zero",E,R[513],3,[[],["self"]]],[10,R[595],E,R[514],3,[[["self"]],["bool"]]],[8,"One",E,R[515],N,N],[10,"one",E,R[516],4,[[],["self"]]],[11,"is_one",E,R[517],4,[[["self"]],["bool"]]],[8,"Signed",E,R[521],N,N],[10,"abs",E,R[264],5,[[["self"]],["self"]]],[10,R[449],E,R[265],5,[[["self"]],["self"]]],[10,"signum",E,R[266],5,[[["self"]],["self"]]],[10,R[439],E,R[522],5,[[["self"]],["bool"]]],[10,R[440],E,R[523],5,[[["self"]],["bool"]]],[8,R[601],E,R[524],N,N],[8,"Bounded",E,R[539],N,N],[10,R[270],E,R[540],6,[[],["self"]]],[10,R[271],E,R[541],6,[[],["self"]]],[5,"one",E,R[519],N,[[],[T]]],[5,"zero",E,R[518],N,[[],[T]]],[5,"abs",E,R[264],N,[[[T]],[T]]],[5,R[449],E,R[265],N,[[[T]],[T]]],[5,"signum",E,R[266],N,[[[T]],[T]]],[8,R[338],E,R[525],N,N],[10,R[526],E,R[527],7,[[],["self"]]],[10,R[528],E,R[529],7,[[],["self"]]],[8,R[339],E,R[531],N,N],[10,R[431],E,R[532],8,[[["self"]],[R[11]]]],[8,R[340],E,R[533],N,N],[10,R[432],E,R[534],9,[[["self"]],[R[11]]]],[8,R[341],E,R[535],N,N],[10,R[433],E,R[536],10,[[["self"]],[R[11]]]],[8,R[342],E,R[537],N,N],[10,R[434],E,R[538],11,[[["self"]],[R[11]]]],[8,"PrimInt",E,E,N,N],[10,R[561],E,R[562],12,[[],["u32"]]],[10,R[563],E,R[564],12,[[],["u32"]]],[10,R[565],E,R[566],12,[[],["u32"]]],[10,R[567],E,R[568],12,[[],["u32"]]],[10,R[569],E,R[332],12,[[["u32"]],["self"]]],[10,R[570],E,R[333],12,[[["u32"]],["self"]]],[10,R[571],E,R[332],12,[[["u32"]],["self"]]],[10,R[572],E,R[333],12,[[["u32"]],["self"]]],[10,R[573],E,R[332],12,[[["u32"]],["self"]]],[10,R[574],E,R[333],12,[[["u32"]],["self"]]],[10,R[575],E,R[576],12,[[],["self"]]],[10,"from_be",E,R[577],12,[[],["self"]]],[10,"from_le",E,R[578],12,[[],["self"]]],[10,"to_be",E,R[579],12,[[],["self"]]],[10,"to_le",E,R[580],12,[[],["self"]]],[10,"pow",E,R[581],12,[[["u32"]],["self"]]],[8,"Float",E,R[542],N,N],[10,"nan",E,R[543],13,[[],["self"]]],[10,R[544],E,R[545],13,[[],["self"]]],[10,R[272],E,R[546],13,[[],["self"]]],[10,R[547],E,R[273],13,[[],["self"]]],[10,R[270],E,R[274],13,[[],["self"]]],[10,R[275],E,R[276],13,[[],["self"]]],[11,R[641],E,R[277],13,[[],["self"]]],[10,R[271],E,R[278],13,[[],["self"]]],[10,"is_nan",E,R[548],13,[[],["bool"]]],[10,R[279],E,R[549],13,[[],["bool"]]],[10,R[280],E,R[550],13,[[],["bool"]]],[10,R[281],E,R[282],13,[[],["bool"]]],[10,R[551],E,R[283],13,[[],[R[284]]]],[10,"floor",E,R[285],13,[[],["self"]]],[10,"ceil",E,R[286],13,[[],["self"]]],[10,"round",E,R[287],13,[[],["self"]]],[10,"trunc",E,R[288],13,[[],["self"]]],[10,"fract",E,R[289],13,[[],["self"]]],[10,"abs",E,R[290],13,[[],["self"]]],[10,"signum",E,R[291],13,[[],["self"]]],[10,R[292],E,R[301],13,[[],["bool"]]],[10,R[293],E,R[302],13,[[],["bool"]]],[10,R[624],E,R[303],13,[[],["self"]]],[10,"recip",E,R[304],13,[[],["self"]]],[10,"powi",E,R[294],13,[[["i32"]],["self"]]],[10,"powf",E,R[552],13,[[],["self"]]],[10,"sqrt",E,R[305],13,[[],["self"]]],[10,"exp",E,R[306],13,[[],["self"]]],[10,"exp2",E,R[307],13,[[],["self"]]],[10,"ln",E,R[308],13,[[],["self"]]],[10,"log",E,R[309],13,[[],["self"]]],[10,"log2",E,R[310],13,[[],["self"]]],[10,"log10",E,R[311],13,[[],["self"]]],[11,R[295],E,R[312],13,[[],["self"]]],[11,R[296],E,R[313],13,[[],["self"]]],[10,"max",E,R[297],13,[[],["self"]]],[10,"min",E,R[298],13,[[],["self"]]],[10,R[449],E,R[265],13,[[],["self"]]],[10,"cbrt",E,R[314],13,[[],["self"]]],[10,"hypot",E,R[315],13,[[],["self"]]],[10,"sin",E,R[316],13,[[],["self"]]],[10,"cos",E,R[317],13,[[],["self"]]],[10,"tan",E,R[318],13,[[],["self"]]],[10,"asin",E,R[319],13,[[],["self"]]],[10,"acos",E,R[320],13,[[],["self"]]],[10,"atan",E,R[321],13,[[],["self"]]],[10,"atan2",E,R[322],13,[[],["self"]]],[10,"sin_cos",E,R[323],13,[[]]],[10,"exp_m1",E,R[324],13,[[],["self"]]],[10,"ln_1p",E,R[325],13,[[],["self"]]],[10,"sinh",E,R[326],13,[[],["self"]]],[10,"cosh",E,R[327],13,[[],["self"]]],[10,"tanh",E,R[328],13,[[],["self"]]],[10,"asinh",E,R[329],13,[[],["self"]]],[10,"acosh",E,R[330],13,[[],["self"]]],[10,"atanh",E,R[331],13,[[],["self"]]],[10,R[299],E,R[300],13,[[]]],[8,R[353],E,R[450],N,N],[11,R[553],E,R[451],14,[[["self"]],[["isize"],[R[11],["isize"]]]]],[11,"to_i8",E,R[452],14,[[["self"]],[[R[11],["i8"]],["i8"]]]],[11,"to_i16",E,R[453],14,[[["self"]],[[R[11],["i16"]],["i16"]]]],[11,"to_i32",E,R[454],14,[[["self"]],[["i32"],[R[11],["i32"]]]]],[10,"to_i64",E,R[455],14,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_i128",E,R[456],14,[[["self"]],[["i128"],[R[11],["i128"]]]]],[11,R[554],E,R[457],14,[[["self"]],[[R[11],["usize"]],["usize"]]]],[11,"to_u8",E,R[458],14,[[["self"]],[["u8"],[R[11],["u8"]]]]],[11,"to_u16",E,R[459],14,[[["self"]],[[R[11],["u16"]],["u16"]]]],[11,"to_u32",E,R[460],14,[[["self"]],[["u32"],[R[11],["u32"]]]]],[10,"to_u64",E,R[461],14,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_u128",E,R[462],14,[[["self"]],[[R[11],["u128"]],["u128"]]]],[11,"to_f32",E,R[463],14,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,R[464],14,[[["self"]],[["f64"],[R[11],["f64"]]]]],[8,R[354],E,R[465],N,N],[11,R[466],E,R[467],15,[[["isize"]],[R[11]]]],[11,"from_i8",E,R[468],15,[[["i8"]],[R[11]]]],[11,R[555],E,R[469],15,[[["i16"]],[R[11]]]],[11,R[556],E,R[470],15,[[["i32"]],[R[11]]]],[10,R[441],E,R[471],15,[[["i64"]],[R[11]]]],[11,R[472],E,R[473],15,[[["i128"]],[R[11]]]],[11,R[474],E,R[475],15,[[["usize"]],[R[11]]]],[11,"from_u8",E,R[476],15,[[["u8"]],[R[11]]]],[11,R[557],E,R[477],15,[[["u16"]],[R[11]]]],[11,R[558],E,R[478],15,[[["u32"]],[R[11]]]],[10,R[442],E,R[479],15,[[["u64"]],[R[11]]]],[11,R[480],E,R[481],15,[[["u128"]],[R[11]]]],[11,R[447],E,R[482],15,[[["f32"]],[R[11]]]],[11,R[443],E,R[483],15,[[["f64"]],[R[11]]]],[8,R[678],E,R[484],N,N],[10,"from",E,R[485],16,[[[T]],[R[11]]]],[0,"cast",E,E,N,N],[8,R[353],"num::cast",R[450],N,N],[11,R[553],E,R[451],14,[[["self"]],[["isize"],[R[11],["isize"]]]]],[11,"to_i8",E,R[452],14,[[["self"]],[[R[11],["i8"]],["i8"]]]],[11,"to_i16",E,R[453],14,[[["self"]],[[R[11],["i16"]],["i16"]]]],[11,"to_i32",E,R[454],14,[[["self"]],[["i32"],[R[11],["i32"]]]]],[10,"to_i64",E,R[455],14,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_i128",E,R[456],14,[[["self"]],[["i128"],[R[11],["i128"]]]]],[11,R[554],E,R[457],14,[[["self"]],[[R[11],["usize"]],["usize"]]]],[11,"to_u8",E,R[458],14,[[["self"]],[["u8"],[R[11],["u8"]]]]],[11,"to_u16",E,R[459],14,[[["self"]],[[R[11],["u16"]],["u16"]]]],[11,"to_u32",E,R[460],14,[[["self"]],[["u32"],[R[11],["u32"]]]]],[10,"to_u64",E,R[461],14,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_u128",E,R[462],14,[[["self"]],[[R[11],["u128"]],["u128"]]]],[11,"to_f32",E,R[463],14,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,R[464],14,[[["self"]],[["f64"],[R[11],["f64"]]]]],[8,R[354],E,R[465],N,N],[11,R[466],E,R[467],15,[[["isize"]],[R[11]]]],[11,"from_i8",E,R[468],15,[[["i8"]],[R[11]]]],[11,R[555],E,R[469],15,[[["i16"]],[R[11]]]],[11,R[556],E,R[470],15,[[["i32"]],[R[11]]]],[10,R[441],E,R[471],15,[[["i64"]],[R[11]]]],[11,R[472],E,R[473],15,[[["i128"]],[R[11]]]],[11,R[474],E,R[475],15,[[["usize"]],[R[11]]]],[11,"from_u8",E,R[476],15,[[["u8"]],[R[11]]]],[11,R[557],E,R[477],15,[[["u16"]],[R[11]]]],[11,R[558],E,R[478],15,[[["u32"]],[R[11]]]],[10,R[442],E,R[479],15,[[["u64"]],[R[11]]]],[11,R[480],E,R[481],15,[[["u128"]],[R[11]]]],[11,R[447],E,R[482],15,[[["f32"]],[R[11]]]],[11,R[443],E,R[483],15,[[["f64"]],[R[11]]]],[5,"cast",E,R[486],N,[[[T]],[R[11]]]],[8,R[678],E,R[484],N,N],[10,"from",E,R[485],16,[[[T]],[R[11]]]],[8,R[355],E,R[559],N,N],[10,"as_",E,R[560],17,[[],[T]]],[5,"cast","num",R[486],N,[[[T]],[R[11]]]],[0,"pow",E,E,N,N],[8,"Pow","num::pow",R[582],N,N],[16,"Output",E,R[335],18,N],[10,"pow",E,R[583],18,[[["rhs"]]]],[5,"pow",E,R[487],N,[[["usize"],[T]],[T]]],[5,R[488],E,R[489],N,[[["usize"],[T]],[R[11]]]],[5,"pow","num",R[487],N,[[["usize"],[T]],[T]]],[5,R[488],E,R[489],N,[[["usize"],[T]],[R[11]]]],[5,"clamp",E,R[587],N,[[[T]],[T]]],[0,"bigint",E,E,N,N],[4,R[435],R[491],E,N,N],[13,"ParseInt",E,E,19,N],[13,"Other",E,E,19,N],[4,"Sign",E,R[727],N,N],[13,"Minus",E,E,20,N],[13,"NoSign",E,E,20,N],[13,"Plus",E,E,20,N],[8,R[437],E,E,N,N],[10,R[750],E,R[751],21,[[["self"],["usize"]],[R[385]]]],[10,R[752],E,R[753],21,[[["self"],["usize"]],["bigint"]]],[10,R[754],E,R[755],21,[[["self"],[R[385]]],[R[385]]]],[10,R[756],E,R[757],21,[[["self"],[R[385]]],[R[385]]]],[10,R[758],E,R[759],21,[[["self"],["bigint"]],["bigint"]]],[17,R[414],E,E,N,N],[6,R[412],E,R[413],N,N],[8,R[436],E,R[745],N,N],[10,R[415],E,R[746],22,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[8,R[747],E,R[748],N,N],[10,R[416],E,R[749],23,[[["self"]],[[R[11],["bigint"]],["bigint"]]]],[6,R[438],E,R[411],N,N],[3,"BigUint",E,R[490],N,N],[0,R[740],E,E,N,N],[17,"BITS","num::bigint::big_digit",E,N,N],[17,"BASE",E,E,N,N],[5,R[741],E,R[742],N,[[["u64"]]]],[5,R[743],E,R[744],N,[[["u32"]],["u64"]]],[3,"BigInt",R[491],R[492],N,N],[0,R[364],"num",E,N,N],[3,"Complex",R[591],R[493],N,N],[12,"re",E,R[494],0,N],[12,"im",E,R[495],0,N],[6,R[690],E,E,N,N],[6,R[691],E,E,N,N],[3,R[372],E,E,N,N],[0,R[358],"num",E,N,N],[8,"Integer",R[592],E,N,N],[10,R[359],E,R[496],1,[[["self"]],["self"]]],[10,R[360],E,R[497],1,[[["self"]],["self"]]],[10,"gcd",E,R[498],1,[[["self"]],["self"]]],[10,"lcm",E,R[499],1,[[["self"]],["self"]]],[10,R[765],E,R[425],1,[[["self"]],["bool"]]],[10,R[426],E,R[500],1,[[["self"]],["bool"]]],[10,R[766],E,R[501],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[502],1,[[["self"]],["bool"]]],[10,R[680],E,R[503],1,[[["self"]]]],[11,R[361],E,R[504],1,[[["self"]]]],[5,R[680],E,R[681],N,[[[T]]]],[5,R[359],E,R[682],N,[[[T]],[T]]],[5,R[360],E,R[683],N,[[[T]],[T]]],[5,R[361],E,R[684],N,[[[T]]]],[5,"gcd",E,R[423],N,[[[T]],[T]]],[5,"lcm",E,R[424],N,[[[T]],[T]]],[3,R[362],E,R[679],N,N],[5,"binomial",E,R[685],N,[[[T]],[T]]],[5,R[686],E,R[687],N,[[],[T]]],[0,"iter","num",E,N,N],[3,"Range",R[593],R[596],N,N],[5,"range",E,R[505],N,[[["a"]],["range"]]],[3,R[380],E,R[597],N,N],[5,R[506],E,R[507],N,[[["a"]],[R[377]]]],[3,R[381],E,R[598],N,N],[5,R[508],E,R[509],N,[[["a"]],[R[378]]]],[3,R[382],E,R[599],N,N],[5,R[510],E,R[511],N,[[["a"]],[R[379]]]],[0,"traits","num",E,N,N],[0,R[600],R[520],E,N,N],[8,"Zero","num::traits::identities",R[512],N,N],[10,"zero",E,R[513],3,[[],["self"]]],[10,R[595],E,R[514],3,[[["self"]],["bool"]]],[8,"One",E,R[515],N,N],[10,"one",E,R[516],4,[[],["self"]]],[11,"is_one",E,R[517],4,[[["self"]],["bool"]]],[5,"zero",E,R[518],N,[[],[T]]],[5,"one",E,R[519],N,[[],[T]]],[0,"sign",R[520],E,N,N],[8,"Signed","num::traits::sign",R[521],N,N],[10,"abs",E,R[264],5,[[["self"]],["self"]]],[10,R[449],E,R[265],5,[[["self"]],["self"]]],[10,"signum",E,R[266],5,[[["self"]],["self"]]],[10,R[439],E,R[522],5,[[["self"]],["bool"]]],[10,R[440],E,R[523],5,[[["self"]],["bool"]]],[5,"abs",E,R[264],N,[[[T]],[T]]],[5,R[449],E,R[265],N,[[[T]],[T]]],[5,"signum",E,R[266],N,[[[T]],[T]]],[8,R[601],E,R[524],N,N],[0,"ops",R[520],E,N,N],[0,R[602],R[530],E,N,N],[8,R[338],"num::traits::ops::saturating",R[525],N,N],[10,R[526],E,R[527],7,[[],["self"]]],[10,R[528],E,R[529],7,[[],["self"]]],[0,"checked",R[530],E,N,N],[8,R[339],"num::traits::ops::checked",R[531],N,N],[10,R[431],E,R[532],8,[[["self"]],[R[11]]]],[8,R[340],E,R[533],N,N],[10,R[432],E,R[534],9,[[["self"]],[R[11]]]],[8,R[341],E,R[535],N,N],[10,R[433],E,R[536],10,[[["self"]],[R[11]]]],[8,R[342],E,R[537],N,N],[10,R[434],E,R[538],11,[[["self"]],[R[11]]]],[8,R[343],E,R[603],N,N],[10,R[604],E,R[605],24,[[["self"]],[R[11]]]],[8,R[344],E,R[606],N,N],[10,R[607],E,R[608],25,[[["self"]],[R[11]]]],[8,R[345],E,R[609],N,N],[10,R[610],E,R[268],26,[[["u32"],["self"]],[R[11]]]],[8,R[346],E,R[611],N,N],[10,R[612],E,R[268],27,[[["u32"],["self"]],[R[11]]]],[0,"wrapping",R[530],E,N,N],[8,R[347],"num::traits::ops::wrapping",R[613],N,N],[10,R[614],E,R[615],28,[[["self"]],["self"]]],[8,R[348],E,R[616],N,N],[10,R[617],E,R[618],29,[[["self"]],["self"]]],[8,R[349],E,R[619],N,N],[10,R[620],E,R[621],30,[[["self"]],["self"]]],[0,"inv",R[530],E,N,N],[8,"Inv","num::traits::ops::inv",R[622],N,N],[16,"Output",E,R[335],31,N],[10,"inv",E,R[623],31,[[]]],[0,R[624],R[530],E,N,N],[8,"MulAdd","num::traits::ops::mul_add",R[625],N,N],[16,"Output",E,R[626],32,N],[10,R[624],E,R[269],32,[[["a"],["b"]]]],[8,R[350],E,R[627],N,N],[10,R[628],E,R[269],33,[[["self"],["a"],["b"]]]],[0,"bounds",R[520],E,N,N],[8,"Bounded","num::traits::bounds",R[539],N,N],[10,R[270],E,R[540],6,[[],["self"]]],[10,R[271],E,R[541],6,[[],["self"]]],[0,"float",R[520],E,N,N],[8,R[351],"num::traits::float",R[629],N,N],[10,R[544],E,R[630],34,[[],["self"]]],[10,R[272],E,R[631],34,[[],["self"]]],[10,"nan",E,R[632],34,[[],["self"]]],[10,R[547],E,R[273],34,[[],["self"]]],[10,R[270],E,R[274],34,[[],["self"]]],[10,R[275],E,R[276],34,[[],["self"]]],[10,R[641],E,R[277],34,[[],["self"]]],[10,R[271],E,R[278],34,[[],["self"]]],[11,"is_nan",E,R[633],34,[[],["bool"]]],[11,R[279],E,R[634],34,[[],["bool"]]],[11,R[280],E,R[635],34,[[],["bool"]]],[11,R[281],E,R[282],34,[[],["bool"]]],[10,R[551],E,R[283],34,[[],[R[284]]]],[11,"floor",E,R[285],34,[[],["self"]]],[11,"ceil",E,R[286],34,[[],["self"]]],[11,"round",E,R[287],34,[[],["self"]]],[11,"trunc",E,R[288],34,[[],["self"]]],[11,"fract",E,R[289],34,[[],["self"]]],[11,"abs",E,R[290],34,[[],["self"]]],[11,"signum",E,R[291],34,[[],["self"]]],[11,R[292],E,R[636],34,[[],["bool"]]],[11,R[293],E,R[637],34,[[],["bool"]]],[11,"min",E,R[298],34,[[],["self"]]],[11,"max",E,R[297],34,[[],["self"]]],[11,"recip",E,R[638],34,[[],["self"]]],[11,"powi",E,R[294],34,[[["i32"]],["self"]]],[10,R[295],E,R[639],34,[[],["self"]]],[10,R[296],E,R[640],34,[[],["self"]]],[10,R[299],E,R[300],34,[[]]],[8,"Float",E,R[542],N,N],[10,"nan",E,R[543],13,[[],["self"]]],[10,R[544],E,R[545],13,[[],["self"]]],[10,R[272],E,R[546],13,[[],["self"]]],[10,R[547],E,R[273],13,[[],["self"]]],[10,R[270],E,R[274],13,[[],["self"]]],[10,R[275],E,R[276],13,[[],["self"]]],[11,R[641],E,R[277],13,[[],["self"]]],[10,R[271],E,R[278],13,[[],["self"]]],[10,"is_nan",E,R[548],13,[[],["bool"]]],[10,R[279],E,R[549],13,[[],["bool"]]],[10,R[280],E,R[550],13,[[],["bool"]]],[10,R[281],E,R[282],13,[[],["bool"]]],[10,R[551],E,R[283],13,[[],[R[284]]]],[10,"floor",E,R[285],13,[[],["self"]]],[10,"ceil",E,R[286],13,[[],["self"]]],[10,"round",E,R[287],13,[[],["self"]]],[10,"trunc",E,R[288],13,[[],["self"]]],[10,"fract",E,R[289],13,[[],["self"]]],[10,"abs",E,R[290],13,[[],["self"]]],[10,"signum",E,R[291],13,[[],["self"]]],[10,R[292],E,R[301],13,[[],["bool"]]],[10,R[293],E,R[302],13,[[],["bool"]]],[10,R[624],E,R[303],13,[[],["self"]]],[10,"recip",E,R[304],13,[[],["self"]]],[10,"powi",E,R[294],13,[[["i32"]],["self"]]],[10,"powf",E,R[552],13,[[],["self"]]],[10,"sqrt",E,R[305],13,[[],["self"]]],[10,"exp",E,R[306],13,[[],["self"]]],[10,"exp2",E,R[307],13,[[],["self"]]],[10,"ln",E,R[308],13,[[],["self"]]],[10,"log",E,R[309],13,[[],["self"]]],[10,"log2",E,R[310],13,[[],["self"]]],[10,"log10",E,R[311],13,[[],["self"]]],[11,R[295],E,R[312],13,[[],["self"]]],[11,R[296],E,R[313],13,[[],["self"]]],[10,"max",E,R[297],13,[[],["self"]]],[10,"min",E,R[298],13,[[],["self"]]],[10,R[449],E,R[265],13,[[],["self"]]],[10,"cbrt",E,R[314],13,[[],["self"]]],[10,"hypot",E,R[315],13,[[],["self"]]],[10,"sin",E,R[316],13,[[],["self"]]],[10,"cos",E,R[317],13,[[],["self"]]],[10,"tan",E,R[318],13,[[],["self"]]],[10,"asin",E,R[319],13,[[],["self"]]],[10,"acos",E,R[320],13,[[],["self"]]],[10,"atan",E,R[321],13,[[],["self"]]],[10,"atan2",E,R[322],13,[[],["self"]]],[10,"sin_cos",E,R[323],13,[[]]],[10,"exp_m1",E,R[324],13,[[],["self"]]],[10,"ln_1p",E,R[325],13,[[],["self"]]],[10,"sinh",E,R[326],13,[[],["self"]]],[10,"cosh",E,R[327],13,[[],["self"]]],[10,"tanh",E,R[328],13,[[],["self"]]],[10,"asinh",E,R[329],13,[[],["self"]]],[10,"acosh",E,R[330],13,[[],["self"]]],[10,"atanh",E,R[331],13,[[],["self"]]],[10,R[299],E,R[300],13,[[]]],[8,R[352],E,E,N,N],[10,"E",E,R[642],35,[[],["self"]]],[10,R[643],E,R[644],35,[[],["self"]]],[10,R[645],E,R[646],35,[[],["self"]]],[10,R[647],E,R[648],35,[[],["self"]]],[10,R[649],E,R[650],35,[[],["self"]]],[10,R[651],E,R[652],35,[[],["self"]]],[10,R[653],E,R[654],35,[[],["self"]]],[10,R[655],E,R[656],35,[[],["self"]]],[10,R[657],E,R[658],35,[[],["self"]]],[10,R[659],E,R[660],35,[[],["self"]]],[10,"LN_10",E,R[661],35,[[],["self"]]],[10,"LN_2",E,R[662],35,[[],["self"]]],[10,"LOG10_E",E,R[663],35,[[],["self"]]],[10,"LOG2_E",E,R[664],35,[[],["self"]]],[10,"PI",E,R[665],35,[[],["self"]]],[10,"SQRT_2",E,R[666],35,[[],["self"]]],[0,"real",R[520],E,N,N],[8,"Real","num::traits::real",R[667],N,N],[10,R[270],E,R[274],36,[[],["self"]]],[10,R[275],E,R[276],36,[[],["self"]]],[10,R[641],E,R[277],36,[[],["self"]]],[10,R[271],E,R[278],36,[[],["self"]]],[10,"floor",E,R[285],36,[[],["self"]]],[10,"ceil",E,R[286],36,[[],["self"]]],[10,"round",E,R[287],36,[[],["self"]]],[10,"trunc",E,R[288],36,[[],["self"]]],[10,"fract",E,R[289],36,[[],["self"]]],[10,"abs",E,R[290],36,[[],["self"]]],[10,"signum",E,R[291],36,[[],["self"]]],[10,R[292],E,R[301],36,[[],["bool"]]],[10,R[293],E,R[302],36,[[],["bool"]]],[10,R[624],E,R[303],36,[[],["self"]]],[10,"recip",E,R[304],36,[[],["self"]]],[10,"powi",E,R[294],36,[[["i32"]],["self"]]],[10,"powf",E,R[668],36,[[],["self"]]],[10,"sqrt",E,R[305],36,[[],["self"]]],[10,"exp",E,R[306],36,[[],["self"]]],[10,"exp2",E,R[307],36,[[],["self"]]],[10,"ln",E,R[308],36,[[],["self"]]],[10,"log",E,R[309],36,[[],["self"]]],[10,"log2",E,R[310],36,[[],["self"]]],[10,"log10",E,R[311],36,[[],["self"]]],[10,R[295],E,R[312],36,[[],["self"]]],[10,R[296],E,R[313],36,[[],["self"]]],[10,"max",E,R[297],36,[[],["self"]]],[10,"min",E,R[298],36,[[],["self"]]],[10,R[449],E,R[265],36,[[],["self"]]],[10,"cbrt",E,R[314],36,[[],["self"]]],[10,"hypot",E,R[315],36,[[],["self"]]],[10,"sin",E,R[316],36,[[],["self"]]],[10,"cos",E,R[317],36,[[],["self"]]],[10,"tan",E,R[318],36,[[],["self"]]],[10,"asin",E,R[319],36,[[],["self"]]],[10,"acos",E,R[320],36,[[],["self"]]],[10,"atan",E,R[321],36,[[],["self"]]],[10,"atan2",E,R[322],36,[[],["self"]]],[10,"sin_cos",E,R[323],36,[[]]],[10,"exp_m1",E,R[324],36,[[],["self"]]],[10,"ln_1p",E,R[325],36,[[],["self"]]],[10,"sinh",E,R[326],36,[[],["self"]]],[10,"cosh",E,R[327],36,[[],["self"]]],[10,"tanh",E,R[328],36,[[],["self"]]],[10,"asinh",E,R[329],36,[[],["self"]]],[10,"acosh",E,R[330],36,[[],["self"]]],[10,"atanh",E,R[331],36,[[],["self"]]],[0,"cast",R[520],E,N,N],[8,R[353],"num::traits::cast",R[450],N,N],[11,R[553],E,R[451],14,[[["self"]],[["isize"],[R[11],["isize"]]]]],[11,"to_i8",E,R[452],14,[[["self"]],[[R[11],["i8"]],["i8"]]]],[11,"to_i16",E,R[453],14,[[["self"]],[[R[11],["i16"]],["i16"]]]],[11,"to_i32",E,R[454],14,[[["self"]],[["i32"],[R[11],["i32"]]]]],[10,"to_i64",E,R[455],14,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_i128",E,R[456],14,[[["self"]],[["i128"],[R[11],["i128"]]]]],[11,R[554],E,R[457],14,[[["self"]],[[R[11],["usize"]],["usize"]]]],[11,"to_u8",E,R[458],14,[[["self"]],[["u8"],[R[11],["u8"]]]]],[11,"to_u16",E,R[459],14,[[["self"]],[[R[11],["u16"]],["u16"]]]],[11,"to_u32",E,R[460],14,[[["self"]],[["u32"],[R[11],["u32"]]]]],[10,"to_u64",E,R[461],14,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_u128",E,R[462],14,[[["self"]],[[R[11],["u128"]],["u128"]]]],[11,"to_f32",E,R[463],14,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,R[464],14,[[["self"]],[["f64"],[R[11],["f64"]]]]],[8,R[354],E,R[465],N,N],[11,R[466],E,R[467],15,[[["isize"]],[R[11]]]],[11,"from_i8",E,R[468],15,[[["i8"]],[R[11]]]],[11,R[555],E,R[469],15,[[["i16"]],[R[11]]]],[11,R[556],E,R[470],15,[[["i32"]],[R[11]]]],[10,R[441],E,R[471],15,[[["i64"]],[R[11]]]],[11,R[472],E,R[473],15,[[["i128"]],[R[11]]]],[11,R[474],E,R[475],15,[[["usize"]],[R[11]]]],[11,"from_u8",E,R[476],15,[[["u8"]],[R[11]]]],[11,R[557],E,R[477],15,[[["u16"]],[R[11]]]],[11,R[558],E,R[478],15,[[["u32"]],[R[11]]]],[10,R[442],E,R[479],15,[[["u64"]],[R[11]]]],[11,R[480],E,R[481],15,[[["u128"]],[R[11]]]],[11,R[447],E,R[482],15,[[["f32"]],[R[11]]]],[11,R[443],E,R[483],15,[[["f64"]],[R[11]]]],[5,"cast",E,R[486],N,[[[T]],[R[11]]]],[8,R[678],E,R[484],N,N],[10,"from",E,R[485],16,[[[T]],[R[11]]]],[8,R[355],E,R[559],N,N],[10,"as_",E,R[560],17,[[],[T]]],[0,"int",R[520],E,N,N],[8,"PrimInt","num::traits::int",E,N,N],[10,R[561],E,R[562],12,[[],["u32"]]],[10,R[563],E,R[564],12,[[],["u32"]]],[10,R[565],E,R[566],12,[[],["u32"]]],[10,R[567],E,R[568],12,[[],["u32"]]],[10,R[569],E,R[332],12,[[["u32"]],["self"]]],[10,R[570],E,R[333],12,[[["u32"]],["self"]]],[10,R[571],E,R[332],12,[[["u32"]],["self"]]],[10,R[572],E,R[333],12,[[["u32"]],["self"]]],[10,R[573],E,R[332],12,[[["u32"]],["self"]]],[10,R[574],E,R[333],12,[[["u32"]],["self"]]],[10,R[575],E,R[576],12,[[],["self"]]],[10,"from_be",E,R[577],12,[[],["self"]]],[10,"from_le",E,R[578],12,[[],["self"]]],[10,"to_be",E,R[579],12,[[],["self"]]],[10,"to_le",E,R[580],12,[[],["self"]]],[10,"pow",E,R[581],12,[[["u32"]],["self"]]],[0,"pow",R[520],E,N,N],[8,"Pow","num::traits::pow",R[582],N,N],[16,"Output",E,R[335],18,N],[10,"pow",E,R[583],18,[[["rhs"]]]],[5,"pow",E,R[487],N,[[["usize"],[T]],[T]]],[5,R[488],E,R[489],N,[[["usize"],[T]],[R[11]]]],[8,"Num",R[520],R[584],N,N],[16,R[585],E,E,2,N],[10,R[374],E,R[586],2,[[["u32"],["str"]],[R[4]]]],[8,"NumOps",E,R[669],N,N],[8,"NumRef",E,R[670],N,N],[8,"RefNum",E,R[671],N,N],[8,R[672],E,R[673],N,N],[8,R[674],E,R[675],N,N],[8,R[676],E,R[677],N,N],[4,R[337],E,E,N,N],[13,"Empty",E,E,37,N],[13,"Invalid",E,E,37,N],[3,R[336],E,E,N,N],[12,"kind",E,E,38,N],[5,"clamp",E,R[587],N,[[[T]],[T]]],[0,"rational","num",E,N,N],[3,"Ratio",R[594],R[767],N,N],[6,R[768],E,R[588],N,N],[6,R[769],E,E,N,N],[6,R[770],E,E,N,N],[6,R[589],E,R[590],N,N],[3,R[448],E,E,N,N],[11,"from",R[491],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[18],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[[T],["self"]]]],[11,R[25],E,E,39,[[["self"]],[R[3]]]],[11,R[20],E,E,39,[[[U]],[R[4]]]],[11,R[26],E,E,39,[[["self"]],[T]]],[11,R[23],E,E,39,[[["self"]],[R[27]]]],[11,R[21],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[],[R[4]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[18],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[[T],["self"]]]],[11,R[25],E,E,40,[[["self"]],[R[3]]]],[11,R[20],E,E,40,[[[U]],[R[4]]]],[11,R[26],E,E,40,[[["self"]],[T]]],[11,R[23],E,E,40,[[["self"]],[R[27]]]],[11,R[21],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[],[R[4]]]],[11,"from",R[591],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",R[491],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[25],E,E,19,[[["self"]],[R[3]]]],[11,R[20],E,E,19,[[[U]],[R[4]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[R[27]]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[],[R[4]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[18],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[[T],["self"]]]],[11,R[20],E,E,20,[[[U]],[R[4]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[R[27]]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[],[R[4]]]],[11,"from",R[591],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[25],E,E,41,[[["self"]],[R[3]]]],[11,R[20],E,E,41,[[[U]],[R[4]]]],[11,R[26],E,E,41,[[["self"]],[T]]],[11,R[23],E,E,41,[[["self"]],[R[27]]]],[11,R[21],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[],[R[4]]]],[11,"from",R[592],E,42,[[[T]],[T]]],[11,R[222],E,E,42,[[],["i"]]],[11,"into",E,E,42,[[],[U]]],[11,R[20],E,E,42,[[[U]],[R[4]]]],[11,R[26],E,E,42,[[["self"]],[T]]],[11,R[23],E,E,42,[[["self"]],[R[27]]]],[11,R[21],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[],[R[4]]]],[11,"from",R[593],E,43,[[[T]],[T]]],[11,R[222],E,E,43,[[],["i"]]],[11,"into",E,E,43,[[],[U]]],[11,R[18],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[[T],["self"]]]],[11,R[20],E,E,43,[[[U]],[R[4]]]],[11,R[26],E,E,43,[[["self"]],[T]]],[11,R[23],E,E,43,[[["self"]],[R[27]]]],[11,R[21],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[],[R[4]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[222],E,E,44,[[],["i"]]],[11,"into",E,E,44,[[],[U]]],[11,R[18],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[[T],["self"]]]],[11,R[20],E,E,44,[[[U]],[R[4]]]],[11,R[26],E,E,44,[[["self"]],[T]]],[11,R[23],E,E,44,[[["self"]],[R[27]]]],[11,R[21],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[],[R[4]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[222],E,E,45,[[],["i"]]],[11,"into",E,E,45,[[],[U]]],[11,R[18],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[[T],["self"]]]],[11,R[20],E,E,45,[[[U]],[R[4]]]],[11,R[26],E,E,45,[[["self"]],[T]]],[11,R[23],E,E,45,[[["self"]],[R[27]]]],[11,R[21],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[],[R[4]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[222],E,E,46,[[],["i"]]],[11,"into",E,E,46,[[],[U]]],[11,R[18],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[[T],["self"]]]],[11,R[20],E,E,46,[[[U]],[R[4]]]],[11,R[26],E,E,46,[[["self"]],[T]]],[11,R[23],E,E,46,[[["self"]],[R[27]]]],[11,R[21],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[],[R[4]]]],[11,"from",R[520],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[20],E,E,37,[[[U]],[R[4]]]],[11,R[26],E,E,37,[[["self"]],[T]]],[11,R[23],E,E,37,[[["self"]],[R[27]]]],[11,R[21],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[],[R[4]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[25],E,E,38,[[["self"]],[R[3]]]],[11,R[20],E,E,38,[[[U]],[R[4]]]],[11,R[26],E,E,38,[[["self"]],[T]]],[11,R[23],E,E,38,[[["self"]],[R[27]]]],[11,R[21],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[],[R[4]]]],[11,"from",R[594],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[18],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[[T],["self"]]]],[11,R[25],E,E,47,[[["self"]],[R[3]]]],[11,R[20],E,E,47,[[[U]],[R[4]]]],[11,R[26],E,E,47,[[["self"]],[T]]],[11,R[23],E,E,47,[[["self"]],[R[27]]]],[11,R[21],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[],[R[4]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[18],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[[T],["self"]]]],[11,R[25],E,E,48,[[["self"]],[R[3]]]],[11,R[20],E,E,48,[[[U]],[R[4]]]],[11,R[26],E,E,48,[[["self"]],[T]]],[11,R[23],E,E,48,[[["self"]],[R[27]]]],[11,R[21],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[],[R[4]]]],[11,"fmt",R[520],E,37,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,38,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,38,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"next",R[592],E,42,[[["self"]],[R[11]]]],[11,"clone",R[593],E,43,[[["self"]],["range"]]],[11,"clone",E,E,45,[[["self"]],[R[378]]]],[11,"clone",E,E,44,[[["self"]],[R[377]]]],[11,"clone",E,E,46,[[["self"]],[R[379]]]],[11,R[376],E,E,44,[[["self"]],[R[11]]]],[11,R[376],E,E,43,[[["self"]],[R[11]]]],[11,"next",E,E,43,[[["self"]],[R[11]]]],[11,R[375],E,E,43,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[11]]]],[11,"next",E,E,44,[[["self"]],[R[11]]]],[11,R[375],E,E,44,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[11]]]],[11,"fmt",R[591],E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,41,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,R[366],E,E,0,[[["self"],[T]]]],[11,R[366],E,E,0,[[["self"],[T]]]],[11,R[366],E,E,0,[[["self"],[R[364]]]]],[11,R[366],E,E,0,[[["self"],[R[364]]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,R[368],E,E,0,[[["self"],[T]]]],[11,R[368],E,E,0,[[["self"],[R[364]]]]],[11,R[368],E,E,0,[[["self"],[R[364]]]]],[11,R[368],E,E,0,[[["self"],[T]]]],[11,"add",E,E,0,[[[R[364]]],[R[364]]]],[11,"add",E,E,0,[[[T]],[R[364]]]],[11,"add",E,E,0,[[[R[364]]],[R[364]]]],[11,"add",E,E,0,[[[T]],[R[364]]]],[11,"clone",E,E,0,[[["self"]],[R[364]]]],[11,"eq",E,E,0,[[["self"],[R[364]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[364]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[365]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[365]]],["bool"]]],[11,R[367],E,E,0,[[["self"],[T]]]],[11,R[367],E,E,0,[[["self"],[R[364]]]]],[11,R[367],E,E,0,[[["self"],[T]]]],[11,R[367],E,E,0,[[["self"],[R[364]]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"div",E,E,0,[[[T]],[R[364]]]],[11,"div",E,E,0,[[[T]],[R[364]]]],[11,"div",E,E,0,[[[R[364]]],[R[364]]]],[11,"div",E,E,0,[[[R[364]]],[R[364]]]],[11,R[369],E,E,0,[[["self"],[T]]]],[11,R[369],E,E,0,[[["self"],[R[364]]]]],[11,R[369],E,E,0,[[["self"],[T]]]],[11,R[369],E,E,0,[[["self"],[R[364]]]]],[11,R[374],E,R[371],0,[[["u32"],["str"]],[[R[4],[R[364]]],[R[364]]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"zero",E,E,0,[[],[R[364]]]],[11,R[595],E,E,0,[[["self"]],["bool"]]],[11,R[373],E,R[371],0,[[["str"]],[[R[4],[R[364]]],[R[364]]]]],[11,"neg",E,E,0,[[],[R[364]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"sub",E,E,0,[[[R[364]]],[R[364]]]],[11,"sub",E,E,0,[[[T]],[R[364]]]],[11,"sub",E,E,0,[[[R[364]]],[R[364]]]],[11,"sub",E,E,0,[[[T]],[R[364]]]],[11,"one",E,E,0,[[],[R[364]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"from",E,E,0,[[[T]],[R[364]]]],[11,"from",E,E,0,[[[T]],[R[364]]]],[11,R[102],E,E,41,[[["self"]],["str"]]],[11,"encode",E,E,0,[[["__st"],["self"]],[R[4]]]],[11,R[370],E,E,0,[[["self"],[T]]]],[11,R[370],E,E,0,[[["self"],[R[364]]]]],[11,R[370],E,E,0,[[["self"],[T]]]],[11,R[370],E,E,0,[[["self"],[R[364]]]]],[11,"mul",E,E,0,[[[R[364]]],[R[364]]]],[11,"mul",E,E,0,[[[R[364]]],[R[364]]]],[11,"mul",E,E,0,[[[T]],[R[364]]]],[11,"mul",E,E,0,[[[T]],[R[364]]]],[11,"decode",E,E,0,[[["__dt"]],[[R[4],[R[364]]],[R[364]]]]],[11,"rem",E,E,0,[[[T]],[R[364]]]],[11,"rem",E,E,0,[[[T]],[R[364]]]],[11,"rem",E,E,0,[[[R[364]]],[R[364]]]],[11,"rem",E,E,0,[[[R[364]]],[R[364]]]],[11,R[761],E,E,0,[[],[R[364]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,41,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"abs",R[491],E,39,[[["self"]],["bigint"]]],[11,R[449],E,E,39,[[["bigint"],["self"]],["bigint"]]],[11,"signum",E,E,39,[[["self"]],["bigint"]]],[11,R[439],E,E,39,[[["self"]],["bool"]]],[11,R[440],E,E,39,[[["self"]],["bool"]]],[11,"to_i64",E,E,39,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_u64",E,E,39,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_f32",E,E,39,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,E,39,[[["self"]],[["f64"],[R[11],["f64"]]]]],[11,"to_i64",E,E,40,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_u64",E,E,40,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_f32",E,E,40,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,E,40,[[["self"]],[["f64"],[R[11],["f64"]]]]],[11,R[374],E,R[430],39,[[["u32"],["str"]],[[R[417]],["bigint"],[R[4],["bigint",R[417]]]]]],[11,R[374],E,R[384],40,[[["u32"],["str"]],[[R[4],[R[385],R[417]]],[R[417]],[R[385]]]]],[11,R[416],E,E,39,[[["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[416],E,E,40,[[["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"fmt",E,E,39,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,20,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,19,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,40,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,R[763],E,E,40,[[["self"],["usize"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,R[366],E,E,40,[[["self"],["u16"]]]],[11,R[366],E,E,40,[[["u32"],["self"]]]],[11,R[366],E,E,40,[[["self"],[R[385]]]]],[11,R[366],E,E,40,[[["self"],["u8"]]]],[11,R[366],E,E,40,[[["self"],[R[385]]]]],[11,R[366],E,E,40,[[["self"],["usize"]]]],[11,R[366],E,E,40,[[["self"],["u64"]]]],[11,"shl",E,E,39,[[["usize"]],["bigint"]]],[11,"shl",E,E,40,[[["usize"]],[R[385]]]],[11,"zero",E,E,40,[[],[R[385]]]],[11,R[595],E,E,40,[[["self"]],["bool"]]],[11,"zero",E,E,39,[[],["bigint"]]],[11,R[595],E,E,39,[[["self"]],["bool"]]],[11,"fmt",E,E,39,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,40,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,R[368],E,E,40,[[["self"],[R[385]]]]],[11,R[368],E,E,40,[[["self"],["u8"]]]],[11,R[368],E,E,40,[[["self"],["usize"]]]],[11,R[368],E,E,40,[[[R[385]],["self"]]]],[11,R[368],E,E,40,[[["u32"],["self"]]]],[11,R[368],E,E,40,[[["self"],["u16"]]]],[11,R[368],E,E,40,[[["self"],["u64"]]]],[11,"add",E,E,39,[[["u8"]],["bigint"]]],[11,"add",E,E,40,[[["usize"]],[R[385]]]],[11,"add",E,E,39,[[["u64"]],["bigint"]]],[11,"add",E,E,40,[[["u64"]],[R[385]]]],[11,"add",E,E,39,[[["usize"]],["bigint"]]],[11,"add",E,E,39,[[["isize"]],["bigint"]]],[11,"add",E,E,39,[[["u32"]],["bigint"]]],[11,"add",E,E,40,[[["u32"]],[R[385]]]],[11,"add",E,E,40,[[["u16"]],[R[385]]]],[11,"add",E,E,39,[[["i8"]],["bigint"]]],[11,"add",E,E,39,[[["bigint"]],["bigint"]]],[11,"add",E,E,39,[[["u16"]],["bigint"]]],[11,"add",E,E,39,[[["u32"]],["bigint"]]],[11,"add",E,E,40,[[["usize"]],[R[385]]]],[11,"add",E,E,40,[[["u16"]],[R[385]]]],[11,"add",E,E,40,[[[R[385]]],[R[385]]]],[11,"add",E,E,39,[[["i8"]],["bigint"]]],[11,"add",E,E,39,[[["isize"]],["bigint"]]],[11,"add",E,E,40,[[[R[385]]],[R[385]]]],[11,"add",E,E,39,[[["u64"]],["bigint"]]],[11,"add",E,E,40,[[["u32"]],[R[385]]]],[11,"add",E,E,39,[[["i16"]],["bigint"]]],[11,"add",E,E,39,[[["bigint"]],["bigint"]]],[11,"add",E,E,39,[[["i32"]],["bigint"]]],[11,"add",E,E,39,[[["u16"]],["bigint"]]],[11,"add",E,E,39,[[["u8"]],["bigint"]]],[11,"add",E,E,39,[[["i64"]],["bigint"]]],[11,"add",E,E,39,[[["i64"]],["bigint"]]],[11,"add",E,E,40,[[["u8"]],[R[385]]]],[11,"add",E,E,39,[[["usize"]],["bigint"]]],[11,"add",E,E,40,[[["u8"]],[R[385]]]],[11,"add",E,E,39,[[["i32"]],["bigint"]]],[11,"add",E,E,39,[[["i16"]],["bigint"]]],[11,"add",E,E,40,[[["u64"]],[R[385]]]],[11,"clone",E,E,40,[[["self"]],[R[385]]]],[11,"clone",E,E,20,[[["self"]],["sign"]]],[11,"clone",E,E,39,[[["self"]],["bigint"]]],[11,"one",E,E,39,[[],["bigint"]]],[11,"one",E,E,40,[[],[R[385]]]],[11,R[421],E,E,40,[[["self"],[R[385]]]]],[11,R[421],E,E,40,[[["self"],[R[385]]]]],[11,R[420],E,E,40,[[["self"],[R[385]]]]],[11,R[420],E,E,40,[[["self"],[R[385]]]]],[11,"bitor",E,E,40,[[[R[385]]],[R[385]]]],[11,"bitor",E,E,40,[[[R[385]]],[R[385]]]],[11,R[432],E,E,40,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[432],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"bitxor",E,E,40,[[[R[385]]],[R[385]]]],[11,"bitxor",E,E,40,[[[R[385]]],[R[385]]]],[11,"shr",E,E,39,[[["usize"]],["bigint"]]],[11,"shr",E,E,40,[[["usize"]],[R[385]]]],[11,"decode",E,E,20,[[["__d"]],[["sign"],[R[4],["sign"]]]]],[11,"decode",E,E,39,[[["__d"]],[["bigint"],[R[4],["bigint"]]]]],[11,"decode",E,E,40,[[["__d"]],[[R[4],[R[385]]],[R[385]]]]],[11,"eq",E,E,19,[[["self"],[R[417]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[417]]],["bool"]]],[11,"eq",E,E,20,[[["sign"],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[385]],["self"]],["bool"]]],[11,"eq",E,E,39,[[["bigint"],["self"]],["bool"]]],[11,R[367],E,E,40,[[["self"],["u8"]]]],[11,R[367],E,E,40,[[["self"],["usize"]]]],[11,R[367],E,E,40,[[["u32"],["self"]]]],[11,R[367],E,E,40,[[["self"],[R[385]]]]],[11,R[367],E,E,40,[[["self"],["u16"]]]],[11,R[367],E,E,40,[[[R[385]],["self"]]]],[11,R[367],E,E,40,[[["self"],["u64"]]]],[11,"encode",E,E,39,[[["__s"],["self"]],[R[4]]]],[11,"encode",E,E,40,[[["__s"],["self"]],[R[4]]]],[11,"encode",E,E,20,[[["__s"],["self"]],[R[4]]]],[11,"div",E,E,39,[[["u64"]],["bigint"]]],[11,"div",E,E,39,[[["u32"]],["bigint"]]],[11,"div",E,E,39,[[["i16"]],["bigint"]]],[11,"div",E,E,40,[[[R[385]]],[R[385]]]],[11,"div",E,E,40,[[["usize"]],[R[385]]]],[11,"div",E,E,40,[[[R[385]]],[R[385]]]],[11,"div",E,E,39,[[["bigint"]],["bigint"]]],[11,"div",E,E,39,[[["i64"]],["bigint"]]],[11,"div",E,E,40,[[["u64"]],[R[385]]]],[11,"div",E,E,39,[[["bigint"]],["bigint"]]],[11,"div",E,E,39,[[["usize"]],["bigint"]]],[11,"div",E,E,39,[[["isize"]],["bigint"]]],[11,"div",E,E,40,[[["u64"]],[R[385]]]],[11,"div",E,E,39,[[["i8"]],["bigint"]]],[11,"div",E,E,39,[[["i8"]],["bigint"]]],[11,"div",E,E,40,[[["u16"]],[R[385]]]],[11,"div",E,E,39,[[["u8"]],["bigint"]]],[11,"div",E,E,39,[[["u16"]],["bigint"]]],[11,"div",E,E,39,[[["i32"]],["bigint"]]],[11,"div",E,E,40,[[["u32"]],[R[385]]]],[11,"div",E,E,40,[[["u8"]],[R[385]]]],[11,"div",E,E,39,[[["u64"]],["bigint"]]],[11,"div",E,E,40,[[["u8"]],[R[385]]]],[11,"div",E,E,39,[[["usize"]],["bigint"]]],[11,"div",E,E,39,[[["u32"]],["bigint"]]],[11,"div",E,E,39,[[["i32"]],["bigint"]]],[11,"div",E,E,40,[[["usize"]],[R[385]]]],[11,"div",E,E,40,[[["u16"]],[R[385]]]],[11,"div",E,E,39,[[["i64"]],["bigint"]]],[11,"div",E,E,39,[[["u8"]],["bigint"]]],[11,"div",E,E,40,[[["u32"]],[R[385]]]],[11,"div",E,E,39,[[["isize"]],["bigint"]]],[11,"div",E,E,39,[[["i16"]],["bigint"]]],[11,"div",E,E,39,[[["u16"]],["bigint"]]],[11,R[422],E,E,40,[[["self"],[R[385]]]]],[11,R[422],E,E,40,[[["self"],[R[385]]]]],[11,R[415],E,E,40,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[415],E,E,39,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[369],E,E,40,[[["self"],["u16"]]]],[11,R[369],E,E,40,[[["u32"],["self"]]]],[11,R[369],E,E,40,[[["self"],["u8"]]]],[11,R[369],E,E,40,[[["self"],["u64"]]]],[11,R[369],E,E,40,[[["self"],[R[385]]]]],[11,R[369],E,E,40,[[[R[385]],["self"]]]],[11,R[369],E,E,40,[[["self"],["usize"]]]],[11,"fmt",E,E,39,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,40,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"cmp",E,E,20,[[["sign"],["self"]],[R[418]]]],[11,"cmp",E,E,40,[[[R[385]],["self"]],[R[418]]]],[11,"cmp",E,E,39,[[["bigint"],["self"]],[R[418]]]],[11,R[764],E,E,40,[[["self"],["usize"]]]],[11,"bitand",E,E,40,[[[R[385]]],[R[385]]]],[11,"bitand",E,E,40,[[[R[385]]],[R[385]]]],[11,R[431],E,E,40,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[431],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"fmt",E,E,39,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,40,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,R[373],E,E,39,[[["str"]],[[R[417]],["bigint"],[R[4],["bigint",R[417]]]]]],[11,R[373],E,E,40,[[["str"]],[[R[4],[R[385],R[417]]],[R[417]],[R[385]]]]],[11,R[433],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[433],E,E,40,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,"neg",E,R[762],20,[[],["sign"]]],[11,"neg",E,E,39,[[],["bigint"]]],[11,"neg",E,E,40,[[],[R[385]]]],[11,"fmt",E,E,40,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,39,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,R[434],E,E,40,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[434],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"sub",E,E,39,[[["u8"]],["bigint"]]],[11,"sub",E,E,39,[[["u64"]],["bigint"]]],[11,"sub",E,E,39,[[["i8"]],["bigint"]]],[11,"sub",E,E,39,[[["isize"]],["bigint"]]],[11,"sub",E,E,39,[[["i32"]],["bigint"]]],[11,"sub",E,E,39,[[["u32"]],["bigint"]]],[11,"sub",E,E,40,[[["u8"]],[R[385]]]],[11,"sub",E,E,40,[[["u64"]],[R[385]]]],[11,"sub",E,E,40,[[["u16"]],[R[385]]]],[11,"sub",E,E,40,[[[R[385]]],[R[385]]]],[11,"sub",E,E,40,[[["u32"]],[R[385]]]],[11,"sub",E,E,39,[[["i16"]],["bigint"]]],[11,"sub",E,E,39,[[["isize"]],["bigint"]]],[11,"sub",E,E,39,[[["u64"]],["bigint"]]],[11,"sub",E,E,40,[[["usize"]],[R[385]]]],[11,"sub",E,E,39,[[["u32"]],["bigint"]]],[11,"sub",E,E,39,[[["i32"]],["bigint"]]],[11,"sub",E,E,39,[[["u16"]],["bigint"]]],[11,"sub",E,E,39,[[["usize"]],["bigint"]]],[11,"sub",E,E,40,[[["u16"]],[R[385]]]],[11,"sub",E,E,39,[[["i16"]],["bigint"]]],[11,"sub",E,E,39,[[["usize"]],["bigint"]]],[11,"sub",E,E,40,[[["u64"]],[R[385]]]],[11,"sub",E,E,39,[[["i8"]],["bigint"]]],[11,"sub",E,E,39,[[["u16"]],["bigint"]]],[11,"sub",E,E,39,[[["bigint"]],["bigint"]]],[11,"sub",E,E,40,[[["u32"]],[R[385]]]],[11,"sub",E,E,39,[[["i64"]],["bigint"]]],[11,"sub",E,E,39,[[["i64"]],["bigint"]]],[11,"sub",E,E,40,[[[R[385]]],[R[385]]]],[11,"sub",E,E,40,[[["usize"]],[R[385]]]],[11,"sub",E,E,39,[[["bigint"]],["bigint"]]],[11,"sub",E,E,39,[[["u8"]],["bigint"]]],[11,"sub",E,E,40,[[["u8"]],[R[385]]]],[11,"from",E,E,39,[[["usize"]],["bigint"]]],[11,"from",E,E,39,[[["u8"]],["bigint"]]],[11,"from",E,E,40,[[["u16"]],[R[385]]]],[11,"from",E,E,39,[[["u64"]],["bigint"]]],[11,"from",E,E,39,[[["isize"]],["bigint"]]],[11,"from",E,E,39,[[["i8"]],["bigint"]]],[11,"from",E,E,19,[[[R[760]]],[R[417]]]],[11,"from",E,E,40,[[["usize"]],[R[385]]]],[11,"from",E,E,39,[[["i64"]],["bigint"]]],[11,"from",E,E,39,[[["i32"]],["bigint"]]],[11,"from",E,E,39,[[["u32"]],["bigint"]]],[11,"from",E,E,39,[[["i16"]],["bigint"]]],[11,"from",E,E,40,[[["u8"]],[R[385]]]],[11,"from",E,E,39,[[["u16"]],["bigint"]]],[11,"from",E,E,40,[[["u64"]],[R[385]]]],[11,"from",E,E,40,[[["u32"]],[R[385]]]],[11,"from",E,E,39,[[[R[385]]],["bigint"]]],[11,R[419],E,E,20,[[["sign"],["self"]],[[R[418]],[R[11],[R[418]]]]]],[11,R[419],E,E,40,[[[R[385]],["self"]],[[R[418]],[R[11],[R[418]]]]]],[11,R[419],E,E,39,[[["bigint"],["self"]],[[R[418]],[R[11],[R[418]]]]]],[11,R[441],E,E,40,[[["i64"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[442],E,E,40,[[["u64"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[443],E,E,40,[[["f64"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[441],E,E,39,[[["i64"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[442],E,E,39,[[["u64"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[443],E,E,39,[[["f64"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[102],E,E,19,[[["self"]],["str"]]],[11,R[680],E,E,40,[[[R[385]],["self"]]]],[11,R[359],E,E,40,[[[R[385]],["self"]],[R[385]]]],[11,R[360],E,E,40,[[[R[385]],["self"]],[R[385]]]],[11,R[361],E,E,40,[[[R[385]],["self"]]]],[11,"gcd",E,R[423],40,[[[R[385]],["self"]],[R[385]]]],[11,"lcm",E,R[424],40,[[[R[385]],["self"]],[R[385]]]],[11,R[765],E,R[425],40,[[[R[385]],["self"]],["bool"]]],[11,R[426],E,R[427],40,[[[R[385]],["self"]],["bool"]]],[11,R[766],E,R[428],40,[[["self"]],["bool"]]],[11,"is_odd",E,R[429],40,[[["self"]],["bool"]]],[11,R[680],E,E,39,[[["bigint"],["self"]]]],[11,R[359],E,E,39,[[["bigint"],["self"]],["bigint"]]],[11,R[360],E,E,39,[[["bigint"],["self"]],["bigint"]]],[11,R[361],E,E,39,[[["bigint"],["self"]]]],[11,"gcd",E,R[423],39,[[["bigint"],["self"]],["bigint"]]],[11,"lcm",E,R[424],39,[[["bigint"],["self"]],["bigint"]]],[11,R[765],E,R[425],39,[[["bigint"],["self"]],["bool"]]],[11,R[426],E,R[427],39,[[["bigint"],["self"]],["bool"]]],[11,R[766],E,R[428],39,[[["self"]],["bool"]]],[11,"is_odd",E,R[429],39,[[["self"]],["bool"]]],[11,"mul",E,E,39,[[["u16"]],["bigint"]]],[11,"mul",E,E,40,[[["u8"]],[R[385]]]],[11,"mul",E,E,39,[[["u32"]],["bigint"]]],[11,"mul",E,E,39,[[["bigint"]],["bigint"]]],[11,"mul",E,E,40,[[["u32"]],[R[385]]]],[11,"mul",E,E,39,[[["u64"]],["bigint"]]],[11,"mul",E,E,40,[[[R[385]]],[R[385]]]],[11,"mul",E,E,39,[[["i64"]],["bigint"]]],[11,"mul",E,E,39,[[["usize"]],["bigint"]]],[11,"mul",E,E,39,[[["i64"]],["bigint"]]],[11,"mul",E,E,39,[[["i32"]],["bigint"]]],[11,"mul",E,E,40,[[["usize"]],[R[385]]]],[11,"mul",E,E,39,[[["isize"]],["bigint"]]],[11,"mul",E,E,39,[[["usize"]],["bigint"]]],[11,"mul",E,E,39,[[["i16"]],["bigint"]]],[11,"mul",E,E,39,[[["i16"]],["bigint"]]],[11,"mul",E,E,40,[[["usize"]],[R[385]]]],[11,"mul",E,E,40,[[[R[385]]],[R[385]]]],[11,"mul",E,E,39,[[["isize"]],["bigint"]]],[11,"mul",E,E,40,[[["u16"]],[R[385]]]],[11,"mul",E,E,40,[[["u8"]],[R[385]]]],[11,"mul",E,E,39,[[["u64"]],["bigint"]]],[11,"mul",E,E,39,[[["u8"]],["bigint"]]],[11,"mul",E,E,20,[[["sign"]],["sign"]]],[11,"mul",E,E,39,[[["u32"]],["bigint"]]],[11,"mul",E,E,40,[[["u64"]],[R[385]]]],[11,"mul",E,E,39,[[["u8"]],["bigint"]]],[11,"mul",E,E,40,[[["u32"]],[R[385]]]],[11,"mul",E,E,39,[[["i8"]],["bigint"]]],[11,"mul",E,E,40,[[["u16"]],[R[385]]]],[11,"mul",E,E,39,[[["i32"]],["bigint"]]],[11,"mul",E,E,39,[[["bigint"]],["bigint"]]],[11,"mul",E,E,39,[[["i8"]],["bigint"]]],[11,"mul",E,E,40,[[["u64"]],[R[385]]]],[11,"mul",E,E,39,[[["u16"]],["bigint"]]],[11,R[370],E,E,40,[[["self"],["usize"]]]],[11,R[370],E,E,40,[[["self"],[R[385]]]]],[11,R[370],E,E,40,[[["u32"],["self"]]]],[11,R[370],E,E,40,[[["self"],["u64"]]]],[11,R[370],E,E,40,[[["self"],[R[385]]]]],[11,R[370],E,E,40,[[["self"],["u16"]]]],[11,R[370],E,E,40,[[["self"],["u8"]]]],[11,R[761],E,E,39,[[],["bigint"]]],[11,R[761],E,E,40,[[],[R[385]]]],[11,"rem",E,E,39,[[["usize"]],["bigint"]]],[11,"rem",E,E,40,[[["u8"]],[R[385]]]],[11,"rem",E,E,39,[[["i8"]],["bigint"]]],[11,"rem",E,E,39,[[["i64"]],["bigint"]]],[11,"rem",E,E,39,[[["i64"]],["bigint"]]],[11,"rem",E,E,39,[[["u16"]],["bigint"]]],[11,"rem",E,E,40,[[["u64"]],[R[385]]]],[11,"rem",E,E,40,[[["u16"]],[R[385]]]],[11,"rem",E,E,40,[[[R[385]]],[R[385]]]],[11,"rem",E,E,40,[[["u64"]],[R[385]]]],[11,"rem",E,E,39,[[["i8"]],["bigint"]]],[11,"rem",E,E,40,[[[R[385]]],[R[385]]]],[11,"rem",E,E,39,[[["u32"]],["bigint"]]],[11,"rem",E,E,39,[[["u64"]],["bigint"]]],[11,"rem",E,E,40,[[["u32"]],[R[385]]]],[11,"rem",E,E,40,[[["usize"]],[R[385]]]],[11,"rem",E,E,40,[[["u16"]],[R[385]]]],[11,"rem",E,E,39,[[["i32"]],["bigint"]]],[11,"rem",E,E,39,[[["i16"]],["bigint"]]],[11,"rem",E,E,40,[[["u8"]],[R[385]]]],[11,"rem",E,E,39,[[["isize"]],["bigint"]]],[11,"rem",E,E,39,[[["u32"]],["bigint"]]],[11,"rem",E,E,40,[[["usize"]],[R[385]]]],[11,"rem",E,E,39,[[["usize"]],["bigint"]]],[11,"rem",E,E,39,[[["bigint"]],["bigint"]]],[11,"rem",E,E,39,[[["u64"]],["bigint"]]],[11,"rem",E,E,39,[[["u8"]],["bigint"]]],[11,"rem",E,E,39,[[["i16"]],["bigint"]]],[11,"rem",E,E,39,[[["isize"]],["bigint"]]],[11,"rem",E,E,39,[[["u8"]],["bigint"]]],[11,"rem",E,E,39,[[["bigint"]],["bigint"]]],[11,"rem",E,E,39,[[["u16"]],["bigint"]]],[11,"rem",E,E,40,[[["u32"]],[R[385]]]],[11,"rem",E,E,39,[[["i32"]],["bigint"]]],[11,"fmt",E,E,19,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,39,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,40,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",R[594],E,48,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,47,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"hash",E,E,47,[[["h"],["self"]]]],[11,R[366],E,E,47,[[["self"],["ratio"]]]],[11,R[366],E,E,47,[[["self"],[T]]]],[11,R[366],E,E,47,[[["self"],["ratio"]]]],[11,R[366],E,E,47,[[["self"],[T]]]],[11,"encode",E,E,47,[[["__st"],["self"]],[R[4]]]],[11,R[368],E,E,47,[[["self"],["ratio"]]]],[11,R[368],E,E,47,[[["self"],["ratio"]]]],[11,R[368],E,E,47,[[["self"],[T]]]],[11,R[368],E,E,47,[[["self"],[T]]]],[11,"add",E,E,47,[[[T]],["ratio"]]],[11,"add",E,E,47,[[[T]],["ratio"]]],[11,"add",E,E,47,[[["ratio"]],["ratio"]]],[11,"add",E,E,47,[[["ratio"]],["ratio"]]],[11,"clone",E,E,48,[[["self"]],[R[446]]]],[11,"clone",E,E,47,[[["self"]],["ratio"]]],[11,R[434],E,E,47,[[["self"],["ratio"]],[["ratio"],[R[11],["ratio"]]]]],[11,"into",E,E,47,[[]]],[11,R[431],E,E,47,[[["self"],["ratio"]],[["ratio"],[R[11],["ratio"]]]]],[11,"decode",E,E,47,[[["__dt"]],[[R[4],["ratio"]],["ratio"]]]],[11,"eq",E,E,48,[[[R[446]],["self"]],["bool"]]],[11,"ne",E,E,48,[[[R[446]],["self"]],["bool"]]],[11,"eq",E,E,47,[[["self"],["ratio"]],["bool"]]],[11,R[367],E,E,47,[[["self"],["ratio"]]]],[11,R[367],E,E,47,[[["self"],[T]]]],[11,R[367],E,E,47,[[["self"],[T]]]],[11,R[367],E,E,47,[[["self"],["ratio"]]]],[11,"div",E,E,47,[[["ratio"]],["ratio"]]],[11,"div",E,E,47,[[[T]],["ratio"]]],[11,"div",E,E,47,[[[T]],["ratio"]]],[11,"div",E,E,47,[[["ratio"]],["ratio"]]],[11,R[369],E,E,47,[[["self"],[T]]]],[11,R[369],E,E,47,[[["self"],["ratio"]]]],[11,R[369],E,E,47,[[["self"],["ratio"]]]],[11,R[369],E,E,47,[[["self"],[T]]]],[11,"zero",E,E,47,[[],["ratio"]]],[11,R[595],E,E,47,[[["self"]],["bool"]]],[11,"cmp",E,E,47,[[["self"],["ratio"]],[R[418]]]],[11,R[432],E,E,47,[[["self"],["ratio"]],[["ratio"],[R[11],["ratio"]]]]],[11,R[374],E,R[794],47,[[["u32"],["str"]],[[R[446]],["ratio"],[R[4],["ratio",R[446]]]]]],[11,R[373],E,R[793],47,[[["str"]],[[R[446]],["ratio"],[R[4],["ratio",R[446]]]]]],[11,"neg",E,E,47,[[],["ratio"]]],[11,"abs",E,E,47,[[["self"]],["ratio"]]],[11,R[449],E,E,47,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,47,[[["self"]],["ratio"]]],[11,R[439],E,E,47,[[["self"]],["bool"]]],[11,R[440],E,E,47,[[["self"]],["bool"]]],[11,"sub",E,E,47,[[["ratio"]],["ratio"]]],[11,"sub",E,E,47,[[[T]],["ratio"]]],[11,"sub",E,E,47,[[["ratio"]],["ratio"]]],[11,"sub",E,E,47,[[[T]],["ratio"]]],[11,R[419],E,E,47,[[["self"],["ratio"]],[[R[418]],[R[11],[R[418]]]]]],[11,"from",E,E,47,[[[T]],["ratio"]]],[11,"from",E,E,47,[[],["ratio"]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["u16"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["u16"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["u16"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["u16"]]]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["u32"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["u32"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["u32"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["u32"]]]]],[11,R[441],E,E,47,[[["i64"]],[["ratio",["u8"]],[R[11],["ratio"]]]]],[11,R[442],E,E,47,[[["u64"]],[["ratio",["u8"]],[R[11],["ratio"]]]]],[11,R[447],E,E,47,[[["f32"]],[["ratio",["u8"]],[R[11],["ratio"]]]]],[11,R[443],E,E,47,[[["f64"]],[["ratio",["u8"]],[R[11],["ratio"]]]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["usize"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["usize"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["usize"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["usize"]]]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["isize"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["isize"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["isize"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["isize"]]]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["bigint"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["bigint"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["bigint"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["bigint"]]]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["i8"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["i8"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["i8"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["i8"]]]]],[11,R[441],E,E,47,[[["i64"]],[["ratio",["i64"]],[R[11],["ratio"]]]]],[11,R[442],E,E,47,[[["u64"]],[["ratio",["i64"]],[R[11],["ratio"]]]]],[11,R[447],E,E,47,[[["f32"]],[["ratio",["i64"]],[R[11],["ratio"]]]]],[11,R[443],E,E,47,[[["f64"]],[["ratio",["i64"]],[R[11],["ratio"]]]]],[11,R[441],E,E,47,[[["i64"]],[["ratio",["i32"]],[R[11],["ratio"]]]]],[11,R[442],E,E,47,[[["u64"]],[["ratio",["i32"]],[R[11],["ratio"]]]]],[11,R[447],E,E,47,[[["f32"]],[["ratio",["i32"]],[R[11],["ratio"]]]]],[11,R[443],E,E,47,[[["f64"]],[["ratio",["i32"]],[R[11],["ratio"]]]]],[11,R[441],E,E,47,[[["i64"]],[["ratio",["i16"]],[R[11],["ratio"]]]]],[11,R[442],E,E,47,[[["u64"]],[["ratio",["i16"]],[R[11],["ratio"]]]]],[11,R[447],E,E,47,[[["f32"]],[["ratio",["i16"]],[R[11],["ratio"]]]]],[11,R[443],E,E,47,[[["f64"]],[["ratio",["i16"]],[R[11],["ratio"]]]]],[11,R[441],E,E,47,[[["i64"]],[[R[11],["ratio"]],["ratio",["u64"]]]]],[11,R[442],E,E,47,[[["u64"]],[[R[11],["ratio"]],["ratio",["u64"]]]]],[11,R[447],E,E,47,[[["f32"]],[[R[11],["ratio"]],["ratio",["u64"]]]]],[11,R[443],E,E,47,[[["f64"]],[[R[11],["ratio"]],["ratio",["u64"]]]]],[11,R[102],E,E,48,[[["self"]],["str"]]],[11,"one",E,E,47,[[],["ratio"]]],[11,R[370],E,E,47,[[["self"],["ratio"]]]],[11,R[370],E,E,47,[[["self"],[T]]]],[11,R[370],E,E,47,[[["self"],["ratio"]]]],[11,R[370],E,E,47,[[["self"],[T]]]],[11,"mul",E,E,47,[[["ratio"]],["ratio"]]],[11,"mul",E,E,47,[[["ratio"]],["ratio"]]],[11,"mul",E,E,47,[[[T]],["ratio"]]],[11,"mul",E,E,47,[[[T]],["ratio"]]],[11,"rem",E,E,47,[[["ratio"]],["ratio"]]],[11,"rem",E,E,47,[[[T]],["ratio"]]],[11,"rem",E,E,47,[[[T]],["ratio"]]],[11,"rem",E,E,47,[[["ratio"]],["ratio"]]],[11,"fmt",E,R[792],47,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,48,[[[R[100]],["self"]],[["error"],[R[4],["error"]]]]],[11,R[433],E,E,47,[[["self"],["ratio"]],[["ratio"],[R[11],["ratio"]]]]],[11,"new",R[491],R[430],39,[[["u32"],["sign"],["vec",["u32"]]],["bigint"]]],[11,R[731],E,R[390],39,[[["sign"],[R[385]]],["bigint"]]],[11,R[389],E,R[390],39,[[["sign"]],["bigint"]]],[11,R[391],E,R[732],39,[[["self"],["sign"]]]],[11,R[392],E,R[390],39,[[["sign"]],["bigint"]]],[11,R[393],E,R[390],39,[[["sign"]],["bigint"]]],[11,R[733],E,R[394],39,[[],["bigint"]]],[11,R[734],E,R[394],39,[[],["bigint"]]],[11,R[395],E,R[390],39,[[["u32"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[396],E,R[398],39,[[["u32"],["sign"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[397],E,R[398],39,[[["u32"],["sign"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[399],E,R[401],39,[[["self"]]]],[11,R[400],E,R[401],39,[[["self"]]]],[11,R[735],E,R[402],39,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[736],E,R[402],39,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[403],E,R[404],39,[[["u32"],["self"]],[R[3]]]],[11,R[405],E,R[406],39,[[["u32"],["self"]]]],[11,R[407],E,R[408],39,[[["u32"],["self"]]]],[11,"sign",E,R[737],39,[[["self"]],["sign"]]],[11,"bits",E,R[409],39,[[["self"]],["usize"]]],[11,R[415],E,R[738],39,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[431],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[432],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[433],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[434],E,E,39,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"modpow",E,R[739],39,[[["bigint"],["self"]],["bigint"]]],[11,"new",E,R[384],40,[[["u32"],["vec",["u32"]]],[R[385]]]],[11,R[389],E,R[384],40,[[],[R[385]]]],[11,R[391],E,R[728],40,[[["self"]]]],[11,R[392],E,R[384],40,[[],[R[385]]]],[11,R[393],E,R[384],40,[[],[R[385]]]],[11,R[395],E,R[729],40,[[["u32"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[396],E,R[386],40,[[["u32"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[397],E,R[386],40,[[["u32"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[399],E,R[387],40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[400],E,R[387],40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[403],E,R[404],40,[[["u32"],["self"]],[R[3]]]],[11,R[405],E,R[406],40,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,R[407],E,R[408],40,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[409],40,[[["self"]],["usize"]]],[11,"modpow",E,R[730],40,[[[R[385]],["self"]],[R[385]]]],[11,"new",R[591],R[692],0,[[[T]],[R[364]]]],[11,"i",E,R[693],0,[[],[R[364]]]],[11,"norm_sqr",E,R[694],0,[[["self"]],[T]]],[11,"scale",E,R[695],0,[[["self"],[T]],[R[364]]]],[11,"unscale",E,R[696],0,[[["self"],[T]],[R[364]]]],[11,"conj",E,R[697],0,[[["self"]],[R[364]]]],[11,"inv",E,R[698],0,[[["self"]],[R[364]]]],[11,"norm",E,R[699],0,[[["self"]],[T]]],[11,"arg",E,R[700],0,[[["self"]],[T]]],[11,"to_polar",E,R[701],0,[[["self"]]]],[11,R[702],E,R[703],0,[[[T]],[R[364]]]],[11,"exp",E,R[704],0,[[["self"]],[R[364]]]],[11,"ln",E,R[705],0,[[["self"]],[R[364]]]],[11,"sqrt",E,R[706],0,[[["self"]],[R[364]]]],[11,"powf",E,R[707],0,[[["self"],[T]],[R[364]]]],[11,"log",E,R[708],0,[[["self"],[T]],[R[364]]]],[11,"powc",E,R[709],0,[[["self"],[R[364]]],[R[364]]]],[11,"expf",E,R[710],0,[[["self"],[T]],[R[364]]]],[11,"sin",E,R[711],0,[[["self"]],[R[364]]]],[11,"cos",E,R[712],0,[[["self"]],[R[364]]]],[11,"tan",E,R[713],0,[[["self"]],[R[364]]]],[11,"asin",E,R[714],0,[[["self"]],[R[364]]]],[11,"acos",E,R[715],0,[[["self"]],[R[364]]]],[11,"atan",E,R[716],0,[[["self"]],[R[364]]]],[11,"sinh",E,R[717],0,[[["self"]],[R[364]]]],[11,"cosh",E,R[718],0,[[["self"]],[R[364]]]],[11,"tanh",E,R[719],0,[[["self"]],[R[364]]]],[11,"asinh",E,R[720],0,[[["self"]],[R[364]]]],[11,"acosh",E,R[721],0,[[["self"]],[R[364]]]],[11,"atanh",E,R[722],0,[[["self"]],[R[364]]]],[11,"is_nan",E,R[723],0,[[],["bool"]]],[11,R[279],E,R[724],0,[[],["bool"]]],[11,R[280],E,R[725],0,[[],["bool"]]],[11,R[281],E,R[726],0,[[],["bool"]]],[11,"new",R[592],R[688],42,[[[T]],[R[689]]]],[11,"new",R[594],R[771],47,[[[T]],["ratio"]]],[11,R[772],E,R[773],47,[[[T]],["ratio"]]],[11,"new_raw",E,R[774],47,[[[T]],["ratio"]]],[11,R[775],E,R[776],47,[[["self"]],[T]]],[11,"numer",E,R[777],47,[[["self"]],[T]]],[11,"denom",E,R[778],47,[[["self"]],[T]]],[11,R[779],E,R[780],47,[[["self"]],["bool"]]],[11,"reduced",E,R[781],47,[[["self"]],["ratio"]]],[11,"recip",E,R[782],47,[[["self"]],["ratio"]]],[11,"floor",E,R[783],47,[[["self"]],["ratio"]]],[11,"ceil",E,R[784],47,[[["self"]],["ratio"]]],[11,"round",E,R[785],47,[[["self"]],["ratio"]]],[11,"trunc",E,R[786],47,[[["self"]],["ratio"]]],[11,"fract",E,R[787],47,[[["self"]],["ratio"]]],[11,"pow",E,R[788],47,[[["i32"],["self"]],["ratio"]]],[11,R[789],E,R[790],47,[[[T]],[[R[11],["ratio"]],["ratio",["bigint"]]]]],[11,R[791],E,E,47,[[["f"]],[["ratio"],[R[11],["ratio"]]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[338]],[8,R[339]],[8,R[340]],[8,R[341]],[8,R[342]],[8,"PrimInt"],[8,"Float"],[8,R[353]],[8,R[354]],[8,R[678]],[8,R[355]],[8,"Pow"],[4,R[435]],[4,"Sign"],[8,R[437]],[8,R[436]],[8,R[747]],[8,R[343]],[8,R[344]],[8,R[345]],[8,R[346]],[8,R[347]],[8,R[348]],[8,R[349]],[8,"Inv"],[8,"MulAdd"],[8,R[350]],[8,R[351]],[8,R[352]],[8,"Real"],[4,R[337]],[3,R[336]],[3,"BigInt"],[3,"BigUint"],[3,R[372]],[3,R[362]],[3,"Range"],[3,R[380]],[3,R[381]],[3,R[382]],[3,"Ratio"],[3,R[448]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[596],N,N],[3,R[380],E,R[597],N,N],[3,R[381],E,R[598],N,N],[3,R[382],E,R[599],N,N],[5,"range",E,R[505],N,[[["a"]],["range"]]],[5,R[506],E,R[507],N,[[["a"]],[R[377]]]],[5,R[508],E,R[509],N,[[["a"]],[R[378]]]],[5,R[510],E,R[511],N,[[["a"]],[R[379]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[222],E,E,0,[[],["i"]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[222],E,E,1,[[],["i"]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[222],E,E,2,[[],["i"]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"into",E,E,2,[[],[U]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[222],E,E,3,[[],["i"]]],[11,R[20],E,E,3,[[[U]],[R[4]]]],[11,R[22],E,E,3,[[],[R[4]]]],[11,"into",E,E,3,[[],[U]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[27]]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[[T],["self"]]]],[11,"next",E,E,0,[[["self"]],[R[11]]]],[11,R[375],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[11]]]],[11,R[375],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[11]]]],[11,"next",E,E,3,[[["self"]],[R[11]]]],[11,R[376],E,E,0,[[["self"]],[R[11]]]],[11,R[376],E,E,1,[[["self"]],[R[11]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[377]]]],[11,"clone",E,E,2,[[["self"]],[R[378]]]],[11,"clone",E,E,3,[[["self"]],[R[379]]]]],"p":[[3,"Range"],[3,R[380]],[3,R[381]],[3,R[382]]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[3,R[256],"rand",R[215],N,N],[3,R[216],E,R[217],N,N],[3,R[213],E,R[214],N,N],[3,R[257],E,"An Xorshift[1] random number generator.",N,N],[3,R[259],E,"Iterator which will generate a stream of random items.",N,N],[3,R[260],E,"Iterator which will continuously generate random ascii…",N,N],[3,"Open01",E,R[209],N,N],[12,"0",E,E,0,N],[3,"Closed01",E,R[209],N,N],[12,"0",E,E,1,N],[3,"StdRng",E,"The standard RNG. This is designed to be efficient on the…",N,N],[3,R[261],E,"The thread-local RNG.",N,N],[5,"weak_rng",E,"Create a weak random number generator with a default…",N,[[],[R[219]]]],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[244]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],["rand"]]],[5,"sample",E,"DEPRECATED: use `seq::sample_iter` instead.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions",E,"Sampling from random distributions.",N,N],[3,R[251],R[210],"A wrapper for generating types that implement `Rand` via…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",2,N],[12,"item",E,"The actual item which is being weighted",2,N],[3,R[252],E,"A distribution that selects from a finite collection of…",N,N],[0,"range",E,"Generating numbers between two others.",N,N],[3,"Range",R[223],"Sample values uniformly between two bounds.",N,N],[8,R[246],E,"The helper trait for types that have a sensible way to…",N,N],[10,"construct_range",E,"Construct the `Range` object that `sample_range` requires.…",3,[[],["range"]]],[10,"sample_range",E,"Sample a value from the given `Range` with the given `Rng`…",3,[[["r"],["range"]],["self"]]],[11,"new",E,"Create a new `Range` instance that samples uniformly from…",4,[[["x"]],["range"]]],[0,"gamma",R[210],"The Gamma and derived distributions.",N,N],[3,"Gamma",R[224],"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,R[247],E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",5,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",6,[[["f64"]],[R[241]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",7,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",8,[[["f64"]],["studentt"]]],[0,"normal",R[210],"The normal and derived distributions.",N,N],[3,R[248],R[225],"A wrapper around an `f64` to generate N(0, 1) random…",N,N],[12,"0",E,E,9,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[249],E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",10,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",11,[[["f64"]],[R[243]]]],[0,"exponential",R[210],"The exponential distribution.",N,N],[3,"Exp1",R[226],"A wrapper around an `f64` to generate Exp(1) random numbers.",N,N],[12,"0",E,E,12,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",13,[[["f64"]],["exp"]]],[8,"Sample",R[210],"Types that can be used to create a random instance of…",N,N],[10,"sample",E,"Generate a random value of `Support`, using `rng` as the…",14,[[["r"],["self"]],["support"]]],[8,R[250],E,"`Sample`s that do not require keeping track of state.",N,N],[10,R[230],E,"Generate a random value.",15,[[["r"],["self"]],["support"]]],[11,"new",E,E,16,[[],["randsample"]]],[11,"new",E,"Create a new `WeightedChoice`.",17,[[],["weightedchoice"]]],[0,"jitter","rand","Non-physical true random number generator based on timing…",N,N],[3,R[254],R[227],"A true random number generator based on jitter in the CPU…",N,N],[4,R[253],E,"An error that can occur when `test_timer` fails.",N,N],[13,"NoTimer",E,"No timer available.",18,N],[13,"CoarseTimer",E,"Timer too coarse to use as an entropy source.",18,N],[13,"NotMonotonic",E,"Timer is not monotonically increasing.",18,N],[13,"TinyVariantions",E,"Variations of deltas of time too small.",18,N],[13,"TooManyStuck",E,"Too many stuck results (indicating no added entropy).",18,N],[11,"new",E,"Create a new `JitterRng`. Makes use of `std::time` for a…",19,[[],[[R[4],[R[211],R[212]]],[R[211]],[R[212]]]]],[11,"new_with_timer",E,"Create a new `JitterRng`. A custom timer can be supplied,…",19,[[],[R[211]]]],[11,"set_rounds",E,"Configures how many rounds are used to generate each…",19,[[["u32"],["self"]]]],[11,"test_timer",E,"Basic quality tests on the timer, by measuring CPU timing…",19,[[["self"]],[["u32"],[R[4],["u32",R[212]]],[R[212]]]]],[11,"timer_stats",E,"Statistical test: return the timer delta of one normal run…",19,[[["self"],["bool"]],["i64"]]],[0,"os","rand","Interfaces to the operating system provided random number…",N,N],[3,"OsRng",R[235],"A random number generator that retrieves randomness…",N,N],[11,"new",E,"Create a new `OsRng`.",20,[[],[["osrng"],[R[4],["osrng"]]]]],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",N,N],[3,"ReadRng",R[228],"An RNG that reads random bytes straight from a `Read`.…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",21,[[["r"]],["readrng"]]],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it…",N,N],[3,R[255],R[229],"A wrapper around any RNG which reseeds the underlying RNG…",N,N],[12,"reseeder",E,"Controls the behaviour when reseeding the RNG.",22,N],[3,R[262],E,"Reseed an RNG using a `Default` instance. This reseeds by…",N,N],[8,"Reseeder",E,"Something that can be used to reseed an RNG via…",N,N],[10,"reseed",E,"Reseed the given RNG.",23,[[["r"],["self"]]]],[11,"new",E,"Create a new `ReseedingRng` with the given parameters.",22,[[["rsdr"],["u64"],["r"]],[R[238]]]],[11,"reseed_if_necessary",E,"Reseed the internal RNG if the number of bytes that have…",22,[[["self"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],[["vec"],[R[4],["vec","vec"]]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,[[["r"],["usize"]],["vec"]]],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,[[["r"],["usize"]],[[T],["vec"]]]],[5,"sample_indices",E,"Randomly sample exactly `amount` indices from `0..length`.",N,[[["r"],["usize"]],[["vec",["usize"]],["usize"]]]],[0,"chacha","rand","The ChaCha random number generator.",N,N],[3,R[213],"rand::chacha",R[214],N,N],[0,"isaac","rand","The ISAAC random number generator.",N,N],[3,R[256],"rand::isaac",R[215],N,N],[3,R[216],E,R[217],N,N],[11,R[218],"rand","Create an ChaCha random number generator using the default…",24,[[],[R[231]]]],[11,"set_counter",E,"Sets the internal 128-bit ChaCha counter to a…",24,[[["self"],["u64"]]]],[11,R[218],E,"Create an ISAAC random number generator using the default…",25,[[],[R[239]]]],[11,R[218],E,"Create a 64-bit ISAAC random number generator using the…",26,[[],[R[232]]]],[11,R[218],E,"Creates a new XorShiftRng instance which is not seeded.",27,[[],[R[219]]]],[8,"Rand",E,"A type that can be randomly generated using an `Rng`.",N,N],[10,"rand",E,"Generates a random instance of this type using the…",28,[[["r"]],["self"]]],[8,"Rng",E,"A random number generator.",N,N],[10,R[234],E,"Return the next random u32.",29,[[["self"]],["u32"]]],[11,R[236],E,"Return the next random u64.",29,[[["self"]],["u64"]]],[11,"next_f32",E,"Return the next random f32 selected from the half-open…",29,[[["self"]],["f32"]]],[11,"next_f64",E,"Return the next random f64 selected from the half-open…",29,[[["self"]],["f64"]]],[11,R[233],E,"Fill `dest` with random data.",29,[[["self"]]]],[11,"gen",E,"Return a random value of a `Rand` type.",29,[[["self"]],["rand"]]],[11,"gen_iter",E,"Return an iterator that will yield an infinite number of…",29,[[["self"]],[["generator"],["rand"]]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`).",29,[[[R[220]],["self"],[R[221]]],[[R[220]],[R[221]]]]],[11,"gen_weighted_bool",E,"Return a bool with a 1 in n chance of true",29,[[["u32"],["self"]],["bool"]]],[11,"gen_ascii_chars",E,"Return an iterator of random characters from the set…",29,[[["self"]],["asciigenerator"]]],[11,"choose",E,"Return a random element from `values`.",29,[[["self"]],[[R[11]],[T]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",29,[[["self"]],[[T],[R[11]]]]],[11,"shuffle",E,"Shuffle a mutable slice in place.",29,[[["self"]]]],[8,R[258],E,"A random number generator that can be explicitly seeded to…",N,N],[10,"reseed",E,"Reseed an RNG with the given seed.",30,[[["seed"],["self"]]]],[10,R[237],E,"Create a new RNG with the given seed.",30,[[["seed"]],["self"]]],[11,"new",E,"Create a randomly seeded instance of `StdRng`.",31,[[],[["stdrng"],[R[4],["stdrng"]]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[18],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[[T],["self"]]]],[11,R[20],E,E,25,[[[U]],[R[4]]]],[11,R[26],E,E,25,[[["self"]],[T]]],[11,R[23],E,E,25,[[["self"]],[R[27]]]],[11,R[21],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[],[R[4]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[18],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[[T],["self"]]]],[11,R[20],E,E,26,[[[U]],[R[4]]]],[11,R[26],E,E,26,[[["self"]],[T]]],[11,R[23],E,E,26,[[["self"]],[R[27]]]],[11,R[21],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[],[R[4]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[18],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[[T],["self"]]]],[11,R[20],E,E,24,[[[U]],[R[4]]]],[11,R[26],E,E,24,[[["self"]],[T]]],[11,R[23],E,E,24,[[["self"]],[R[27]]]],[11,R[21],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[],[R[4]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[18],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[[T],["self"]]]],[11,R[20],E,E,27,[[[U]],[R[4]]]],[11,R[26],E,E,27,[[["self"]],[T]]],[11,R[23],E,E,27,[[["self"]],[R[27]]]],[11,R[21],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[],[R[4]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[222],E,E,32,[[],["i"]]],[11,"into",E,E,32,[[],[U]]],[11,R[20],E,E,32,[[[U]],[R[4]]]],[11,R[26],E,E,32,[[["self"]],[T]]],[11,R[23],E,E,32,[[["self"]],[R[27]]]],[11,R[21],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[],[R[4]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[222],E,E,33,[[],["i"]]],[11,"into",E,E,33,[[],[U]]],[11,R[20],E,E,33,[[[U]],[R[4]]]],[11,R[26],E,E,33,[[["self"]],[T]]],[11,R[23],E,E,33,[[["self"]],[R[27]]]],[11,R[21],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[],[R[4]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[18],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[[T],["self"]]]],[11,R[20],E,E,31,[[[U]],[R[4]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[R[27]]]],[11,R[21],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[],[R[4]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[18],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[[T],["self"]]]],[11,R[20],E,E,34,[[[U]],[R[4]]]],[11,R[26],E,E,34,[[["self"]],[T]]],[11,R[23],E,E,34,[[["self"]],[R[27]]]],[11,R[21],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[],[R[4]]]],[11,"from",R[210],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[18],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[[T],["self"]]]],[11,R[20],E,E,16,[[[U]],[R[4]]]],[11,R[26],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[R[27]]]],[11,R[21],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[],[R[4]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[20],E,E,17,[[[U]],[R[4]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[R[27]]]],[11,R[21],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[],[R[4]]]],[11,"from",R[223],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[[T],["self"]]]],[11,R[20],E,E,4,[[[U]],[R[4]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[R[27]]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[],[R[4]]]],[11,"from",R[224],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[[T],["self"]]]],[11,R[20],E,E,5,[[[U]],[R[4]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[R[27]]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[],[R[4]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[[T],["self"]]]],[11,R[20],E,E,6,[[[U]],[R[4]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[R[27]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[],[R[4]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[[T],["self"]]]],[11,R[20],E,E,7,[[[U]],[R[4]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[R[27]]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[],[R[4]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[[T],["self"]]]],[11,R[20],E,E,8,[[[U]],[R[4]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[R[27]]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[],[R[4]]]],[11,"from",R[225],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[[T],["self"]]]],[11,R[20],E,E,9,[[[U]],[R[4]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[R[27]]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[],[R[4]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[[T],["self"]]]],[11,R[20],E,E,10,[[[U]],[R[4]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[R[27]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[],[R[4]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[[T],["self"]]]],[11,R[20],E,E,11,[[[U]],[R[4]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[R[27]]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[],[R[4]]]],[11,"from",R[226],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[[T],["self"]]]],[11,R[20],E,E,12,[[[U]],[R[4]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[R[27]]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[],[R[4]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[[T],["self"]]]],[11,R[20],E,E,13,[[[U]],[R[4]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[R[27]]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[],[R[4]]]],[11,"from",R[227],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[20],E,E,19,[[[U]],[R[4]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[R[27]]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[],[R[4]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[18],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[[T],["self"]]]],[11,R[25],E,E,18,[[["self"]],[R[3]]]],[11,R[20],E,E,18,[[[U]],[R[4]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[R[27]]]],[11,R[21],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[],[R[4]]]],[11,"from",R[235],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[20],E,E,20,[[[U]],[R[4]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[R[27]]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[],[R[4]]]],[11,"from",R[228],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[20],E,E,21,[[[U]],[R[4]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[R[27]]]],[11,R[21],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[],[R[4]]]],[11,"from",R[229],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[20],E,E,22,[[[U]],[R[4]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[R[27]]]],[11,R[21],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[],[R[4]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[18],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[[T],["self"]]]],[11,R[20],E,E,35,[[[U]],[R[4]]]],[11,R[26],E,E,35,[[["self"]],[T]]],[11,R[23],E,E,35,[[["self"]],[R[27]]]],[11,R[21],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[],[R[4]]]],[11,"sample",R[223],E,4,[[["r"],["self"]],["sup"]]],[11,"sample",R[224],E,5,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,6,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,7,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,8,[[["r"],["self"]],["f64"]]],[11,"sample",R[225],E,10,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,11,[[["r"],["self"]],["f64"]]],[11,"sample",R[226],E,13,[[["r"],["self"]],["f64"]]],[11,"sample",R[210],E,16,[[["r"],["self"]],["sup"]]],[11,"sample",E,E,17,[[["r"],["self"]],[T]]],[11,R[230],R[223],E,4,[[["r"],["self"]],["sup"]]],[11,R[230],R[224],E,5,[[["r"],["self"]],["f64"]]],[11,R[230],E,E,6,[[["r"],["self"]],["f64"]]],[11,R[230],E,E,7,[[["r"],["self"]],["f64"]]],[11,R[230],E,E,8,[[["r"],["self"]],["f64"]]],[11,R[230],R[225],E,10,[[["r"],["self"]],["f64"]]],[11,R[230],E,E,11,[[["r"],["self"]],["f64"]]],[11,R[230],R[226],E,13,[[["r"],["self"]],["f64"]]],[11,R[230],R[210],E,16,[[["r"],["self"]],["sup"]]],[11,R[230],E,E,17,[[["r"],["self"]],[T]]],[11,"reseed",R[229],E,35,[[["r"],["self"]]]],[11,"rand",R[225],E,9,[[["r"]],[R[242]]]],[11,"rand",R[226],E,12,[[["r"]],["exp1"]]],[11,"rand","rand",E,0,[[["r"]],[["f64"],["open01",["f64"]]]]],[11,"rand",E,E,1,[[["r"]],[["f64"],["closed01",["f64"]]]]],[11,"rand",E,E,0,[[["r"]],[["open01",["f32"]],["f32"]]]],[11,"rand",E,E,1,[[["r"]],[["closed01",["f32"]],["f32"]]]],[11,"rand",E,E,24,[[["r"]],[R[231]]]],[11,"rand",E,E,25,[[["r"]],[R[239]]]],[11,"rand",E,E,26,[[["r"]],[R[232]]]],[11,"rand",E,E,27,[[["r"]],[R[219]]]],[11,R[234],R[227],E,19,[[["self"]],["u32"]]],[11,R[236],E,E,19,[[["self"]],["u64"]]],[11,R[233],E,E,19,[[["self"]]]],[11,R[234],R[235],E,20,[[["self"]],["u32"]]],[11,R[236],E,E,20,[[["self"]],["u64"]]],[11,R[233],E,E,20,[[["self"]]]],[11,R[234],R[228],E,21,[[["self"]],["u32"]]],[11,R[236],E,E,21,[[["self"]],["u64"]]],[11,R[233],E,E,21,[[["self"]]]],[11,R[234],R[229],E,22,[[["self"]],["u32"]]],[11,R[236],E,E,22,[[["self"]],["u64"]]],[11,R[233],E,E,22,[[["self"]]]],[11,R[234],"rand",E,24,[[["self"]],["u32"]]],[11,R[234],E,E,25,[[["self"]],["u32"]]],[11,R[234],E,E,26,[[["self"]],["u32"]]],[11,R[236],E,E,26,[[["self"]],["u64"]]],[11,R[234],E,E,27,[[["self"]],["u32"]]],[11,R[234],E,E,31,[[["self"]],["u32"]]],[11,R[236],E,E,31,[[["self"]],["u64"]]],[11,R[234],E,E,34,[[["self"]],["u32"]]],[11,R[236],E,E,34,[[["self"]],["u64"]]],[11,R[233],E,E,34,[[["self"]]]],[11,"reseed",R[229],E,22,[[["self"]]]],[11,R[237],E,"Create a new `ReseedingRng` from the given reseeder and…",22,[[],[R[238]]]],[11,"reseed","rand",E,24,[[["self"]]]],[11,R[237],E,"Create a ChaCha generator from a seed, obtained from a…",24,[[],[R[231]]]],[11,"reseed",E,E,25,[[["self"]]]],[11,R[237],E,R[240],25,[[],[R[239]]]],[11,"reseed",E,E,26,[[["self"]]]],[11,R[237],E,R[240],26,[[],[R[232]]]],[11,"reseed",E,"Reseed an XorShiftRng. This will panic if `seed` is…",27,[[["self"]]]],[11,R[237],E,"Create a new XorShiftRng. This will panic if `seed` is…",27,[[],[R[219]]]],[11,"reseed",E,E,31,[[["self"]]]],[11,R[237],E,E,31,[[],["stdrng"]]],[11,"eq",R[227],E,18,[[[R[212]],["self"]],["bool"]]],[11,"clone",R[223],E,4,[[["self"]],["range"]]],[11,"clone",R[224],E,5,[[["self"]],["gamma"]]],[11,"clone",E,E,6,[[["self"]],[R[241]]]],[11,"clone",E,E,7,[[["self"]],["fisherf"]]],[11,"clone",E,E,8,[[["self"]],["studentt"]]],[11,"clone",R[225],E,9,[[["self"]],[R[242]]]],[11,"clone",E,E,10,[[["self"]],["normal"]]],[11,"clone",E,E,11,[[["self"]],[R[243]]]],[11,"clone",R[226],E,12,[[["self"]],["exp1"]]],[11,"clone",E,E,13,[[["self"]],["exp"]]],[11,"clone",R[210],E,16,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["weighted"]]],[11,"clone",R[227],E,18,[[["self"]],[R[212]]]],[11,"clone",R[229],E,35,[[["self"]],[R[245]]]],[11,"clone","rand",E,24,[[["self"]],[R[231]]]],[11,"clone",E,E,25,[[["self"]],[R[239]]]],[11,"clone",E,E,26,[[["self"]],[R[232]]]],[11,"clone",E,E,27,[[["self"]],[R[219]]]],[11,"clone",E,E,31,[[["self"]],["stdrng"]]],[11,"clone",E,E,34,[[["self"]],[R[244]]]],[11,"next",E,E,32,[[["self"]],[R[11]]]],[11,"next",E,E,33,[[["self"]],[["char"],[R[11],["char"]]]]],[11,R[761],R[229],E,35,[[],[R[245]]]],[11,"fmt",R[223],E,4,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[224],E,5,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,6,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,7,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,8,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[225],E,9,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,10,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,11,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[226],E,12,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,13,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[210],E,16,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,17,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[227],E,19,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,18,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[235],E,20,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[228],E,21,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[229],E,22,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,35,[[[R[100]],["self"]],[R[4]]]],[11,"fmt","rand",E,24,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,25,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,26,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,27,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,32,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,33,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,31,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,34,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[227],E,18,[[[R[100]],["self"]],[R[4]]]],[11,R[102],E,E,18,[[["self"]],["str"]]]],"p":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,R[246]],[3,"Range"],[3,"Gamma"],[3,R[247]],[3,"FisherF"],[3,"StudentT"],[3,R[248]],[3,"Normal"],[3,R[249]],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,R[250]],[3,R[251]],[3,R[252]],[4,R[253]],[3,R[254]],[3,"OsRng"],[3,"ReadRng"],[3,R[255]],[8,"Reseeder"],[3,R[213]],[3,R[256]],[3,R[216]],[3,R[257]],[8,"Rand"],[8,"Rng"],[8,R[258]],[3,"StdRng"],[3,R[259]],[3,R[260]],[3,R[261]],[3,R[262]]]};
searchIndex[R[0]]={"doc":"Support code for encoding and decoding types.","i":[[0,"base64",R[0],"Base64 binary-to-text encoding",N,N],[3,"Config",R[17],"Contains configuration parameters for `to_base64`.",N,N],[12,"char_set",E,"Character set to use",0,N],[12,"newline",E,"Newline to use",0,N],[12,"pad",E,"True to pad output with `=` characters",0,N],[12,"line_length",E,"`Some(len)` to wrap lines at `len`, `None` to disable line…",0,N],[4,R[103],E,"Available encoding character sets",N,N],[13,"Standard",E,"The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe",E,"The URL safe character set (uses `-` and `_`)",1,N],[4,"Newline",E,"Available newline types",N,N],[13,"LF",E,"A linefeed (i.e. Unix-style newline)",2,N],[13,"CRLF",E,"A carriage return and a linefeed (i.e. Windows-style…",2,N],[4,R[104],E,"Errors that can occur when decoding a base64 encoded string",N,N],[13,"InvalidBase64Byte",E,"The input contained a character not part of the base64…",3,N],[13,"InvalidBase64Length",E,R[2],3,N],[7,"STANDARD",E,"Configuration for RFC 4648 standard base64 encoding",N,N],[7,"URL_SAFE",E,"Configuration for RFC 4648 base64url encoding",N,N],[7,"MIME",E,"Configuration for RFC 2045 MIME base64 encoding",N,N],[8,"ToBase64",E,"A trait for converting a value to base64 encoding.",N,N],[10,"to_base64",E,"Converts the value of `self` to a base64 value following…",4,[[["config"],["self"]],[R[3]]]],[8,R[105],E,"A trait for converting from base64 encoded values.",N,N],[10,"from_base64",E,"Converts the value of `self`, interpreted as base64…",5,[[["self"]],[[R[1]],[R[4],["vec",R[1]]],["vec",["u8"]]]]],[0,"hex",R[0],"Hex binary-to-text encoding",N,N],[4,R[106],R[24],"Errors that can occur when decoding a hex encoded string",N,N],[13,"InvalidHexCharacter",E,"The input contained a character not part of the hex format",6,N],[13,"InvalidHexLength",E,R[2],6,N],[8,"ToHex",E,"A trait for converting a value to hexadecimal encoding",N,N],[10,"to_hex",E,"Converts the value of `self` to a hex value, returning the…",7,[[["self"]],[R[3]]]],[8,"FromHex",E,"A trait for converting hexadecimal encoded values",N,N],[10,"from_hex",E,"Converts the value of `self`, interpreted as hexadecimal…",8,[[["self"]],[[R[5]],["vec",["u8"]],[R[4],["vec",R[5]]]]]],[0,"json",R[0],"JSON parsing and serialization",N,N],[3,R[118],R[28],E,N,N],[3,"AsJson",E,E,N,N],[3,R[113],E,E,N,N],[3,"Encoder",E,"A structure for implementing serialization to JSON.",N,N],[3,"Stack",E,"A Stack represents the current position of the parser in…",N,N],[3,"Parser",E,"A streaming JSON parser implemented as an iterator of…",N,N],[3,"Builder",E,"A Builder consumes a json::Parser to create a generic Json…",N,N],[3,"Decoder",E,"A structure to decode JSON to values in rust.",N,N],[4,"Json",E,"Represents a json value",N,N],[13,"I64",E,E,9,N],[13,"U64",E,E,9,N],[13,"F64",E,E,9,N],[13,"String",E,E,9,N],[13,"Boolean",E,E,9,N],[13,"Array",E,E,9,N],[13,R[7],E,E,9,N],[13,"Null",E,E,9,N],[4,R[107],E,"The errors that can arise while parsing a JSON stream.",N,N],[13,"InvalidSyntax",E,E,10,N],[13,"InvalidNumber",E,E,10,N],[13,"EOFWhileParsingObject",E,E,10,N],[13,"EOFWhileParsingArray",E,E,10,N],[13,"EOFWhileParsingValue",E,E,10,N],[13,"EOFWhileParsingString",E,E,10,N],[13,"KeyMustBeAString",E,E,10,N],[13,"ExpectedColon",E,E,10,N],[13,"TrailingCharacters",E,E,10,N],[13,"TrailingComma",E,E,10,N],[13,"InvalidEscape",E,E,10,N],[13,"InvalidUnicodeCodePoint",E,E,10,N],[13,"LoneLeadingSurrogateInHexEscape",E,E,10,N],[13,"UnexpectedEndOfHexEscape",E,E,10,N],[13,"UnrecognizedHex",E,E,10,N],[13,"NotFourDigit",E,E,10,N],[13,"ControlCharacterInString",E,E,10,N],[13,"NotUtf8",E,E,10,N],[4,R[108],E,E,N,N],[13,"SyntaxError",E,"msg, line, col",11,N],[13,"IoError",E,E,11,N],[4,R[109],E,E,N,N],[13,"ParseError",E,E,12,N],[13,"ExpectedError",E,E,12,N],[13,"MissingFieldError",E,E,12,N],[13,"UnknownVariantError",E,E,12,N],[13,"ApplicationError",E,E,12,N],[13,"EOF",E,E,12,N],[4,R[110],E,E,N,N],[13,"FmtError",E,E,13,N],[13,"BadHashmapKey",E,E,13,N],[4,R[111],E,"The output of the streaming parser.",N,N],[13,"ObjectStart",E,E,14,N],[13,"ObjectEnd",E,E,14,N],[13,"ArrayStart",E,E,14,N],[13,"ArrayEnd",E,E,14,N],[13,"BooleanValue",E,E,14,N],[13,"I64Value",E,E,14,N],[13,"U64Value",E,E,14,N],[13,"F64Value",E,E,14,N],[13,"StringValue",E,E,14,N],[13,"NullValue",E,E,14,N],[13,"Error",E,E,14,N],[4,R[112],E,"StackElements compose a Stack. For example, Key(\"foo\"),…",N,N],[13,"Index",E,E,15,N],[13,"Key",E,E,15,N],[5,"error_str",E,"Returns a readable error string for a given error code.",N,[[[R[95]]],["str"]]],[5,"decode",E,"Shortcut function to decode a JSON `&str` into an object",N,[[["str"]],[["decodable"],[R[64]]]]],[5,"encode",E,"Shortcut function to encode a `T` into a JSON `String`",N,[[[T]],[[R[30],[R[3]]],[R[3]]]]],[5,"as_json",E,"Create an `AsJson` wrapper which can be used to print a…",N,[[[T]],[["asjson"],[R[6]]]]],[5,"as_pretty_json",E,"Create an `AsPrettyJson` wrapper which can be used to…",N,[[[T]],[[R[6]],[R[14]]]]],[6,"Array",E,E,N,N],[6,R[7],E,E,N,N],[6,"BuilderError",E,E,N,N],[6,"EncodeResult",E,E,N,N],[6,"DecodeResult",E,E,N,N],[8,"ToJson",E,"A trait for converting values to JSON",N,N],[10,"to_json",E,"Converts the value of `self` to an instance of JSON",16,[[["self"]],["json"]]],[11,"new_pretty",E,R[8],17,[[["write"]],[R[9]]]],[11,"new",E,R[8],17,[[["write"]],[R[9]]]],[11,"set_indent",E,"Set the number of spaces to indent for each level. This is…",17,[[["u32"],["self"]],[R[4]]]],[11,"from_reader",E,"Decodes a json value from an `&mut io::Read`",9,[[["read"]],[[R[10]],[R[4],[R[10]]]]]],[11,R[373],E,"Decodes a json value from a string",9,[[["str"]],[[R[10]],[R[4],[R[10]]]]]],[11,"pretty",E,"Borrow this json object as a pretty object to generate a…",9,[[["self"]],["prettyjson"]]],[11,"find",E,"If the Json value is an Object, returns the value…",9,[[["str"],["self"]],[["json"],[R[11],["json"]]]]],[11,"find_path",E,"Attempts to get a nested Json Object for each key in…",9,[[["self"]],[["json"],[R[11],["json"]]]]],[11,"search",E,"If the Json value is an Object, performs a depth-first…",9,[[["str"],["self"]],[["json"],[R[11],["json"]]]]],[11,"is_object",E,"Returns true if the Json value is an Object. Returns false…",9,[[["self"]],["bool"]]],[11,"as_object",E,"If the Json value is an Object, returns a reference to the…",9,[[["self"]],[[R[12]],[R[11],[R[12]]]]]],[11,"as_object_mut",E,"If the Json value is an Object, returns a mutable…",9,[[["self"]],[[R[11],[R[12]]],[R[12]]]]],[11,"into_object",E,"If the Json value is an Object, returns the associated…",9,[[],[[R[11],[R[12]]],[R[12]]]]],[11,"is_array",E,"Returns true if the Json value is an Array. Returns false…",9,[[["self"]],["bool"]]],[11,"as_array",E,"If the Json value is an Array, returns a reference to the…",9,[[["self"]],[[R[11],["array"]],["array"]]]],[11,"as_array_mut",E,"If the Json value is an Array, returns a mutable reference…",9,[[["self"]],[["array"],[R[11],["array"]]]]],[11,"into_array",E,"If the Json value is an Array, returns the associated…",9,[[],[[R[11],["array"]],["array"]]]],[11,"is_string",E,"Returns true if the Json value is a String. Returns false…",9,[[["self"]],["bool"]]],[11,"as_string",E,"If the Json value is a String, returns the associated str.…",9,[[["self"]],[["str"],[R[11],["str"]]]]],[11,"is_number",E,"Returns true if the Json value is a Number. Returns false…",9,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the Json value is a i64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the Json value is a u64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the Json value is a f64. Returns false…",9,[[["self"]],["bool"]]],[11,"as_i64",E,"If the Json value is a number, return or cast it to a i64.…",9,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"as_u64",E,"If the Json value is a number, return or cast it to a u64.…",9,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"as_f64",E,"If the Json value is a number, return or cast it to a f64.…",9,[[["self"]],[["f64"],[R[11],["f64"]]]]],[11,"is_boolean",E,"Returns true if the Json value is a Boolean. Returns false…",9,[[["self"]],["bool"]]],[11,"as_boolean",E,"If the Json value is a Boolean, returns the associated…",9,[[["self"]],[[R[11],["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the Json value is a Null. Returns false…",9,[[["self"]],["bool"]]],[11,"as_null",E,"If the Json value is a Null, returns (). Returns None…",9,[[["self"]],[R[11]]]],[11,"new",E,E,18,[[],["stack"]]],[11,"len",E,"Returns The number of elements in the Stack.",18,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if the stack is empty.",18,[[["self"]],["bool"]]],[11,"get",E,"Provides access to the StackElement at a given index.…",18,[[["usize"],["self"]],[R[13]]]],[11,"is_equal_to",E,"Compares this stack with an array of StackElements.",18,[[["self"]],["bool"]]],[11,"starts_with",E,"Returns true if the bottom-most elements of this stack are…",18,[[["self"]],["bool"]]],[11,"ends_with",E,"Returns true if the top-most elements of this stack are…",18,[[["self"]],["bool"]]],[11,"top",E,"Returns the top-most element (if any).",18,[[["self"]],[[R[13]],[R[11],[R[13]]]]]],[11,"new",E,"Creates the JSON parser.",19,[[[T]],["parser"]]],[11,"stack",E,"Provides access to the current position in the logical…",19,[[["self"]],["stack"]]],[11,"new",E,"Create a JSON Builder.",20,[[[T]],["builder"]]],[11,"build",E,E,20,[[["self"]],[["json"],[R[10]],[R[4],["json",R[10]]]]]],[11,"new",E,"Creates a new decoder instance for decoding the specified…",21,[[["json"]],["decoder"]]],[11,"indent",E,"Set the indentation level for the emitted JSON",22,[[["u32"]],[R[14]]]],[8,"Decoder",R[0],"Trait for reading in an encoding for deserialization.",N,N],[16,"Error",E,R[16],23,N],[10,R[63],E,"Read a nil value.",23,[[["self"]],[R[4]]]],[10,R[65],E,"Read a usize value.",23,[[["self"]],[[R[4],["usize"]],["usize"]]]],[10,R[68],E,"Read a u64 value.",23,[[["self"]],[[R[4],["u64"]],["u64"]]]],[10,R[67],E,"Read a u32 value.",23,[[["self"]],[["u32"],[R[4],["u32"]]]]],[10,R[66],E,"Read a u16 value.",23,[[["self"]],[[R[4],["u16"]],["u16"]]]],[10,"read_u8",E,"Read a u8 value.",23,[[["self"]],[["u8"],[R[4],["u8"]]]]],[10,R[69],E,"Read a isize value.",23,[[["self"]],[["isize"],[R[4],["isize"]]]]],[10,R[72],E,"Read a i64 value.",23,[[["self"]],[["i64"],[R[4],["i64"]]]]],[10,R[71],E,"Read a i32 value.",23,[[["self"]],[["i32"],[R[4],["i32"]]]]],[10,R[70],E,"Read a i16 value.",23,[[["self"]],[["i16"],[R[4],["i16"]]]]],[10,"read_i8",E,"Read a i8 value.",23,[[["self"]],[[R[4],["i8"]],["i8"]]]],[10,R[75],E,"Read a bool value.",23,[[["self"]],[["bool"],[R[4],["bool"]]]]],[10,R[74],E,"Read a f64 value.",23,[[["self"]],[[R[4],["f64"]],["f64"]]]],[10,R[73],E,"Read a f32 value.",23,[[["self"]],[[R[4],["f32"]],["f32"]]]],[10,R[76],E,"Read a char value.",23,[[["self"]],[["char"],[R[4],["char"]]]]],[10,R[77],E,"Read a string value.",23,[[["self"]],[[R[3]],[R[4],[R[3]]]]]],[10,R[78],E,R[15],23,[[["str"],["self"],["f"]],[R[4]]]],[10,R[79],E,R[15],23,[[["self"],["f"]],[R[4]]]],[10,R[80],E,"Read an unnamed data item for an enumeration variant.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[81],E,R[15],23,[[["self"],["f"]],[R[4]]]],[10,R[82],E,"Read a named data item for an enumeration variant.",23,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[83],E,"Read an struct value.",23,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[84],E,"Read a field for a struct value.",23,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[85],E,"Read a tuple value.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[86],E,"Read a data item for a tuple.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[87],E,"Read a tuple struct value.",23,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[88],E,"Read a data item for a tuple struct.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[89],E,"Read an optional value.",23,[[["self"],["f"]],[R[4]]]],[10,R[90],E,"Read a sequence of values.",23,[[["self"],["f"]],[R[4]]]],[10,R[91],E,"Read an element in the sequence.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[92],E,"Read an associative container (map).",23,[[["self"],["f"]],[R[4]]]],[10,R[93],E,"Read the key for an entry in a map.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[94],E,"Read the value for an entry in a map.",23,[[["self"],["f"],["usize"]],[R[4]]]],[10,"error",E,"Record a decoding error.",23,[[["str"],["self"]]]],[8,"Encoder",E,"Trait for writing out an encoding when serializing.",N,N],[16,"Error",E,R[16],24,N],[10,R[29],E,"Emit a nil value.",24,[[["self"]],[R[4]]]],[10,R[31],E,"Emit a usize value.",24,[[["self"],["usize"]],[R[4]]]],[10,R[32],E,"Emit a u64 value.",24,[[["self"],["u64"]],[R[4]]]],[10,R[33],E,"Emit a u32 value.",24,[[["u32"],["self"]],[R[4]]]],[10,R[34],E,"Emit a u16 value.",24,[[["self"],["u16"]],[R[4]]]],[10,"emit_u8",E,"Emit a u8 value.",24,[[["self"],["u8"]],[R[4]]]],[10,R[35],E,"Emit a isize value.",24,[[["isize"],["self"]],[R[4]]]],[10,R[36],E,"Emit a i64 value.",24,[[["self"],["i64"]],[R[4]]]],[10,R[37],E,"Emit a i32 value.",24,[[["i32"],["self"]],[R[4]]]],[10,R[38],E,"Emit a i16 value.",24,[[["self"],["i16"]],[R[4]]]],[10,"emit_i8",E,"Emit a i8 value.",24,[[["self"],["i8"]],[R[4]]]],[10,R[39],E,"Emit a bool value.",24,[[["self"],["bool"]],[R[4]]]],[10,R[40],E,"Emit a f64 value.",24,[[["self"],["f64"]],[R[4]]]],[10,R[41],E,"Emit a f32 value.",24,[[["self"],["f32"]],[R[4]]]],[10,R[42],E,"Emit a char value.",24,[[["char"],["self"]],[R[4]]]],[10,R[43],E,"Emit a string value.",24,[[["str"],["self"]],[R[4]]]],[10,R[44],E,"Emit an enumeration value.",24,[[["str"],["self"],["f"]],[R[4]]]],[10,R[45],E,"Emit a enumeration variant value with no or unnamed data.",24,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[46],E,"Emit an unnamed data item for an enumeration variant.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[47],E,"Emit a enumeration variant value with no or named data.",24,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[48],E,"Emit a named data item for an enumeration variant.",24,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[49],E,"Emit a struct value.",24,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[50],E,"Emit a field item for a struct.",24,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[51],E,"Emit a tuple value.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[52],E,"Emit a data item for a tuple.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[53],E,"Emit a tuple struct value.",24,[[["str"],["self"],["f"],["usize"]],[R[4]]]],[10,R[54],E,"Emit a data item for a tuple struct.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[55],E,"Emit an optional value.",24,[[["self"],["f"]],[R[4]]]],[10,R[56],E,"Emit the `None` optional value.",24,[[["self"]],[R[4]]]],[10,R[57],E,"Emit the `Some(x)` optional value.",24,[[["self"],["f"]],[R[4]]]],[10,R[58],E,"Emit a sequence of values.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[59],E,"Emit an element in a sequence.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[60],E,"Emit an associative container (map).",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[61],E,"Emit the key for an entry in a map.",24,[[["self"],["f"],["usize"]],[R[4]]]],[10,R[62],E,"Emit the value for an entry in a map.",24,[[["self"],["f"],["usize"]],[R[4]]]],[8,R[114],E,"Trait for deserializing a type.",N,N],[10,"decode",E,"Deserialize a value using a `Decoder`.",25,[[["d"]],[R[4]]]],[8,R[115],E,"Trait for serializing a type.",N,N],[10,"encode",E,"Serialize a value using an `Encoder`.",26,[[["self"],["s"]],[R[4]]]],[8,R[116],E,"Trait with helper functions for implementing `Decodable`.",N,N],[10,"read_to_vec",E,"Read a sequence into a vector.",27,[[["self"],["f"]],[["vec"],[R[4],["vec"]]]]],[8,R[117],E,"Trait with helper functions for implementing `Encodable`.",N,N],[10,"emit_from_vec",E,"Emit a vector as a sequence.",28,[[["self"],["f"]],[R[4]]]],[11,"from",R[17],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[[T],["self"]]]],[11,R[25],E,E,3,[[["self"]],[R[3]]]],[11,R[20],E,E,3,[[[U]],[R[4]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[27]]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[],[R[4]]]],[11,"from",R[24],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[[T],["self"]]]],[11,R[25],E,E,6,[[["self"]],[R[3]]]],[11,R[20],E,E,6,[[[U]],[R[4]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[R[27]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[],[R[4]]]],[11,"from",R[28],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[25],E,E,29,[[["self"]],[R[3]]]],[11,R[20],E,E,29,[[[U]],[R[4]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[R[27]]]],[11,R[21],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[],[R[4]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[25],E,E,30,[[["self"]],[R[3]]]],[11,R[20],E,E,30,[[[U]],[R[4]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[R[27]]]],[11,R[21],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[],[R[4]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[25],E,E,22,[[["self"]],[R[3]]]],[11,R[20],E,E,22,[[[U]],[R[4]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[R[27]]]],[11,R[21],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[],[R[4]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[20],E,E,17,[[[U]],[R[4]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[R[27]]]],[11,R[21],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[],[R[4]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[20],E,E,18,[[[U]],[R[4]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[R[27]]]],[11,R[21],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[],[R[4]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[222],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[20],E,E,19,[[[U]],[R[4]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[R[27]]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[],[R[4]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[20],E,E,20,[[[U]],[R[4]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[R[27]]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[],[R[4]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[20],E,E,21,[[[U]],[R[4]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[R[27]]]],[11,R[21],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[],[R[4]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[[T],["self"]]]],[11,R[25],E,E,9,[[["self"]],[R[3]]]],[11,R[20],E,E,9,[[[U]],[R[4]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[R[27]]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[],[R[4]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[[T],["self"]]]],[11,R[20],E,E,10,[[[U]],[R[4]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[R[27]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[],[R[4]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[25],E,E,11,[[["self"]],[R[3]]]],[11,R[20],E,E,11,[[[U]],[R[4]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[R[27]]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[],[R[4]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[25],E,E,12,[[["self"]],[R[3]]]],[11,R[20],E,E,12,[[[U]],[R[4]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[R[27]]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[],[R[4]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[[T],["self"]]]],[11,R[25],E,E,13,[[["self"]],[R[3]]]],[11,R[20],E,E,13,[[[U]],[R[4]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[R[27]]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[],[R[4]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[20],E,E,14,[[[U]],[R[4]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[R[27]]]],[11,R[21],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[],[R[4]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[18],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[[T],["self"]]]],[11,R[20],E,E,15,[[[U]],[R[4]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[R[27]]]],[11,R[21],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[],[R[4]]]],[11,R[29],E,E,17,[[["self"]],[R[30]]]],[11,R[31],E,E,17,[[["self"],["usize"]],[R[30]]]],[11,R[32],E,E,17,[[["self"],["u64"]],[R[30]]]],[11,R[33],E,E,17,[[["u32"],["self"]],[R[30]]]],[11,R[34],E,E,17,[[["self"],["u16"]],[R[30]]]],[11,"emit_u8",E,E,17,[[["self"],["u8"]],[R[30]]]],[11,R[35],E,E,17,[[["isize"],["self"]],[R[30]]]],[11,R[36],E,E,17,[[["self"],["i64"]],[R[30]]]],[11,R[37],E,E,17,[[["i32"],["self"]],[R[30]]]],[11,R[38],E,E,17,[[["self"],["i16"]],[R[30]]]],[11,"emit_i8",E,E,17,[[["self"],["i8"]],[R[30]]]],[11,R[39],E,E,17,[[["self"],["bool"]],[R[30]]]],[11,R[40],E,E,17,[[["self"],["f64"]],[R[30]]]],[11,R[41],E,E,17,[[["self"],["f32"]],[R[30]]]],[11,R[42],E,E,17,[[["char"],["self"]],[R[30]]]],[11,R[43],E,E,17,[[["str"],["self"]],[R[30]]]],[11,R[44],E,E,17,[[["str"],["self"],["f"]],[R[30]]]],[11,R[45],E,E,17,[[["str"],["self"],["f"],["usize"]],[R[30]]]],[11,R[46],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[47],E,E,17,[[["str"],["self"],["f"],["usize"]],[R[30]]]],[11,R[48],E,E,17,[[["str"],["self"],["f"],["usize"]],[R[30]]]],[11,R[49],E,E,17,[[["str"],["self"],["f"],["usize"]],[R[30]]]],[11,R[50],E,E,17,[[["str"],["self"],["f"],["usize"]],[R[30]]]],[11,R[51],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[52],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[53],E,E,17,[[["str"],["self"],["f"],["usize"]],[R[30]]]],[11,R[54],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[55],E,E,17,[[["self"],["f"]],[R[30]]]],[11,R[56],E,E,17,[[["self"]],[R[30]]]],[11,R[57],E,E,17,[[["self"],["f"]],[R[30]]]],[11,R[58],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[59],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[60],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[61],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[62],E,E,17,[[["self"],["f"],["usize"]],[R[30]]]],[11,R[63],E,E,21,[[["self"]],[R[64]]]],[11,R[65],E,E,21,[[["self"]],[[R[64],["usize"]],["usize"]]]],[11,"read_u8",E,E,21,[[["self"]],[[R[64],["u8"]],["u8"]]]],[11,R[66],E,E,21,[[["self"]],[["u16"],[R[64],["u16"]]]]],[11,R[67],E,E,21,[[["self"]],[["u32"],[R[64],["u32"]]]]],[11,R[68],E,E,21,[[["self"]],[[R[64],["u64"]],["u64"]]]],[11,R[69],E,E,21,[[["self"]],[["isize"],[R[64],["isize"]]]]],[11,"read_i8",E,E,21,[[["self"]],[[R[64],["i8"]],["i8"]]]],[11,R[70],E,E,21,[[["self"]],[["i16"],[R[64],["i16"]]]]],[11,R[71],E,E,21,[[["self"]],[["i32"],[R[64],["i32"]]]]],[11,R[72],E,E,21,[[["self"]],[[R[64],["i64"]],["i64"]]]],[11,R[73],E,E,21,[[["self"]],[["f32"],[R[64],["f32"]]]]],[11,R[74],E,E,21,[[["self"]],[[R[64],["f64"]],["f64"]]]],[11,R[75],E,E,21,[[["self"]],[["bool"],[R[64],["bool"]]]]],[11,R[76],E,E,21,[[["self"]],[["char"],[R[64],["char"]]]]],[11,R[77],E,E,21,[[["self"]],[[R[64],[R[3]]],[R[3]]]]],[11,R[78],E,E,21,[[["str"],["self"],["f"]],[R[64]]]],[11,R[79],E,E,21,[[["self"],["f"]],[R[64]]]],[11,R[80],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,R[81],E,E,21,[[["self"],["f"]],[R[64]]]],[11,R[82],E,E,21,[[["str"],["self"],["f"],["usize"]],[R[64]]]],[11,R[83],E,E,21,[[["str"],["self"],["f"],["usize"]],[R[64]]]],[11,R[84],E,E,21,[[["str"],["self"],["f"],["usize"]],[R[64]]]],[11,R[85],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,R[86],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,R[87],E,E,21,[[["str"],["self"],["f"],["usize"]],[R[64]]]],[11,R[88],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,R[89],E,E,21,[[["self"],["f"]],[R[64]]]],[11,R[90],E,E,21,[[["self"],["f"]],[R[64]]]],[11,R[91],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,R[92],E,E,21,[[["self"],["f"]],[R[64]]]],[11,R[93],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,R[94],E,E,21,[[["self"],["f"],["usize"]],[R[64]]]],[11,"error",E,E,21,[[["str"],["self"]],[R[96]]]],[11,"encode",E,E,9,[[["self"],["s"]],[R[4]]]],[11,"to_json",E,E,9,[[["self"]],["json"]]],[11,"eq",E,E,9,[[["json"],["self"]],["bool"]]],[11,"ne",E,E,9,[[["json"],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[95]],["self"]],["bool"]]],[11,"eq",E,E,11,[[[R[98]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[96]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[96]]],["bool"]]],[11,"eq",E,E,13,[[[R[99]],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[97]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[97]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[13]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[13]],["self"]],["bool"]]],[11,"clone",R[17],E,1,[[["self"]],["characterset"]]],[11,"clone",E,E,2,[[["self"]],["newline"]]],[11,"clone",E,E,0,[[["self"]],["config"]]],[11,"clone",E,E,3,[[["self"]],[R[1]]]],[11,"clone",R[24],E,6,[[["self"]],[R[5]]]],[11,"clone",R[28],E,9,[[["self"]],["json"]]],[11,"clone",E,E,10,[[["self"]],[R[95]]]],[11,"clone",E,E,13,[[["self"]],["self"]]],[11,"clone",E,E,15,[[["self"]],[R[13]]]],[11,"from",E,E,12,[[[R[98]]],[R[96]]]],[11,"from",E,E,11,[[["error"]],[R[98]]]],[11,"from",E,E,13,[[["error"]],[R[99]]]],[11,R[419],E,E,9,[[["json"],["self"]],[[R[418]],[R[11],[R[418]]]]]],[11,"lt",E,E,9,[[["json"],["self"]],["bool"]]],[11,"le",E,E,9,[[["json"],["self"]],["bool"]]],[11,"gt",E,E,9,[[["json"],["self"]],["bool"]]],[11,"ge",E,E,9,[[["json"],["self"]],["bool"]]],[11,"next",E,E,19,[[["self"]],[[R[97]],[R[11],[R[97]]]]]],[11,"fmt",R[17],E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[24],E,6,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[28],E,9,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,11,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,12,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,13,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,10,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,14,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,15,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[17],E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[24],E,6,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",R[28],E,12,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,11,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,13,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,R[101],9,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,R[101],29,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,R[101],30,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,R[101],22,[[[R[100]],["self"]],[R[4]]]],[11,"index",E,E,9,[[["str"],["self"]],["json"]]],[11,"index",E,E,9,[[["self"],["usize"]],["json"]]],[11,R[373],E,E,9,[[["str"]],[["json"],[R[98]],[R[4],["json",R[98]]]]]],[11,R[102],R[17],E,3,[[["self"]],["str"]]],[11,R[102],R[24],E,6,[[["self"]],["str"]]],[11,R[102],R[28],E,12,[[["self"]],["str"]]],[11,"cause",E,E,12,[[["self"]],[[R[11],["stderror"]],["stderror"]]]],[11,R[102],E,E,11,[[["self"]],["str"]]],[11,R[102],E,E,13,[[["self"]],["str"]]]],"p":[[3,"Config"],[4,R[103]],[4,"Newline"],[4,R[104]],[8,"ToBase64"],[8,R[105]],[4,R[106]],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,R[107]],[4,R[108]],[4,R[109]],[4,R[110]],[4,R[111]],[4,R[112]],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,R[113]],[8,"Decoder"],[8,"Encoder"],[8,R[114]],[8,R[115]],[8,R[116]],[8,R[117]],[3,R[118]],[3,"AsJson"]]};
searchIndex[R[263]]={"doc":"Numeric traits for generic mathematics","i":[[3,R[336],R[263],E,N,N],[12,"kind",E,E,0,N],[4,R[337],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[587],N,[[[R[221]]],[R[221]]]],[0,R[600],E,E,N,N],[5,"zero","num_traits::identities",R[518],N,[[],["zero"]]],[5,"one",E,R[519],N,[[],["one"]]],[8,"Zero",E,R[512],N,N],[10,"zero",E,R[513],2,[[],["self"]]],[10,R[595],E,R[514],2,[[["self"]],["bool"]]],[8,"One",E,R[515],N,N],[10,"one",E,R[516],3,[[],["self"]]],[11,"is_one",E,R[517],3,[[["self"]],["bool"]]],[0,"sign",R[263],E,N,N],[5,"abs","num_traits::sign",R[264],N,[[["signed"]],["signed"]]],[5,R[449],E,R[265],N,[[["signed"]],["signed"]]],[5,"signum",E,R[266],N,[[["signed"]],["signed"]]],[8,"Signed",E,R[521],N,N],[10,"abs",E,R[264],4,[[["self"]],["self"]]],[10,R[449],E,R[265],4,[[["self"]],["self"]]],[10,"signum",E,R[266],4,[[["self"]],["self"]]],[10,R[439],E,R[522],4,[[["self"]],["bool"]]],[10,R[440],E,R[523],4,[[["self"]],["bool"]]],[8,R[601],E,R[524],N,N],[0,"ops",R[263],E,N,N],[0,R[602],R[267],E,N,N],[8,R[338],"num_traits::ops::saturating",R[525],N,N],[10,R[526],E,R[527],5,[[],["self"]]],[10,R[528],E,R[529],5,[[],["self"]]],[0,"checked",R[267],E,N,N],[8,R[339],"num_traits::ops::checked",R[531],N,N],[10,R[431],E,R[532],6,[[["self"]],[R[11]]]],[8,R[340],E,R[533],N,N],[10,R[432],E,R[534],7,[[["self"]],[R[11]]]],[8,R[341],E,R[535],N,N],[10,R[433],E,R[536],8,[[["self"]],[R[11]]]],[8,R[342],E,R[537],N,N],[10,R[434],E,R[538],9,[[["self"]],[R[11]]]],[8,R[343],E,R[603],N,N],[10,R[604],E,R[605],10,[[["self"]],[R[11]]]],[8,R[344],E,R[606],N,N],[10,R[607],E,R[608],11,[[["self"]],[R[11]]]],[8,R[345],E,R[609],N,N],[10,R[610],E,R[268],12,[[["u32"],["self"]],[R[11]]]],[8,R[346],E,R[611],N,N],[10,R[612],E,R[268],13,[[["u32"],["self"]],[R[11]]]],[0,"wrapping",R[267],E,N,N],[8,R[347],"num_traits::ops::wrapping",R[613],N,N],[10,R[614],E,R[615],14,[[["self"]],["self"]]],[8,R[348],E,R[616],N,N],[10,R[617],E,R[618],15,[[["self"]],["self"]]],[8,R[349],E,R[619],N,N],[10,R[620],E,R[621],16,[[["self"]],["self"]]],[0,"inv",R[267],E,N,N],[8,"Inv","num_traits::ops::inv",R[622],N,N],[16,"Output",E,R[335],17,N],[10,"inv",E,R[623],17,[[]]],[0,R[624],R[267],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[625],N,N],[16,"Output",E,R[626],18,N],[10,R[624],E,R[269],18,[[["a"],["b"]]]],[8,R[350],E,R[627],N,N],[10,R[628],E,R[269],19,[[["self"],["a"],["b"]]]],[0,"bounds",R[263],E,N,N],[8,"Bounded","num_traits::bounds",R[539],N,N],[10,R[270],E,R[540],20,[[],["self"]]],[10,R[271],E,R[541],20,[[],["self"]]],[0,"float",R[263],E,N,N],[8,R[351],"num_traits::float",R[629],N,N],[10,R[544],E,R[630],21,[[],["self"]]],[10,R[272],E,R[631],21,[[],["self"]]],[10,"nan",E,R[632],21,[[],["self"]]],[10,R[547],E,R[273],21,[[],["self"]]],[10,R[270],E,R[274],21,[[],["self"]]],[10,R[275],E,R[276],21,[[],["self"]]],[10,R[641],E,R[277],21,[[],["self"]]],[10,R[271],E,R[278],21,[[],["self"]]],[11,"is_nan",E,R[633],21,[[],["bool"]]],[11,R[279],E,R[634],21,[[],["bool"]]],[11,R[280],E,R[635],21,[[],["bool"]]],[11,R[281],E,R[282],21,[[],["bool"]]],[10,R[551],E,R[283],21,[[],[R[284]]]],[11,"floor",E,R[285],21,[[],["self"]]],[11,"ceil",E,R[286],21,[[],["self"]]],[11,"round",E,R[287],21,[[],["self"]]],[11,"trunc",E,R[288],21,[[],["self"]]],[11,"fract",E,R[289],21,[[],["self"]]],[11,"abs",E,R[290],21,[[],["self"]]],[11,"signum",E,R[291],21,[[],["self"]]],[11,R[292],E,R[636],21,[[],["bool"]]],[11,R[293],E,R[637],21,[[],["bool"]]],[11,"min",E,R[298],21,[[],["self"]]],[11,"max",E,R[297],21,[[],["self"]]],[11,"recip",E,R[638],21,[[],["self"]]],[11,"powi",E,R[294],21,[[["i32"]],["self"]]],[10,R[295],E,R[639],21,[[],["self"]]],[10,R[296],E,R[640],21,[[],["self"]]],[10,R[299],E,R[300],21,[[]]],[8,"Float",E,R[542],N,N],[10,"nan",E,R[543],22,[[],["self"]]],[10,R[544],E,R[545],22,[[],["self"]]],[10,R[272],E,R[546],22,[[],["self"]]],[10,R[547],E,R[273],22,[[],["self"]]],[10,R[270],E,R[274],22,[[],["self"]]],[10,R[275],E,R[276],22,[[],["self"]]],[11,R[641],E,R[277],22,[[],["self"]]],[10,R[271],E,R[278],22,[[],["self"]]],[10,"is_nan",E,R[548],22,[[],["bool"]]],[10,R[279],E,R[549],22,[[],["bool"]]],[10,R[280],E,R[550],22,[[],["bool"]]],[10,R[281],E,R[282],22,[[],["bool"]]],[10,R[551],E,R[283],22,[[],[R[284]]]],[10,"floor",E,R[285],22,[[],["self"]]],[10,"ceil",E,R[286],22,[[],["self"]]],[10,"round",E,R[287],22,[[],["self"]]],[10,"trunc",E,R[288],22,[[],["self"]]],[10,"fract",E,R[289],22,[[],["self"]]],[10,"abs",E,R[290],22,[[],["self"]]],[10,"signum",E,R[291],22,[[],["self"]]],[10,R[292],E,R[301],22,[[],["bool"]]],[10,R[293],E,R[302],22,[[],["bool"]]],[10,R[624],E,R[303],22,[[],["self"]]],[10,"recip",E,R[304],22,[[],["self"]]],[10,"powi",E,R[294],22,[[["i32"]],["self"]]],[10,"powf",E,R[552],22,[[],["self"]]],[10,"sqrt",E,R[305],22,[[],["self"]]],[10,"exp",E,R[306],22,[[],["self"]]],[10,"exp2",E,R[307],22,[[],["self"]]],[10,"ln",E,R[308],22,[[],["self"]]],[10,"log",E,R[309],22,[[],["self"]]],[10,"log2",E,R[310],22,[[],["self"]]],[10,"log10",E,R[311],22,[[],["self"]]],[11,R[295],E,R[312],22,[[],["self"]]],[11,R[296],E,R[313],22,[[],["self"]]],[10,"max",E,R[297],22,[[],["self"]]],[10,"min",E,R[298],22,[[],["self"]]],[10,R[449],E,R[265],22,[[],["self"]]],[10,"cbrt",E,R[314],22,[[],["self"]]],[10,"hypot",E,R[315],22,[[],["self"]]],[10,"sin",E,R[316],22,[[],["self"]]],[10,"cos",E,R[317],22,[[],["self"]]],[10,"tan",E,R[318],22,[[],["self"]]],[10,"asin",E,R[319],22,[[],["self"]]],[10,"acos",E,R[320],22,[[],["self"]]],[10,"atan",E,R[321],22,[[],["self"]]],[10,"atan2",E,R[322],22,[[],["self"]]],[10,"sin_cos",E,R[323],22,[[]]],[10,"exp_m1",E,R[324],22,[[],["self"]]],[10,"ln_1p",E,R[325],22,[[],["self"]]],[10,"sinh",E,R[326],22,[[],["self"]]],[10,"cosh",E,R[327],22,[[],["self"]]],[10,"tanh",E,R[328],22,[[],["self"]]],[10,"asinh",E,R[329],22,[[],["self"]]],[10,"acosh",E,R[330],22,[[],["self"]]],[10,"atanh",E,R[331],22,[[],["self"]]],[10,R[299],E,R[300],22,[[]]],[8,R[352],E,E,N,N],[10,"E",E,R[642],23,[[],["self"]]],[10,R[643],E,R[644],23,[[],["self"]]],[10,R[645],E,R[646],23,[[],["self"]]],[10,R[647],E,R[648],23,[[],["self"]]],[10,R[649],E,R[650],23,[[],["self"]]],[10,R[651],E,R[652],23,[[],["self"]]],[10,R[653],E,R[654],23,[[],["self"]]],[10,R[655],E,R[656],23,[[],["self"]]],[10,R[657],E,R[658],23,[[],["self"]]],[10,R[659],E,R[660],23,[[],["self"]]],[10,"LN_10",E,R[661],23,[[],["self"]]],[10,"LN_2",E,R[662],23,[[],["self"]]],[10,"LOG10_E",E,R[663],23,[[],["self"]]],[10,"LOG2_E",E,R[664],23,[[],["self"]]],[10,"PI",E,R[665],23,[[],["self"]]],[10,"SQRT_2",E,R[666],23,[[],["self"]]],[0,"real",R[263],E,N,N],[8,"Real","num_traits::real",R[667],N,N],[10,R[270],E,R[274],24,[[],["self"]]],[10,R[275],E,R[276],24,[[],["self"]]],[10,R[641],E,R[277],24,[[],["self"]]],[10,R[271],E,R[278],24,[[],["self"]]],[10,"floor",E,R[285],24,[[],["self"]]],[10,"ceil",E,R[286],24,[[],["self"]]],[10,"round",E,R[287],24,[[],["self"]]],[10,"trunc",E,R[288],24,[[],["self"]]],[10,"fract",E,R[289],24,[[],["self"]]],[10,"abs",E,R[290],24,[[],["self"]]],[10,"signum",E,R[291],24,[[],["self"]]],[10,R[292],E,R[301],24,[[],["bool"]]],[10,R[293],E,R[302],24,[[],["bool"]]],[10,R[624],E,R[303],24,[[],["self"]]],[10,"recip",E,R[304],24,[[],["self"]]],[10,"powi",E,R[294],24,[[["i32"]],["self"]]],[10,"powf",E,R[668],24,[[],["self"]]],[10,"sqrt",E,R[305],24,[[],["self"]]],[10,"exp",E,R[306],24,[[],["self"]]],[10,"exp2",E,R[307],24,[[],["self"]]],[10,"ln",E,R[308],24,[[],["self"]]],[10,"log",E,R[309],24,[[],["self"]]],[10,"log2",E,R[310],24,[[],["self"]]],[10,"log10",E,R[311],24,[[],["self"]]],[10,R[295],E,R[312],24,[[],["self"]]],[10,R[296],E,R[313],24,[[],["self"]]],[10,"max",E,R[297],24,[[],["self"]]],[10,"min",E,R[298],24,[[],["self"]]],[10,R[449],E,R[265],24,[[],["self"]]],[10,"cbrt",E,R[314],24,[[],["self"]]],[10,"hypot",E,R[315],24,[[],["self"]]],[10,"sin",E,R[316],24,[[],["self"]]],[10,"cos",E,R[317],24,[[],["self"]]],[10,"tan",E,R[318],24,[[],["self"]]],[10,"asin",E,R[319],24,[[],["self"]]],[10,"acos",E,R[320],24,[[],["self"]]],[10,"atan",E,R[321],24,[[],["self"]]],[10,"atan2",E,R[322],24,[[],["self"]]],[10,"sin_cos",E,R[323],24,[[]]],[10,"exp_m1",E,R[324],24,[[],["self"]]],[10,"ln_1p",E,R[325],24,[[],["self"]]],[10,"sinh",E,R[326],24,[[],["self"]]],[10,"cosh",E,R[327],24,[[],["self"]]],[10,"tanh",E,R[328],24,[[],["self"]]],[10,"asinh",E,R[329],24,[[],["self"]]],[10,"acosh",E,R[330],24,[[],["self"]]],[10,"atanh",E,R[331],24,[[],["self"]]],[0,"cast",R[263],E,N,N],[5,"cast","num_traits::cast",R[486],N,[[["numcast"]],[[R[11]],["numcast"]]]],[8,R[353],E,R[450],N,N],[11,R[553],E,R[451],25,[[["self"]],[[R[11],["isize"]],["isize"]]]],[11,"to_i8",E,R[452],25,[[["self"]],[[R[11],["i8"]],["i8"]]]],[11,"to_i16",E,R[453],25,[[["self"]],[["i16"],[R[11],["i16"]]]]],[11,"to_i32",E,R[454],25,[[["self"]],[["i32"],[R[11],["i32"]]]]],[10,"to_i64",E,R[455],25,[[["self"]],[["i64"],[R[11],["i64"]]]]],[11,"to_i128",E,R[456],25,[[["self"]],[["i128"],[R[11],["i128"]]]]],[11,R[554],E,R[457],25,[[["self"]],[["usize"],[R[11],["usize"]]]]],[11,"to_u8",E,R[458],25,[[["self"]],[[R[11],["u8"]],["u8"]]]],[11,"to_u16",E,R[459],25,[[["self"]],[[R[11],["u16"]],["u16"]]]],[11,"to_u32",E,R[460],25,[[["self"]],[["u32"],[R[11],["u32"]]]]],[10,"to_u64",E,R[461],25,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_u128",E,R[462],25,[[["self"]],[["u128"],[R[11],["u128"]]]]],[11,"to_f32",E,R[463],25,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,R[464],25,[[["self"]],[["f64"],[R[11],["f64"]]]]],[8,R[354],E,R[465],N,N],[11,R[466],E,R[467],26,[[["isize"]],[R[11]]]],[11,"from_i8",E,R[468],26,[[["i8"]],[R[11]]]],[11,R[555],E,R[469],26,[[["i16"]],[R[11]]]],[11,R[556],E,R[470],26,[[["i32"]],[R[11]]]],[10,R[441],E,R[471],26,[[["i64"]],[R[11]]]],[11,R[472],E,R[473],26,[[["i128"]],[R[11]]]],[11,R[474],E,R[475],26,[[["usize"]],[R[11]]]],[11,"from_u8",E,R[476],26,[[["u8"]],[R[11]]]],[11,R[557],E,R[477],26,[[["u16"]],[R[11]]]],[11,R[558],E,R[478],26,[[["u32"]],[R[11]]]],[10,R[442],E,R[479],26,[[["u64"]],[R[11]]]],[11,R[480],E,R[481],26,[[["u128"]],[R[11]]]],[11,R[447],E,R[482],26,[[["f32"]],[R[11]]]],[11,R[443],E,R[483],26,[[["f64"]],[R[11]]]],[8,R[678],E,R[484],N,N],[10,"from",E,R[485],27,[[["toprimitive"]],[R[11]]]],[8,R[355],E,R[559],N,N],[10,"as_",E,R[560],28,[[],[T]]],[0,"int",R[263],E,N,N],[8,"PrimInt","num_traits::int",E,N,N],[10,R[561],E,R[562],29,[[],["u32"]]],[10,R[563],E,R[564],29,[[],["u32"]]],[10,R[565],E,R[566],29,[[],["u32"]]],[10,R[567],E,R[568],29,[[],["u32"]]],[10,R[569],E,R[332],29,[[["u32"]],["self"]]],[10,R[570],E,R[333],29,[[["u32"]],["self"]]],[10,R[571],E,R[332],29,[[["u32"]],["self"]]],[10,R[572],E,R[333],29,[[["u32"]],["self"]]],[10,R[573],E,R[332],29,[[["u32"]],["self"]]],[10,R[574],E,R[333],29,[[["u32"]],["self"]]],[10,R[575],E,R[576],29,[[],["self"]]],[10,"from_be",E,R[577],29,[[],["self"]]],[10,"from_le",E,R[578],29,[[],["self"]]],[10,"to_be",E,R[579],29,[[],["self"]]],[10,"to_le",E,R[580],29,[[],["self"]]],[10,"pow",E,R[581],29,[[["u32"]],["self"]]],[0,"pow",R[263],E,N,N],[5,"pow","num_traits::pow",R[487],N,[[["mul"],["one"],["usize"],["clone"]],[["mul"],["one"],["clone"]]]],[5,R[488],E,R[489],N,[[[R[334]],["one"],["usize"],["clone"]],[[R[11]],[R[334]],["one"],["clone"]]]],[8,"Pow",E,R[582],N,N],[16,"Output",E,R[335],30,N],[10,"pow",E,R[583],30,[[["rhs"]]]],[8,"Num",R[263],R[584],N,N],[16,R[585],E,E,31,N],[10,R[374],E,R[586],31,[[["u32"],["str"]],[R[4]]]],[8,"NumOps",E,R[669],N,N],[8,"NumRef",E,R[670],N,N],[8,"RefNum",E,R[671],N,N],[8,R[672],E,R[673],N,N],[8,R[674],E,R[675],N,N],[8,R[676],E,R[677],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,"fmt",E,E,1,[[["self"],[R[100]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[100]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[100]]],[R[4]]]]],"p":[[3,R[336]],[4,R[337]],[8,"Zero"],[8,"One"],[8,"Signed"],[8,R[338]],[8,R[339]],[8,R[340]],[8,R[341]],[8,R[342]],[8,R[343]],[8,R[344]],[8,R[345]],[8,R[346]],[8,R[347]],[8,R[348]],[8,R[349]],[8,"Inv"],[8,"MulAdd"],[8,R[350]],[8,"Bounded"],[8,R[351]],[8,"Float"],[8,R[352]],[8,"Real"],[8,R[353]],[8,R[354]],[8,R[678]],[8,R[355]],[8,"PrimInt"],[8,"Pow"],[8,"Num"]]};
searchIndex[R[356]]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[356],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[356],E,E,N,N]],"p":[]};
searchIndex[R[357]]={"doc":"Integer trait and functions.","i":[[3,R[362],R[357],R[679],N,N],[5,R[680],E,R[681],N,[[[R[358]]]]],[5,R[359],E,R[682],N,[[[R[358]]],[R[358]]]],[5,R[360],E,R[683],N,[[[R[358]]],[R[358]]]],[5,R[361],E,R[684],N,[[[R[358]]]]],[5,"gcd",E,R[423],N,[[[R[358]]],[R[358]]]],[5,"lcm",E,R[424],N,[[[R[358]]],[R[358]]]],[5,"binomial",E,R[685],N,[[[R[358]],["clone"]],[[R[358]],["clone"]]]],[5,R[686],E,R[687],N,[[],[[R[358]],["clone"]]]],[8,"Integer",E,E,N,N],[10,R[359],E,R[496],0,[[["self"]],["self"]]],[10,R[360],E,R[497],0,[[["self"]],["self"]]],[10,"gcd",E,R[498],0,[[["self"]],["self"]]],[10,"lcm",E,R[499],0,[[["self"]],["self"]]],[10,R[765],E,R[425],0,[[["self"]],["bool"]]],[10,R[426],E,R[500],0,[[["self"]],["bool"]]],[10,R[766],E,R[501],0,[[["self"]],["bool"]]],[10,"is_odd",E,R[502],0,[[["self"]],["bool"]]],[10,R[680],E,R[503],0,[[["self"]]]],[11,R[361],E,R[504],0,[[["self"]]]],[11,"new",E,R[688],1,[[[T]],[R[689]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[222],E,E,1,[[],["i"]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,"next",E,E,1,[[["self"]],[R[11]]]]],"p":[[8,"Integer"],[3,R[362]]]};
searchIndex[R[363]]={"doc":"Complex numbers.","i":[[3,"Complex",R[363],R[493],N,N],[12,"re",E,R[494],0,N],[12,"im",E,R[495],0,N],[3,R[372],E,E,N,N],[6,R[690],E,E,N,N],[6,R[691],E,E,N,N],[11,"new",E,R[692],0,[[[T]],[R[364]]]],[11,"i",E,R[693],0,[[],[R[364]]]],[11,"norm_sqr",E,R[694],0,[[["self"]],[T]]],[11,"scale",E,R[695],0,[[["self"],[T]],[R[364]]]],[11,"unscale",E,R[696],0,[[["self"],[T]],[R[364]]]],[11,"conj",E,R[697],0,[[["self"]],[R[364]]]],[11,"inv",E,R[698],0,[[["self"]],[R[364]]]],[11,"norm",E,R[699],0,[[["self"]],[T]]],[11,"arg",E,R[700],0,[[["self"]],[T]]],[11,"to_polar",E,R[701],0,[[["self"]]]],[11,R[702],E,R[703],0,[[[T]],[R[364]]]],[11,"exp",E,R[704],0,[[["self"]],[R[364]]]],[11,"ln",E,R[705],0,[[["self"]],[R[364]]]],[11,"sqrt",E,R[706],0,[[["self"]],[R[364]]]],[11,"powf",E,R[707],0,[[["self"],[T]],[R[364]]]],[11,"log",E,R[708],0,[[["self"],[T]],[R[364]]]],[11,"powc",E,R[709],0,[[[R[364]],["self"]],[R[364]]]],[11,"expf",E,R[710],0,[[["self"],[T]],[R[364]]]],[11,"sin",E,R[711],0,[[["self"]],[R[364]]]],[11,"cos",E,R[712],0,[[["self"]],[R[364]]]],[11,"tan",E,R[713],0,[[["self"]],[R[364]]]],[11,"asin",E,R[714],0,[[["self"]],[R[364]]]],[11,"acos",E,R[715],0,[[["self"]],[R[364]]]],[11,"atan",E,R[716],0,[[["self"]],[R[364]]]],[11,"sinh",E,R[717],0,[[["self"]],[R[364]]]],[11,"cosh",E,R[718],0,[[["self"]],[R[364]]]],[11,"tanh",E,R[719],0,[[["self"]],[R[364]]]],[11,"asinh",E,R[720],0,[[["self"]],[R[364]]]],[11,"acosh",E,R[721],0,[[["self"]],[R[364]]]],[11,"atanh",E,R[722],0,[[["self"]],[R[364]]]],[11,"is_nan",E,R[723],0,[[],["bool"]]],[11,R[279],E,R[724],0,[[],["bool"]]],[11,R[280],E,R[725],0,[[],["bool"]]],[11,R[281],E,R[726],0,[[],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[25],E,E,1,[[["self"]],[R[3]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"eq",E,E,0,[[[R[364]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[364]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[365]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[365]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[364]]]],[11,"from",E,E,0,[[[T]],[R[364]]]],[11,"from",E,E,0,[[[T]],[R[364]]]],[11,R[761],E,E,0,[[],[R[364]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"div",E,E,0,[[[R[364]]],[R[364]]]],[11,"div",E,E,0,[[[R[364]]],[R[364]]]],[11,"div",E,E,0,[[[T]],[R[364]]]],[11,"div",E,E,0,[[[T]],[R[364]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"add",E,E,0,[[[R[364]]],[R[364]]]],[11,"add",E,E,0,[[[R[364]]],[R[364]]]],[11,"add",E,E,0,[[[T]],[R[364]]]],[11,"add",E,E,0,[[[T]],[R[364]]]],[11,"sub",E,E,0,[[[R[364]]],[R[364]]]],[11,"sub",E,E,0,[[[R[364]]],[R[364]]]],[11,"sub",E,E,0,[[[T]],[R[364]]]],[11,"sub",E,E,0,[[[T]],[R[364]]]],[11,"mul",E,E,0,[[[R[364]]],[R[364]]]],[11,"mul",E,E,0,[[[R[364]]],[R[364]]]],[11,"mul",E,E,0,[[[T]],[R[364]]]],[11,"mul",E,E,0,[[[T]],[R[364]]]],[11,"rem",E,E,0,[[[R[364]]],[R[364]]]],[11,"rem",E,E,0,[[[R[364]]],["self"]]],[11,"rem",E,E,0,[[[T]],[R[364]]]],[11,"rem",E,E,0,[[[T]],[R[364]]]],[11,"neg",E,E,0,[[],[R[364]]]],[11,R[366],E,E,0,[[[R[364]],["self"]]]],[11,R[366],E,E,0,[[["self"],[T]]]],[11,R[366],E,E,0,[[[R[364]],["self"]]]],[11,R[366],E,E,0,[[["self"],[T]]]],[11,R[367],E,E,0,[[[R[364]],["self"]]]],[11,R[367],E,E,0,[[["self"],[T]]]],[11,R[367],E,E,0,[[[R[364]],["self"]]]],[11,R[367],E,E,0,[[["self"],[T]]]],[11,R[368],E,E,0,[[[R[364]],["self"]]]],[11,R[368],E,E,0,[[["self"],[T]]]],[11,R[368],E,E,0,[[[R[364]],["self"]]]],[11,R[368],E,E,0,[[["self"],[T]]]],[11,R[369],E,E,0,[[[R[364]],["self"]]]],[11,R[369],E,E,0,[[["self"],[T]]]],[11,R[369],E,E,0,[[[R[364]],["self"]]]],[11,R[369],E,E,0,[[["self"],[T]]]],[11,R[370],E,E,0,[[[R[364]],["self"]]]],[11,R[370],E,E,0,[[["self"],[T]]]],[11,R[370],E,E,0,[[[R[364]],["self"]]]],[11,R[370],E,E,0,[[["self"],[T]]]],[11,R[373],E,R[371],0,[[["str"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,R[102],E,E,1,[[["self"]],["str"]]],[11,"zero",E,E,0,[[],[R[364]]]],[11,R[595],E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],[R[364]]]],[11,R[374],E,R[371],0,[[["u32"],["str"]],[R[4]]]],[11,"encode",E,E,0,[[["__st"],["self"]],[R[4]]]],[11,"decode",E,E,0,[[["__dt"]],[[R[364]],[R[4],[R[364]]]]]]],"p":[[3,"Complex"],[3,R[372]]]};
searchIndex[R[383]]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"BigUint",R[383],R[490],N,N],[3,"BigInt",E,R[492],N,N],[4,R[435],E,E,N,N],[13,"ParseInt",E,E,0,N],[13,"Other",E,E,0,N],[4,"Sign",E,R[727],N,N],[13,"Minus",E,E,1,N],[13,"NoSign",E,E,1,N],[13,"Plus",E,E,1,N],[11,"new",E,R[384],2,[[["vec",[R[388]]],[R[388]]],[R[385]]]],[11,R[389],E,R[384],2,[[],[R[385]]]],[11,R[391],E,R[728],2,[[["self"]]]],[11,R[392],E,R[384],2,[[],[R[385]]]],[11,R[393],E,R[384],2,[[],[R[385]]]],[11,R[395],E,R[729],2,[[["u32"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[396],E,R[386],2,[[["u32"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[397],E,R[386],2,[[["u32"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[399],E,R[387],2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[400],E,R[387],2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[403],E,R[404],2,[[["u32"],["self"]],[R[3]]]],[11,R[405],E,R[406],2,[[["u32"],["self"]],[["u8"],["vec",["u8"]]]]],[11,R[407],E,R[408],2,[[["u32"],["self"]],[["u8"],["vec",["u8"]]]]],[11,"bits",E,R[409],2,[[["self"]],["usize"]]],[11,"modpow",E,R[730],2,[[["self"]],["self"]]],[11,"new",E,R[430],3,[[["sign"],["vec",[R[388]]],[R[388]]],["bigint"]]],[11,R[731],E,R[390],3,[[["sign"],[R[385]]],["bigint"]]],[11,R[389],E,R[390],3,[[["sign"]],["bigint"]]],[11,R[391],E,R[732],3,[[["sign"],["self"]]]],[11,R[392],E,R[390],3,[[["sign"]],["bigint"]]],[11,R[393],E,R[390],3,[[["sign"]],["bigint"]]],[11,R[733],E,R[394],3,[[],["bigint"]]],[11,R[734],E,R[394],3,[[],["bigint"]]],[11,R[395],E,R[390],3,[[["u32"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[396],E,R[398],3,[[["u32"],["sign"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[397],E,R[398],3,[[["u32"],["sign"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[399],E,R[401],3,[[["self"]]]],[11,R[400],E,R[401],3,[[["self"]]]],[11,R[735],E,R[402],3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[736],E,R[402],3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[403],E,R[404],3,[[["u32"],["self"]],[R[3]]]],[11,R[405],E,R[406],3,[[["u32"],["self"]]]],[11,R[407],E,R[408],3,[[["u32"],["self"]]]],[11,"sign",E,R[737],3,[[["self"]],["sign"]]],[11,"bits",E,R[409],3,[[["self"]],["usize"]]],[11,R[415],E,R[738],3,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[431],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[432],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[433],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[434],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"modpow",E,R[739],3,[[["self"]],["self"]]],[0,R[740],E,E,N,N],[5,R[741],"num_bigint::big_digit",R[742],N,[[[R[410]]]]],[5,R[743],E,R[744],N,[[[R[388]]],[R[410]]]],[6,R[438],E,R[411],N,N],[6,R[412],E,R[413],N,N],[17,R[414],E,E,N,N],[17,"BITS",E,E,N,N],[17,"BASE",E,E,N,N],[6,R[438],R[383],R[411],N,N],[6,R[412],E,R[413],N,N],[17,R[414],E,E,N,N],[8,R[436],E,R[745],N,N],[10,R[415],E,R[746],4,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[8,R[747],E,R[748],N,N],[10,R[416],E,R[749],5,[[["self"]],[[R[11],["bigint"]],["bigint"]]]],[8,R[437],E,E,N,N],[10,R[750],E,R[751],6,[[["self"],["usize"]],[R[385]]]],[10,R[752],E,R[753],6,[[["self"],["usize"]],["bigint"]]],[10,R[754],E,R[755],6,[[[R[385]],["self"]],[R[385]]]],[10,R[756],E,R[757],6,[[[R[385]],["self"]],[R[385]]]],[10,R[758],E,R[759],6,[[["self"],["bigint"]],["bigint"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,R[25],E,E,2,[[["self"]],[R[3]]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[[T],["self"]]]],[11,R[25],E,E,3,[[["self"]],[R[3]]]],[11,R[20],E,E,3,[[[U]],[R[4]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[27]]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[],[R[4]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,R[415],E,E,2,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[415],E,E,3,[[["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[416],E,E,3,[[["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[416],E,E,2,[[["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"eq",E,E,0,[[["self"],[R[417]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[417]]],["bool"]]],[11,"eq",E,E,2,[[[R[385]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,3,[[["bigint"],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[385]]]],[11,"clone",E,E,1,[[["self"]],["sign"]]],[11,"clone",E,E,3,[[["self"]],["bigint"]]],[11,"cmp",E,E,2,[[[R[385]],["self"]],[R[418]]]],[11,"cmp",E,E,1,[[["self"],["sign"]],[R[418]]]],[11,"cmp",E,E,3,[[["bigint"],["self"]],[R[418]]]],[11,"from",E,E,0,[[[R[760]]],[R[417]]]],[11,"from",E,E,2,[[["u64"]],["self"]]],[11,"from",E,E,2,[[["u8"]],["self"]]],[11,"from",E,E,2,[[["u16"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,2,[[["usize"]],["self"]]],[11,"from",E,E,3,[[["i64"]],["self"]]],[11,"from",E,E,3,[[["i8"]],["self"]]],[11,"from",E,E,3,[[["i16"]],["self"]]],[11,"from",E,E,3,[[["i32"]],["self"]]],[11,"from",E,E,3,[[["isize"]],["self"]]],[11,"from",E,E,3,[[["u64"]],["self"]]],[11,"from",E,E,3,[[["u8"]],["self"]]],[11,"from",E,E,3,[[["u16"]],["self"]]],[11,"from",E,E,3,[[["u32"]],["self"]]],[11,"from",E,E,3,[[["usize"]],["self"]]],[11,"from",E,E,3,[[[R[385]]],["self"]]],[11,R[419],E,E,2,[[[R[385]],["self"]],[[R[11],[R[418]]],[R[418]]]]],[11,R[419],E,E,1,[[["self"],["sign"]],[[R[418]],[R[11],[R[418]]]]]],[11,R[419],E,E,3,[[["bigint"],["self"]],[[R[11],[R[418]]],[R[418]]]]],[11,R[761],E,E,2,[[],[R[385]]]],[11,R[761],E,E,3,[[],["bigint"]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"div",E,E,2,[[[R[385]]],[R[385]]]],[11,"div",E,E,2,[[[R[385]]],[R[385]]]],[11,"div",E,E,2,[[["u8"]],[R[385]]]],[11,"div",E,E,2,[[["u8"]],[R[385]]]],[11,"div",E,E,2,[[["u16"]],[R[385]]]],[11,"div",E,E,2,[[["u16"]],[R[385]]]],[11,"div",E,E,2,[[["usize"]],[R[385]]]],[11,"div",E,E,2,[[["usize"]],[R[385]]]],[11,"div",E,E,2,[[[R[388]]],[R[385]]]],[11,"div",E,E,7,[[[R[385]]],[R[385]]]],[11,"div",E,E,2,[[[R[410]]],[R[385]]]],[11,"div",E,E,8,[[[R[385]]],[R[385]]]],[11,"div",E,E,2,[[[R[388]]],[R[385]]]],[11,"div",E,E,7,[[[R[385]]],[R[385]]]],[11,"div",E,E,2,[[[R[410]]],[R[385]]]],[11,"div",E,E,8,[[[R[385]]],[R[385]]]],[11,"div",E,E,3,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[["u8"]],["bigint"]]],[11,"div",E,E,3,[[["u8"]],["bigint"]]],[11,"div",E,E,3,[[["u16"]],["bigint"]]],[11,"div",E,E,3,[[["u16"]],["bigint"]]],[11,"div",E,E,3,[[["usize"]],["bigint"]]],[11,"div",E,E,3,[[["usize"]],["bigint"]]],[11,"div",E,E,3,[[["i8"]],["bigint"]]],[11,"div",E,E,3,[[["i8"]],["bigint"]]],[11,"div",E,E,3,[[["i16"]],["bigint"]]],[11,"div",E,E,3,[[["i16"]],["bigint"]]],[11,"div",E,E,3,[[["isize"]],["bigint"]]],[11,"div",E,E,3,[[["isize"]],["bigint"]]],[11,"div",E,E,3,[[[R[388]]],["bigint"]]],[11,"div",E,E,7,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[[R[410]]],["bigint"]]],[11,"div",E,E,8,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[[R[388]]],["bigint"]]],[11,"div",E,E,7,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[[R[410]]],["bigint"]]],[11,"div",E,E,8,[[["bigint"]],["bigint"]]],[11,"div",E,E,3,[[["i32"]],["bigint"]]],[11,"div",E,E,3,[[["i64"]],["bigint"]]],[11,"div",E,E,3,[[["i32"]],["bigint"]]],[11,"div",E,E,3,[[["i64"]],["bigint"]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"add",E,E,2,[[[R[385]]],[R[385]]]],[11,"add",E,E,2,[[[R[385]]],[R[385]]]],[11,"add",E,E,2,[[["u8"]],[R[385]]]],[11,"add",E,E,2,[[["u8"]],[R[385]]]],[11,"add",E,E,2,[[["u16"]],[R[385]]]],[11,"add",E,E,2,[[["u16"]],[R[385]]]],[11,"add",E,E,2,[[["usize"]],[R[385]]]],[11,"add",E,E,2,[[["usize"]],[R[385]]]],[11,"add",E,E,7,[[[R[385]]],[R[385]]]],[11,"add",E,E,2,[[[R[388]]],[R[385]]]],[11,"add",E,E,7,[[[R[385]]],[R[385]]]],[11,"add",E,E,8,[[[R[385]]],[R[385]]]],[11,"add",E,E,2,[[[R[410]]],[R[385]]]],[11,"add",E,E,8,[[[R[385]]],[R[385]]]],[11,"add",E,E,2,[[[R[388]]],[R[385]]]],[11,"add",E,E,2,[[[R[410]]],[R[385]]]],[11,"add",E,E,3,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[["u8"]],["bigint"]]],[11,"add",E,E,3,[[["u8"]],["bigint"]]],[11,"add",E,E,3,[[["u16"]],["bigint"]]],[11,"add",E,E,3,[[["u16"]],["bigint"]]],[11,"add",E,E,3,[[["usize"]],["bigint"]]],[11,"add",E,E,3,[[["usize"]],["bigint"]]],[11,"add",E,E,3,[[["i8"]],["bigint"]]],[11,"add",E,E,3,[[["i8"]],["bigint"]]],[11,"add",E,E,3,[[["i16"]],["bigint"]]],[11,"add",E,E,3,[[["i16"]],["bigint"]]],[11,"add",E,E,3,[[["isize"]],["bigint"]]],[11,"add",E,E,3,[[["isize"]],["bigint"]]],[11,"add",E,E,7,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[[R[388]]],["bigint"]]],[11,"add",E,E,7,[[["bigint"]],["bigint"]]],[11,"add",E,E,8,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[[R[410]]],["bigint"]]],[11,"add",E,E,8,[[["bigint"]],["bigint"]]],[11,"add",E,E,3,[[[R[388]]],["bigint"]]],[11,"add",E,E,3,[[[R[410]]],["bigint"]]],[11,"add",E,E,3,[[["i32"]],["bigint"]]],[11,"add",E,E,3,[[["i64"]],["bigint"]]],[11,"add",E,E,3,[[["i32"]],["bigint"]]],[11,"add",E,E,3,[[["i64"]],["bigint"]]],[11,"sub",E,E,2,[[[R[385]]],[R[385]]]],[11,"sub",E,E,2,[[[R[385]]],[R[385]]]],[11,"sub",E,E,2,[[["u8"]],[R[385]]]],[11,"sub",E,E,2,[[["u8"]],[R[385]]]],[11,"sub",E,E,2,[[["u16"]],[R[385]]]],[11,"sub",E,E,2,[[["u16"]],[R[385]]]],[11,"sub",E,E,2,[[["usize"]],[R[385]]]],[11,"sub",E,E,2,[[["usize"]],[R[385]]]],[11,"sub",E,E,2,[[[R[388]]],[R[385]]]],[11,"sub",E,E,7,[[[R[385]]],[R[385]]]],[11,"sub",E,E,2,[[[R[410]]],[R[385]]]],[11,"sub",E,E,8,[[[R[385]]],[R[385]]]],[11,"sub",E,E,2,[[[R[388]]],[R[385]]]],[11,"sub",E,E,7,[[[R[385]]],[R[385]]]],[11,"sub",E,E,2,[[[R[410]]],[R[385]]]],[11,"sub",E,E,8,[[[R[385]]],[R[385]]]],[11,"sub",E,E,3,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[["u8"]],["bigint"]]],[11,"sub",E,E,3,[[["u8"]],["bigint"]]],[11,"sub",E,E,3,[[["u16"]],["bigint"]]],[11,"sub",E,E,3,[[["u16"]],["bigint"]]],[11,"sub",E,E,3,[[["usize"]],["bigint"]]],[11,"sub",E,E,3,[[["usize"]],["bigint"]]],[11,"sub",E,E,3,[[["i8"]],["bigint"]]],[11,"sub",E,E,3,[[["i8"]],["bigint"]]],[11,"sub",E,E,3,[[["i16"]],["bigint"]]],[11,"sub",E,E,3,[[["i16"]],["bigint"]]],[11,"sub",E,E,3,[[["isize"]],["bigint"]]],[11,"sub",E,E,3,[[["isize"]],["bigint"]]],[11,"sub",E,E,3,[[[R[388]]],["bigint"]]],[11,"sub",E,E,7,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[[R[410]]],["bigint"]]],[11,"sub",E,E,8,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[[R[388]]],["bigint"]]],[11,"sub",E,E,7,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[[R[410]]],["bigint"]]],[11,"sub",E,E,8,[[["bigint"]],["bigint"]]],[11,"sub",E,E,3,[[["i32"]],["bigint"]]],[11,"sub",E,E,3,[[["i64"]],["bigint"]]],[11,"sub",E,E,3,[[["i32"]],["bigint"]]],[11,"sub",E,E,3,[[["i64"]],["bigint"]]],[11,"mul",E,E,2,[[[R[385]]],[R[385]]]],[11,"mul",E,E,2,[[[R[385]]],[R[385]]]],[11,"mul",E,E,2,[[["u8"]],[R[385]]]],[11,"mul",E,E,2,[[["u8"]],[R[385]]]],[11,"mul",E,E,2,[[["u16"]],[R[385]]]],[11,"mul",E,E,2,[[["u16"]],[R[385]]]],[11,"mul",E,E,2,[[["usize"]],[R[385]]]],[11,"mul",E,E,2,[[["usize"]],[R[385]]]],[11,"mul",E,E,7,[[[R[385]]],[R[385]]]],[11,"mul",E,E,2,[[[R[388]]],[R[385]]]],[11,"mul",E,E,7,[[[R[385]]],[R[385]]]],[11,"mul",E,E,8,[[[R[385]]],[R[385]]]],[11,"mul",E,E,2,[[[R[410]]],[R[385]]]],[11,"mul",E,E,8,[[[R[385]]],[R[385]]]],[11,"mul",E,E,2,[[[R[388]]],[R[385]]]],[11,"mul",E,E,2,[[[R[410]]],[R[385]]]],[11,"mul",E,E,1,[[["sign"]],["sign"]]],[11,"mul",E,E,3,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[["u8"]],["bigint"]]],[11,"mul",E,E,3,[[["u8"]],["bigint"]]],[11,"mul",E,E,3,[[["u16"]],["bigint"]]],[11,"mul",E,E,3,[[["u16"]],["bigint"]]],[11,"mul",E,E,3,[[["usize"]],["bigint"]]],[11,"mul",E,E,3,[[["usize"]],["bigint"]]],[11,"mul",E,E,3,[[["i8"]],["bigint"]]],[11,"mul",E,E,3,[[["i8"]],["bigint"]]],[11,"mul",E,E,3,[[["i16"]],["bigint"]]],[11,"mul",E,E,3,[[["i16"]],["bigint"]]],[11,"mul",E,E,3,[[["isize"]],["bigint"]]],[11,"mul",E,E,3,[[["isize"]],["bigint"]]],[11,"mul",E,E,7,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[[R[388]]],["bigint"]]],[11,"mul",E,E,7,[[["bigint"]],["bigint"]]],[11,"mul",E,E,8,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[[R[410]]],["bigint"]]],[11,"mul",E,E,8,[[["bigint"]],["bigint"]]],[11,"mul",E,E,3,[[[R[388]]],["bigint"]]],[11,"mul",E,E,3,[[[R[410]]],["bigint"]]],[11,"mul",E,E,3,[[["i32"]],["bigint"]]],[11,"mul",E,E,3,[[["i64"]],["bigint"]]],[11,"mul",E,E,3,[[["i32"]],["bigint"]]],[11,"mul",E,E,3,[[["i64"]],["bigint"]]],[11,"rem",E,E,2,[[[R[385]]],[R[385]]]],[11,"rem",E,E,2,[[[R[385]]],[R[385]]]],[11,"rem",E,E,2,[[["u8"]],[R[385]]]],[11,"rem",E,E,2,[[["u8"]],[R[385]]]],[11,"rem",E,E,2,[[["u16"]],[R[385]]]],[11,"rem",E,E,2,[[["u16"]],[R[385]]]],[11,"rem",E,E,2,[[["usize"]],[R[385]]]],[11,"rem",E,E,2,[[["usize"]],[R[385]]]],[11,"rem",E,E,2,[[[R[388]]],[R[385]]]],[11,"rem",E,E,7,[[[R[385]]],[R[385]]]],[11,"rem",E,E,2,[[[R[410]]],[R[385]]]],[11,"rem",E,E,8,[[[R[385]]],[R[385]]]],[11,"rem",E,E,2,[[[R[388]]],[R[385]]]],[11,"rem",E,E,7,[[[R[385]]],[R[385]]]],[11,"rem",E,E,2,[[[R[410]]],[R[385]]]],[11,"rem",E,E,8,[[[R[385]]],[R[385]]]],[11,"rem",E,E,3,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[["u8"]],["bigint"]]],[11,"rem",E,E,3,[[["u8"]],["bigint"]]],[11,"rem",E,E,3,[[["u16"]],["bigint"]]],[11,"rem",E,E,3,[[["u16"]],["bigint"]]],[11,"rem",E,E,3,[[["usize"]],["bigint"]]],[11,"rem",E,E,3,[[["usize"]],["bigint"]]],[11,"rem",E,E,3,[[["i8"]],["bigint"]]],[11,"rem",E,E,3,[[["i8"]],["bigint"]]],[11,"rem",E,E,3,[[["i16"]],["bigint"]]],[11,"rem",E,E,3,[[["i16"]],["bigint"]]],[11,"rem",E,E,3,[[["isize"]],["bigint"]]],[11,"rem",E,E,3,[[["isize"]],["bigint"]]],[11,"rem",E,E,3,[[[R[388]]],["bigint"]]],[11,"rem",E,E,7,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[[R[410]]],["bigint"]]],[11,"rem",E,E,8,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[[R[388]]],["bigint"]]],[11,"rem",E,E,7,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[[R[410]]],["bigint"]]],[11,"rem",E,E,8,[[["bigint"]],["bigint"]]],[11,"rem",E,E,3,[[["i32"]],["bigint"]]],[11,"rem",E,E,3,[[["i64"]],["bigint"]]],[11,"rem",E,E,3,[[["i32"]],["bigint"]]],[11,"rem",E,E,3,[[["i64"]],["bigint"]]],[11,"neg",E,E,2,[[],[R[385]]]],[11,"neg",E,R[762],1,[[],["sign"]]],[11,"neg",E,E,3,[[],["bigint"]]],[11,R[366],E,E,2,[[["self"],[R[385]]]]],[11,R[366],E,E,2,[[[R[385]],["self"]]]],[11,R[366],E,E,2,[[["self"],["u8"]]]],[11,R[366],E,E,2,[[["self"],["u16"]]]],[11,R[366],E,E,2,[[["self"],["usize"]]]],[11,R[366],E,E,2,[[["self"],[R[388]]]]],[11,R[366],E,E,2,[[[R[410]],["self"]]]],[11,R[367],E,E,2,[[["self"],[R[385]]]]],[11,R[367],E,E,2,[[["self"],[R[385]]]]],[11,R[367],E,E,2,[[["self"],["u8"]]]],[11,R[367],E,E,2,[[["self"],["u16"]]]],[11,R[367],E,E,2,[[["self"],["usize"]]]],[11,R[367],E,E,2,[[["self"],[R[388]]]]],[11,R[367],E,E,2,[[[R[410]],["self"]]]],[11,R[368],E,E,2,[[["self"],[R[385]]]]],[11,R[368],E,E,2,[[["self"],[R[385]]]]],[11,R[368],E,E,2,[[["self"],["u8"]]]],[11,R[368],E,E,2,[[["self"],["u16"]]]],[11,R[368],E,E,2,[[["self"],["usize"]]]],[11,R[368],E,E,2,[[["self"],[R[388]]]]],[11,R[368],E,E,2,[[[R[410]],["self"]]]],[11,R[369],E,E,2,[[["self"],[R[385]]]]],[11,R[369],E,E,2,[[["self"],[R[385]]]]],[11,R[369],E,E,2,[[["self"],["u8"]]]],[11,R[369],E,E,2,[[["self"],["u16"]]]],[11,R[369],E,E,2,[[["self"],["usize"]]]],[11,R[369],E,E,2,[[["self"],[R[388]]]]],[11,R[369],E,E,2,[[[R[410]],["self"]]]],[11,R[370],E,E,2,[[["self"],[R[385]]]]],[11,R[370],E,E,2,[[[R[385]],["self"]]]],[11,R[370],E,E,2,[[["self"],["u8"]]]],[11,R[370],E,E,2,[[["self"],["u16"]]]],[11,R[370],E,E,2,[[["self"],["usize"]]]],[11,R[370],E,E,2,[[["self"],[R[388]]]]],[11,R[370],E,E,2,[[[R[410]],["self"]]]],[11,"bitand",E,E,2,[[[R[385]]],[R[385]]]],[11,"bitand",E,E,2,[[[R[385]]],[R[385]]]],[11,"bitor",E,E,2,[[[R[385]]],[R[385]]]],[11,"bitor",E,E,2,[[[R[385]]],[R[385]]]],[11,"bitxor",E,E,2,[[[R[385]]],[R[385]]]],[11,"bitxor",E,E,2,[[[R[385]]],[R[385]]]],[11,"shl",E,E,2,[[["usize"]],[R[385]]]],[11,"shl",E,E,3,[[["usize"]],["bigint"]]],[11,"shr",E,E,2,[[["usize"]],[R[385]]]],[11,"shr",E,E,3,[[["usize"]],["bigint"]]],[11,R[420],E,E,2,[[["self"],[R[385]]]]],[11,R[420],E,E,2,[[[R[385]],["self"]]]],[11,R[421],E,E,2,[[["self"],[R[385]]]]],[11,R[421],E,E,2,[[[R[385]],["self"]]]],[11,R[422],E,E,2,[[["self"],[R[385]]]]],[11,R[422],E,E,2,[[[R[385]],["self"]]]],[11,R[763],E,E,2,[[["self"],["usize"]]]],[11,R[764],E,E,2,[[["self"],["usize"]]]],[11,R[373],E,E,2,[[["str"]],[[R[385]],[R[4],[R[385],R[417]]],[R[417]]]]],[11,R[373],E,E,3,[[["str"]],[[R[4],["bigint",R[417]]],["bigint"],[R[417]]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,R[102],E,E,0,[[["self"]],["str"]]],[11,"encode",E,E,2,[[["__s"],["self"]],[R[4]]]],[11,"encode",E,E,1,[[["__s"],["self"]],[R[4]]]],[11,"encode",E,E,3,[[["__s"],["self"]],[R[4]]]],[11,"decode",E,E,2,[[["__d"]],[[R[4],[R[385]]],[R[385]]]]],[11,"decode",E,E,1,[[["__d"]],[["sign"],[R[4],["sign"]]]]],[11,"decode",E,E,3,[[["__d"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[680],E,E,2,[[[R[385]],["self"]]]],[11,R[359],E,E,2,[[[R[385]],["self"]],[R[385]]]],[11,R[360],E,E,2,[[[R[385]],["self"]],[R[385]]]],[11,R[361],E,E,2,[[[R[385]],["self"]]]],[11,"gcd",E,R[423],2,[[["self"]],["self"]]],[11,"lcm",E,R[424],2,[[[R[385]],["self"]],[R[385]]]],[11,R[765],E,R[425],2,[[[R[385]],["self"]],["bool"]]],[11,R[426],E,R[427],2,[[[R[385]],["self"]],["bool"]]],[11,R[766],E,R[428],2,[[["self"]],["bool"]]],[11,"is_odd",E,R[429],2,[[["self"]],["bool"]]],[11,R[680],E,E,3,[[["bigint"],["self"]]]],[11,R[359],E,E,3,[[["bigint"],["self"]],["bigint"]]],[11,R[360],E,E,3,[[["bigint"],["self"]],["bigint"]]],[11,R[361],E,E,3,[[["bigint"],["self"]]]],[11,"gcd",E,R[423],3,[[["bigint"],["self"]],["bigint"]]],[11,"lcm",E,R[424],3,[[["bigint"],["self"]],["bigint"]]],[11,R[765],E,R[425],3,[[["bigint"],["self"]],["bool"]]],[11,R[426],E,R[427],3,[[["bigint"],["self"]],["bool"]]],[11,R[766],E,R[428],3,[[["self"]],["bool"]]],[11,"is_odd",E,R[429],3,[[["self"]],["bool"]]],[11,"zero",E,E,2,[[],[R[385]]]],[11,R[595],E,E,2,[[["self"]],["bool"]]],[11,"zero",E,E,3,[[],["bigint"]]],[11,R[595],E,E,3,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],[R[385]]]],[11,"one",E,E,3,[[],["bigint"]]],[11,"abs",E,E,3,[[["self"]],["bigint"]]],[11,R[449],E,E,3,[[["bigint"],["self"]],["bigint"]]],[11,"signum",E,E,3,[[["self"]],["bigint"]]],[11,R[439],E,E,3,[[["self"]],["bool"]]],[11,R[440],E,E,3,[[["self"]],["bool"]]],[11,R[374],E,R[384],2,[[["u32"],["str"]],[[R[385]],[R[4],[R[385],R[417]]],[R[417]]]]],[11,R[374],E,R[430],3,[[["u32"],["str"]],[[R[4],["bigint",R[417]]],["bigint"],[R[417]]]]],[11,R[431],E,E,2,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[431],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[432],E,E,2,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[432],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[433],E,E,2,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[433],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[434],E,E,2,[[[R[385]],["self"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[434],E,E,3,[[["bigint"],["self"]],[[R[11],["bigint"]],["bigint"]]]],[11,"to_i64",E,E,2,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_u64",E,E,2,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_f32",E,E,2,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,E,2,[[["self"]],[["f64"],[R[11],["f64"]]]]],[11,"to_i64",E,E,3,[[["self"]],[[R[11],["i64"]],["i64"]]]],[11,"to_u64",E,E,3,[[["self"]],[[R[11],["u64"]],["u64"]]]],[11,"to_f32",E,E,3,[[["self"]],[[R[11],["f32"]],["f32"]]]],[11,"to_f64",E,E,3,[[["self"]],[["f64"],[R[11],["f64"]]]]],[11,R[441],E,E,2,[[["i64"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[442],E,E,2,[[["u64"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[443],E,E,2,[[["f64"]],[[R[385]],[R[11],[R[385]]]]]],[11,R[441],E,E,3,[[["i64"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[442],E,E,3,[[["u64"]],[[R[11],["bigint"]],["bigint"]]]],[11,R[443],E,E,3,[[["f64"]],[[R[11],["bigint"]],["bigint"]]]]],"p":[[4,R[435]],[4,"Sign"],[3,"BigUint"],[3,"BigInt"],[8,R[436]],[8,R[747]],[8,R[437]],[6,R[438]],[6,R[412]]]};
searchIndex[R[444]]={"doc":"Rational numbers","i":[[3,"Ratio",R[444],R[767],N,N],[3,R[448],E,E,N,N],[6,R[768],E,R[588],N,N],[6,R[769],E,E,N,N],[6,R[770],E,E,N,N],[6,R[589],E,R[590],N,N],[11,"new",E,R[771],0,[[[T]],["ratio"]]],[11,R[772],E,R[773],0,[[[T]],["ratio"]]],[11,"new_raw",E,R[774],0,[[[T]],["ratio"]]],[11,R[775],E,R[776],0,[[["self"]],[T]]],[11,"numer",E,R[777],0,[[["self"]],[T]]],[11,"denom",E,R[778],0,[[["self"]],[T]]],[11,R[779],E,R[780],0,[[["self"]],["bool"]]],[11,"reduced",E,R[781],0,[[["self"]],["ratio"]]],[11,"recip",E,R[782],0,[[["self"]],["ratio"]]],[11,"floor",E,R[783],0,[[["self"]],["ratio"]]],[11,"ceil",E,R[784],0,[[["self"]],["ratio"]]],[11,"round",E,R[785],0,[[["self"]],["ratio"]]],[11,"trunc",E,R[786],0,[[["self"]],["ratio"]]],[11,"fract",E,R[787],0,[[["self"]],["ratio"]]],[11,"pow",E,R[788],0,[[["i32"],["self"]],["ratio"]]],[11,R[789],E,R[790],0,[[["float"]],[[R[11],[R[445]]],[R[445]]]]],[11,R[791],E,E,0,[[["float"],["numcast"]],[[R[11],["ratio"]],["ratio"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,R[25],E,E,1,[[["self"]],[R[3]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[446]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[446]],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[446]]]],[11,"cmp",E,E,0,[[["self"]],[R[418]]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"into",E,E,0,[[]]],[11,R[419],E,E,0,[[["self"]],[[R[418]],[R[11],[R[418]]]]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,R[792],0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"hash",E,E,0,[[["h"],["self"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[366],E,E,0,[[["self"],["ratio"]]]],[11,R[366],E,E,0,[[["self"],[T]]]],[11,R[366],E,E,0,[[["self"],["ratio"]]]],[11,R[366],E,E,0,[[["self"],[T]]]],[11,R[367],E,E,0,[[["self"],["ratio"]]]],[11,R[367],E,E,0,[[["self"],[T]]]],[11,R[367],E,E,0,[[["self"],["ratio"]]]],[11,R[367],E,E,0,[[["self"],[T]]]],[11,R[368],E,E,0,[[["self"],["ratio"]]]],[11,R[368],E,E,0,[[["self"],[T]]]],[11,R[368],E,E,0,[[["self"],["ratio"]]]],[11,R[368],E,E,0,[[["self"],[T]]]],[11,R[369],E,E,0,[[["self"],["ratio"]]]],[11,R[369],E,E,0,[[["self"],[T]]]],[11,R[369],E,E,0,[[["self"],["ratio"]]]],[11,R[369],E,E,0,[[["self"],[T]]]],[11,R[370],E,E,0,[[["self"],["ratio"]]]],[11,R[370],E,E,0,[[["self"],[T]]]],[11,R[370],E,E,0,[[["self"],["ratio"]]]],[11,R[370],E,E,0,[[["self"],[T]]]],[11,R[373],E,R[793],0,[[["str"]],[[R[4],["ratio",R[446]]],[R[446]],["ratio"]]]],[11,R[102],E,E,1,[[["self"]],["str"]]],[11,"encode",E,E,0,[[["__st"],["self"]],[R[4]]]],[11,"decode",E,E,0,[[["__dt"]],[[R[4],["ratio"]],["ratio"]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,R[595],E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,R[449],E,E,0,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[439],E,E,0,[[["self"]],["bool"]]],[11,R[440],E,E,0,[[["self"]],["bool"]]],[11,R[374],E,R[794],0,[[["u32"],["str"]],[[R[4],["ratio",R[446]]],[R[446]],["ratio"]]]],[11,R[431],E,E,0,[[["self"],["ratio"]],[[R[11],["ratio"]],["ratio"]]]],[11,R[432],E,E,0,[[["self"],["ratio"]],[[R[11],["ratio"]],["ratio"]]]],[11,R[433],E,E,0,[[["self"],["ratio"]],[[R[11],["ratio"]],["ratio"]]]],[11,R[434],E,E,0,[[["self"],["ratio"]],[[R[11],["ratio"]],["ratio"]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]],[11,R[441],E,E,0,[[["i64"]],[R[11]]]],[11,R[442],E,E,0,[[["u64"]],[R[11]]]],[11,R[447],E,E,0,[[["f32"]],[R[11]]]],[11,R[443],E,E,0,[[["f64"]],[R[11]]]]],"p":[[3,"Ratio"],[3,R[448]]]};
searchIndex[R[795]]={"doc":R[863],"i":[[3,"Array",R[795],R[864],N,N],[3,"Dim4",E,R[865],N,N],[3,R[866],E,R[867],N,N],[3,"Indexer",E,R[868],N,N],[3,"Seq",E,R[869],N,N],[3,"Window",E,R[870],N,N],[3,R[856],E,R[871],N,N],[3,R[872],E,R[873],N,N],[4,"AfError",E,R[874],N,N],[13,"SUCCESS",E,R[875],0,N],[13,R[876],E,R[877],0,N],[13,R[878],E,R[879],0,N],[13,R[880],E,R[881],0,N],[13,R[882],E,R[883],0,N],[13,"ERR_ARG",E,R[884],0,N],[13,"ERR_SIZE",E,R[885],0,N],[13,"ERR_TYPE",E,R[886],0,N],[13,R[887],E,R[888],0,N],[13,R[889],E,R[890],0,N],[13,R[891],E,R[892],0,N],[13,R[893],E,R[894],0,N],[13,R[895],E,R[896],0,N],[13,R[897],E,R[898],0,N],[13,R[899],E,R[900],0,N],[13,R[901],E,R[902],0,N],[13,R[903],E,R[904],0,N],[4,"Backend",E,R[905],N,N],[13,R[809],E,R[906],1,N],[13,"CPU",E,R[907],1,N],[13,"CUDA",E,R[908],1,N],[13,"OPENCL",E,R[909],1,N],[4,"DType",E,R[910],N,N],[13,"F32",E,R[796],2,N],[13,"C32",E,R[797],2,N],[13,"F64",E,R[798],2,N],[13,"C64",E,R[799],2,N],[13,"B8",E,R[800],2,N],[13,"S32",E,R[801],2,N],[13,"U32",E,R[802],2,N],[13,"U8",E,R[803],2,N],[13,"S64",E,R[804],2,N],[13,"U64",E,R[805],2,N],[13,"S16",E,R[806],2,N],[13,"U16",E,R[807],2,N],[4,R[843],E,R[911],N,N],[13,"NEAREST",E,R[912],3,N],[13,"LINEAR",E,R[913],3,N],[13,"BILINEAR",E,R[914],3,N],[13,"CUBIC",E,R[915],3,N],[13,"LOWER",E,R[916],3,N],[13,R[917],E,R[918],3,N],[13,R[919],E,R[920],3,N],[13,"BICUBIC",E,R[921],3,N],[13,R[922],E,R[923],3,N],[13,R[924],E,R[925],3,N],[4,R[844],E,R[926],N,N],[13,"ZERO",E,R[927],4,N],[13,R[928],E,R[929],4,N],[4,R[845],E,R[930],N,N],[13,"FOUR",E,R[931],5,N],[13,"EIGHT",E,R[932],5,N],[4,R[933],E,R[934],N,N],[13,R[809],E,R[935],6,N],[13,"EXPAND",E,R[936],6,N],[4,R[846],E,R[937],N,N],[13,"AUTO",E,R[938],7,N],[13,"SPATIAL",E,R[939],7,N],[13,R[940],E,R[941],7,N],[4,R[847],E,R[942],N,N],[13,"SAD",E,R[943],8,N],[13,"ZSAD",E,R[944],8,N],[13,"LSAD",E,R[945],8,N],[13,"SSD",E,R[946],8,N],[13,"ZSSD",E,R[947],8,N],[13,"LSSD",E,R[948],8,N],[13,"NCC",E,R[949],8,N],[13,"ZNCC",E,R[950],8,N],[13,"SHD",E,R[951],8,N],[4,R[848],E,R[952],N,N],[13,"GRAY",E,R[953],9,N],[13,"RGB",E,R[954],9,N],[13,"HSV",E,R[955],9,N],[4,"MatProp",E,R[956],N,N],[13,"NONE",E,R[957],10,N],[13,"TRANS",E,R[958],10,N],[13,"CTRANS",E,R[959],10,N],[13,"UPPER",E,R[960],10,N],[13,"LOWER",E,R[961],10,N],[13,"DIAGUNIT",E,R[962],10,N],[13,"SYM",E,R[963],10,N],[13,"POSDEF",E,R[964],10,N],[13,"ORTHOG",E,R[965],10,N],[13,"TRIDIAG",E,R[966],10,N],[13,R[967],E,R[968],10,N],[4,R[969],E,R[970],N,N],[13,"VECTOR_1",E,R[971],11,N],[13,R[972],E,R[973],11,N],[13,"VECTOR_2",E,R[974],11,N],[13,"VECTOR_P",E,R[975],11,N],[13,"MATRIX_1",E,R[976],11,N],[13,R[977],E,R[978],11,N],[13,"MATRIX_2",E,R[979],11,N],[13,R[980],E,R[981],11,N],[4,R[982],E,R[983],N,N],[13,R[809],E,R[984],12,N],[13,"SPECTRUM",E,R[985],12,N],[13,"COLORS",E,"Colors",12,N],[13,"RED",E,R[986],12,N],[13,"MOOD",E,R[987],12,N],[13,"HEAT",E,R[988],12,N],[13,"BLUE",E,R[989],12,N],[4,"YCCStd",E,R[990],N,N],[13,"YCC_601",E,R[991],13,N],[13,"YCC_709",E,R[992],13,N],[13,"YCC_2020",E,R[993],13,N],[4,R[849],E,R[994],N,N],[13,"RANSAC",E,R[995],14,N],[13,"LMEDS",E,R[996],14,N],[4,R[850],E,R[997],N,N],[13,"NONE",E,R[998],15,N],[13,"POINT",E,R[999],15,N],[13,"CIRCLE",E,R[1000],15,N],[13,"SQUARE",E,R[1001],15,N],[13,"TRIANGLE",E,R[1002],15,N],[13,"CROSS",E,R[1003],15,N],[13,"PLUS",E,R[1004],15,N],[13,"STAR",E,R[1005],15,N],[4,R[851],E,R[1006],N,N],[13,"M00",E,R[1007],16,N],[13,"M01",E,R[1008],16,N],[13,"M10",E,R[1009],16,N],[13,"M11",E,R[1010],16,N],[13,R[1011],E,R[1012],16,N],[4,R[852],E,R[1013],N,N],[13,"DENSE",E,R[1014],17,N],[13,"CSR",E,R[1015],17,N],[13,"CSC",E,R[1016],17,N],[13,"COO",E,R[1017],17,N],[4,"BinaryOp",E,R[1018],N,N],[13,"ADD",E,R[1019],18,N],[13,"MUL",E,R[1020],18,N],[13,"MIN",E,R[1021],18,N],[13,"MAX",E,R[1022],18,N],[4,R[853],E,R[1023],N,N],[13,R[1024],E,R[1025],19,N],[13,R[1026],E,R[1027],19,N],[13,R[1028],E,R[1029],19,N],[4,"Scalar",E,R[1030],N,N],[13,"F32",E,R[796],20,N],[13,"C32",E,R[797],20,N],[13,"F64",E,R[798],20,N],[13,"C64",E,R[799],20,N],[13,"B8",E,R[800],20,N],[13,"S32",E,R[801],20,N],[13,"U32",E,R[802],20,N],[13,"U8",E,R[803],20,N],[13,"S64",E,R[804],20,N],[13,"U64",E,R[805],20,N],[13,"S16",E,R[806],20,N],[13,"U16",E,R[807],20,N],[4,R[854],E,R[1031],N,N],[13,"MANUAL",E,R[1032],21,N],[13,"OTSU",E,R[1033],21,N],[4,R[855],E,R[1034],N,N],[13,"QUADRATIC",E,R[808],22,N],[13,R[1035],E,R[1036],22,N],[13,R[809],E,R[1037],22,N],[4,"FluxFn",E,R[1038],N,N],[13,"GRADIENT",E,R[808],23,N],[13,"MCDE",E,R[1039],23,N],[13,R[809],E,R[1040],23,N],[4,"TopkFn",E,R[1041],N,N],[13,"MIN",E,R[1042],24,N],[13,"MAX",E,R[1043],24,N],[13,R[809],E,R[1044],24,N],[5,"print",E,R[1045],N,[[["array"]]]],[5,"print_gen",E,R[1046],N,[[[R[3]],["i32"],["array"],[R[11],["i32"]]]]],[5,R[1047],E,R[1048],N,[[["array"],["vec",["array"]]]]],[5,R[1049],E,R[1050],N,[[["bool"]]]],[5,R[1051],E,R[1052],N,[[],["bool"]]],[5,"sum",E,R[1053],N,[[["i32"],["array"]],["array"]]],[5,"product",E,R[1054],N,[[["i32"],["array"]],["array"]]],[5,"min",E,R[1055],N,[[["i32"],["array"]],["array"]]],[5,"max",E,R[1056],N,[[["i32"],["array"]],["array"]]],[5,"all_true",E,R[1057],N,[[["i32"],["array"]],[["array",["bool"]],["bool"]]]],[5,"any_true",E,R[1058],N,[[["i32"],["array"]],[["array",["bool"]],["bool"]]]],[5,"count",E,R[1059],N,[[["i32"],["array"]],[["u32"],["array",["u32"]]]]],[5,"accum",E,R[1060],N,[[["i32"],["array"]],["array"]]],[5,"diff1",E,R[1061],N,[[["i32"],["array"]],["array"]]],[5,"diff2",E,R[1062],N,[[["i32"],["array"]],["array"]]],[5,"sum_nan",E,R[1063],N,[[["i32"],["array"],["f64"]],["array"]]],[5,R[1064],E,R[1065],N,[[["i32"],["array"],["f64"]],["array"]]],[5,"sum_all",E,R[1066],N,[[["array"]]]],[5,R[1067],E,R[1068],N,[[["array"]]]],[5,"min_all",E,R[1069],N,[[["array"]]]],[5,"max_all",E,R[1070],N,[[["array"]]]],[5,R[1071],E,R[1072],N,[[["array"]]]],[5,R[1073],E,R[1074],N,[[["array"]]]],[5,"count_all",E,R[1075],N,[[["array"]]]],[5,R[1076],E,R[1077],N,[[["array"],["f64"]]]],[5,R[1078],E,R[1079],N,[[["array"],["f64"]]]],[5,"imin",E,R[1080],N,[[["i32"],["array"]]]],[5,"imax",E,R[1081],N,[[["i32"],["array"]]]],[5,"imin_all",E,R[1082],N,[[["array"]]]],[5,"imax_all",E,R[1083],N,[[["array"]]]],[5,"locate",E,R[1084],N,[[["array"]],[["u32"],["array",["u32"]]]]],[5,"sort",E,R[810],N,[[["u32"],["array"],["bool"]],["array"]]],[5,"sort_index",E,R[810],N,[[["u32"],["array"],["bool"]]]],[5,R[1085],E,R[810],N,[[["u32"],["bool"],["array"],["array"]]]],[5,"set_unique",E,R[1086],N,[[["array"],["bool"]],["array"]]],[5,"set_union",E,R[1087],N,[[["array"],["bool"]],["array"]]],[5,R[1088],E,R[1089],N,[[["array"],["bool"]],["array"]]],[5,"scan",E,R[1090],N,[[[R[837]],["i32"],["array"],["bool"]],["array"]]],[5,R[1091],E,R[1092],N,[[[R[837]],["i32"],["bool"],["array"],["array"]],["array"]]],[5,"abs",E,R[1093],N,[[["array"]],["array"]]],[5,"arg",E,R[1094],N,[[["array"]],["array"]]],[5,"trunc",E,R[1095],N,[[["array"]],["array"]]],[5,"sign",E,R[1096],N,[[["array"]],["array"]]],[5,"round",E,R[1097],N,[[["array"]],["array"]]],[5,"floor",E,R[1098],N,[[["array"]],["array"]]],[5,"ceil",E,R[1099],N,[[["array"]],["array"]]],[5,"sigmoid",E,R[1100],N,[[["array"]],["array"]]],[5,"expm1",E,R[1101],N,[[["array"]],["array"]]],[5,"erf",E,R[1102],N,[[["array"]],["array"]]],[5,"erfc",E,R[1103],N,[[["array"]],["array"]]],[5,"log10",E,R[1104],N,[[["array"]],["array"]]],[5,"log1p",E,R[1105],N,[[["array"]],["array"]]],[5,"log2",E,R[1106],N,[[["array"]],["array"]]],[5,"cbrt",E,R[1107],N,[[["array"]],["array"]]],[5,"tgamma",E,R[1108],N,[[["array"]],["array"]]],[5,"lgamma",E,R[1109],N,[[["array"]],["array"]]],[5,"acosh",E,R[1110],N,[[["array"]],["array"]]],[5,"acos",E,R[1111],N,[[["array"]],["array"]]],[5,"asin",E,R[1112],N,[[["array"]],["array"]]],[5,"asinh",E,R[1113],N,[[["array"]],["array"]]],[5,"atan",E,R[1114],N,[[["array"]],["array"]]],[5,"atanh",E,R[1115],N,[[["array"]],["array"]]],[5,"cos",E,R[1116],N,[[["array"]],["array"]]],[5,"cosh",E,R[1117],N,[[["array"]],["array"]]],[5,"exp",E,R[1118],N,[[["array"]],["array"]]],[5,"log",E,R[1119],N,[[["array"]],["array"]]],[5,"sin",E,R[1120],N,[[["array"]],["array"]]],[5,"sinh",E,R[1121],N,[[["array"]],["array"]]],[5,"sqrt",E,R[1122],N,[[["array"]],["array"]]],[5,"tan",E,R[1123],N,[[["array"]],["array"]]],[5,"tanh",E,R[1124],N,[[["array"]],["array"]]],[5,"real",E,R[1125],N,[[["array"]],["array"]]],[5,"imag",E,R[1126],N,[[["array"]],["array"]]],[5,"cplx",E,R[1127],N,[[["array"]],["array"]]],[5,"conjg",E,R[1128],N,[[["array"]],["array"]]],[5,"pow2",E,R[1129],N,[[["array"]],["array"]]],[5,"factorial",E,R[1130],N,[[["array"]],["array"]]],[5,"iszero",E,R[1131],N,[[["array"]],[["array",["bool"]],["bool"]]]],[5,"isinf",E,R[1132],N,[[["array"]],[["array",["bool"]],["bool"]]]],[5,"isnan",E,R[1133],N,[[["array"]],[["array",["bool"]],["bool"]]]],[5,"bitand",E,R[1134],N,[[["array"],["array"],["bool"]],["array"]]],[5,"bitor",E,R[1135],N,[[["array"],["array"],["bool"]],["array"]]],[5,"bitxor",E,R[1136],N,[[["array"],["array"],["bool"]],["array"]]],[5,"neq",E,R[1137],N,[[["array"],["array"],["bool"]],["array"]]],[5,"and",E,R[1138],N,[[["array"],["array"],["bool"]],["array"]]],[5,"or",E,R[1139],N,[[["array"],["array"],["bool"]],["array"]]],[5,"minof",E,R[1140],N,[[["array"],["array"],["bool"]],["array"]]],[5,"maxof",E,R[1141],N,[[["array"],["array"],["bool"]],["array"]]],[5,"hypot",E,R[1142],N,[[["array"],["array"],["bool"]],["array"]]],[5,"add",E,R[1143],N,[[[U],[T],["bool"]],["array"]]],[5,"sub",E,R[1144],N,[[[U],[T],["bool"]],["array"]]],[5,"mul",E,R[1145],N,[[[U],[T],["bool"]],["array"]]],[5,"div",E,R[1146],N,[[[U],[T],["bool"]],["array"]]],[5,"rem",E,R[1147],N,[[[U],[T],["bool"]],["array"]]],[5,"shiftl",E,R[1148],N,[[[U],[T],["bool"]],["array"]]],[5,"shiftr",E,R[1149],N,[[[U],[T],["bool"]],["array"]]],[5,"modulo",E,R[1150],N,[[[U],[T],["bool"]],["array"]]],[5,"atan2",E,R[1151],N,[[[U],[T],["bool"]],["array"]]],[5,"cplx2",E,R[1152],N,[[[U],[T],["bool"]],["array"]]],[5,"root",E,R[1153],N,[[[U],[T],["bool"]],["array"]]],[5,"pow",E,R[1154],N,[[[U],[T],["bool"]],["array"]]],[5,"lt",E,R[1155],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"gt",E,R[1156],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"le",E,R[1157],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"ge",E,R[1158],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"eq",E,R[1159],N,[[[U],[T],["bool"]],[["array",["bool"]],["bool"]]]],[5,"clamp",E,R[1160],N,[[["c"],["array"],["bool"]],["array"]]],[5,R[1161],E,R[1162],N,[[[R[832]]]]],[5,R[1163],E,R[1164],N,[[],["u32"]]],[5,R[1165],E,R[1166],N,[[],[[R[832]],["vec",[R[832]]]]]],[5,R[1167],E,R[1168],N,[[],[R[832]]]],[5,"matmul",E,R[1169],N,[[["array"],[R[835]]],["array"]]],[5,"dot",E,R[1170],N,[[["array"],[R[835]]],["array"]]],[5,"transpose",E,R[1171],N,[[["array"],["bool"]],[[R[811]],["array"]]]],[5,R[1172],E,R[1173],N,[[["array"],["bool"]]]],[5,"constant",E,R[1174],N,[[["dim4"],[R[1175]]],["array"]]],[5,"range",E,R[1176],N,[[["dim4"],["i32"]],[[R[811]],["array"]]]],[5,"iota",E,R[1177],N,[[["dim4"]],[[R[811]],["array"]]]],[5,"identity",E,R[1178],N,[[["dim4"]],[[R[811]],["array"]]]],[5,R[1179],E,R[1180],N,[[["i32"],["array"]],["array"]]],[5,R[1181],E,R[1182],N,[[["i32"],["array"]],["array"]]],[5,"join",E,R[1183],N,[[["i32"],["array"]],["array"]]],[5,R[831],E,R[1184],N,[[["i32"],["array"],["vec",["array"]]],["array"]]],[5,"tile",E,R[1185],N,[[["dim4"],["array"]],["array"]]],[5,"reorder",E,R[1186],N,[[["dim4"],["array"]],["array"]]],[5,"shift",E,R[1187],N,[[["array"]],["array"]]],[5,"moddims",E,R[1188],N,[[["dim4"],["array"]],["array"]]],[5,"flat",E,R[1189],N,[[["array"]],["array"]]],[5,"flip",E,R[1190],N,[[["u32"],["array"]],["array"]]],[5,"lower",E,R[1191],N,[[["array"],["bool"]],["array"]]],[5,"upper",E,R[1192],N,[[["array"],["bool"]],["array"]]],[5,"select",E,R[812],N,[[["array"],["array"]],["array"]]],[5,"selectl",E,R[812],N,[[["array"],["f64"],["array"]],["array"]]],[5,"selectr",E,R[812],N,[[["array"],["f64"],["array"]],["array"]]],[5,"replace",E,R[813],N,[[["array"],["array"],["array"]]]],[5,R[1193],E,R[813],N,[[["f64"],["array"],["array"]]]],[5,R[1194],E,R[1195],N,[[]]],[5,R[1196],E,R[1197],N,[[],[["cow",["str"]],["str"]]]],[5,"info",E,R[1198],N,[[]]],[5,R[1199],E,R[1200],N,[[["bool"]],[R[3]]]],[5,R[1201],E,R[1202],N,[[]]],[5,"init",E,R[1203],N,[[]]],[5,R[1204],E,R[1205],N,[[],["i32"]]],[5,R[1206],E,R[1207],N,[[["i32"]],["bool"]]],[5,"set_device",E,R[1208],N,[[["i32"]]]],[5,"get_device",E,R[1209],N,[[],["i32"]]],[5,R[1210],E,R[1211],N,[[]]],[5,R[1212],E,R[1213],N,[[[R[3]],["i32"]]]],[5,R[1214],E,R[1215],N,[[["usize"]]]],[5,R[1216],E,R[1217],N,[[],["usize"]]],[5,"device_gc",E,R[1218],N,[[]]],[5,"sync",E,R[1219],N,[[["i32"]]]],[5,R[1220],E,R[1221],N,[[["aferror"]]]],[5,R[1222],E,R[1223],N,[[["callback"]]]],[5,"index",E,R[1224],N,[[["array"]],["array"]]],[5,"row",E,R[1225],N,[[["array"],["u64"]],["array"]]],[5,"set_row",E,R[1226],N,[[["array"],["u64"]],["array"]]],[5,"rows",E,R[1227],N,[[["array"],["u64"]],["array"]]],[5,"set_rows",E,R[1228],N,[[["array"],["u64"]],["array"]]],[5,"col",E,R[1229],N,[[["array"],["u64"]],["array"]]],[5,"set_col",E,R[1230],N,[[["array"],["u64"]],["array"]]],[5,"cols",E,R[1231],N,[[["array"],["u64"]],["array"]]],[5,"set_cols",E,R[1232],N,[[["array"],["u64"]],["array"]]],[5,"slice",E,R[1233],N,[[["array"],["u64"]],["array"]]],[5,"set_slice",E,R[1234],N,[[["array"],["u64"]],["array"]]],[5,"slices",E,R[1235],N,[[["array"],["u64"]],["array"]]],[5,"set_slices",E,R[1236],N,[[["array"],["u64"]],["array"]]],[5,"lookup",E,R[1237],N,[[["i32"],["array"],["array"]],["array"]]],[5,"assign_seq",E,R[1238],N,[[["array"]],["array"]]],[5,"index_gen",E,R[1239],N,[[["array"],["indexer"]],["array"]]],[5,"assign_gen",E,R[1240],N,[[["array"],["indexer"]],["array"]]],[5,"gradient",E,R[1241],N,[[["array"]]]],[5,"load_image",E,R[1242],N,[[[R[3]],["bool"]],["array"]]],[5,R[1243],E,R[1244],N,[[[R[3]]],["array"]]],[5,"save_image",E,R[1245],N,[[[R[3]],["array"]]]],[5,R[1246],E,R[1247],N,[[[R[3]],["array"]]]],[5,"resize",E,R[1248],N,[[["array"],["i64"],[R[814]]],[[R[811]],["array"]]]],[5,"transform",E,R[1249],N,[[["array"],["i64"],[R[814]],["bool"],["array"]],[[R[811]],["array"]]]],[5,"rotate",E,R[1250],N,[[["array"],["f64"],[R[814]],["bool"]],[[R[811]],["array"]]]],[5,"translate",E,R[1251],N,[[["array"],["i64"],[R[814]],["f32"]],[[R[811]],["array"]]]],[5,"scale",E,R[1252],N,[[["array"],["i64"],[R[814]],["f32"]],[[R[811]],["array"]]]],[5,"skew",E,R[1253],N,[[["array"],["i64"],[R[814]],["bool"],["f32"]],[[R[811]],["array"]]]],[5,"histogram",E,R[1254],N,[[["u32"],["array"],["f64"]],[["u32"],["array",["u32"]]]]],[5,"dilate",E,R[1255],N,[[["array"]],["array"]]],[5,"erode",E,R[1256],N,[[["array"]],["array"]]],[5,"dilate3",E,R[1257],N,[[["array"]],["array"]]],[5,"erode3",E,R[1258],N,[[["array"]],["array"]]],[5,"bilateral",E,R[1259],N,[[["array"],["bool"],["f32"]],["array"]]],[5,"mean_shift",E,R[1260],N,[[["u32"],["array"],["bool"],["f32"]],["array"]]],[5,"medfilt",E,R[1261],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,"minfilt",E,R[1262],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,"maxfilt",E,R[1263],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,R[1264],E,R[1265],N,[[["i32"],["f64"]],[["array",["f32"]],["f32"]]]],[5,R[1266],E,R[1267],N,[[["array"],[R[834]]],["array"]]],[5,"regions",E,R[1268],N,[[[R[833]],["array"]],["array"]]],[5,"sobel",E,R[1269],N,[[["u32"],["array"]]]],[5,"hist_equal",E,R[1270],N,[[["array"],["array"]],["array"]]],[5,"rgb2gray",E,R[1271],N,[[["array"],["f32"]],["array"]]],[5,"gray2rgb",E,R[1272],N,[[["array"],["f32"]],["array"]]],[5,"hsv2rgb",E,R[1273],N,[[["array"]],["array"]]],[5,"rgb2hsv",E,R[1274],N,[[["array"]],["array"]]],[5,"unwrap",E,R[1275],N,[[["array"],["i64"],["bool"]],[[R[811]],["array"]]]],[5,"wrap",E,R[1276],N,[[["array"],["i64"],["bool"]],[[R[811]],["array"]]]],[5,"sat",E,R[1277],N,[[["array"]],["array"]]],[5,"rgb2ycbcr",E,R[1278],N,[[["array"],["yccstd"]],["array"]]],[5,"ycbcr2rgb",E,R[1279],N,[[["array"],["yccstd"]],["array"]]],[5,R[1280],E,R[1281],N,[[],["bool"]]],[5,R[1282],E,R[1283],N,[[["array"],["f32"]],["array"]]],[5,"moments",E,R[1284],N,[[["array"],[R[816]]],[["array",["f32"]],["f32"]]]],[5,R[1285],E,R[1286],N,[[["array"],[R[816]]],["f64"]]],[5,"medfilt1",E,R[1287],N,[[["array"],[R[815]],["u64"]],["array"]]],[5,"canny",E,R[1288],N,[[["u32"],["array"],[R[838]],["bool"],["f32"]],[["array",["bool"]],["bool"]]]],[5,R[1289],E,R[1290],N,[[["u32"],["fluxfn"],["array"],[R[839]],["f32"]],["array"]]],[5,"svd",E,R[1291],N,[[["array"]]]],[5,R[1292],E,R[1293],N,[[["array"]]]],[5,"lu",E,R[1294],N,[[["array"]]]],[5,"lu_inplace",E,R[1295],N,[[["array"],["bool"]],[["i32"],["array",["i32"]]]]],[5,"qr",E,R[1296],N,[[["array"]]]],[5,"qr_inplace",E,R[1297],N,[[["array"]],["array"]]],[5,"cholesky",E,R[1298],N,[[["array"],["bool"]]]],[5,R[1299],E,R[1300],N,[[["array"],["bool"]],["i32"]]],[5,"solve",E,R[817],N,[[["array"],[R[835]]],["array"]]],[5,"solve_lu",E,R[817],N,[[["array"],["array"],[R[835]]],["array"]]],[5,"inverse",E,R[1301],N,[[["array"],[R[835]]],["array"]]],[5,"rank",E,R[1302],N,[[["array"],["f64"]],["u32"]]],[5,"det",E,R[1303],N,[[["array"]]]],[5,"norm",E,R[1304],N,[[["array"],["f64"],[R[840]]],["f64"]]],[5,R[1305],E,R[1306],N,[[],["bool"]]],[5,"set_seed",E,R[1307],N,[[["u64"]]]],[5,"get_seed",E,R[1308],N,[[],["u64"]]],[5,"randu",E,R[1309],N,[[["dim4"]],["array"]]],[5,"randn",E,R[1310],N,[[["dim4"]],["array"]]],[5,R[1311],E,R[1312],N,[[],[R[818]]]],[5,R[1313],E,R[1314],N,[[[R[825]]]]],[5,R[1315],E,R[1316],N,[[["dim4"],[R[818]]],["array"]]],[5,R[1317],E,R[1318],N,[[["dim4"],[R[818]]],["array"]]],[5,"approx1",E,R[1319],N,[[["array"],[R[814]],["f32"],["array"]],["array"]]],[5,"approx2",E,R[1320],N,[[["array"],[R[814]],["f32"],["array"]],["array"]]],[5,R[1321],E,R[1322],N,[[["usize"]]]],[5,"fft",E,R[1323],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"fft2",E,R[1324],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"fft3",E,R[1325],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"ifft",E,R[1326],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"ifft2",E,R[1327],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"ifft3",E,R[1328],N,[[["array"],["f64"],["i64"]],["array"]]],[5,"convolve1",E,R[1329],N,[[[R[819]],[R[820]],["array"],["array"]],["array"]]],[5,"convolve2",E,R[1330],N,[[[R[819]],[R[820]],["array"],["array"]],["array"]]],[5,"convolve3",E,R[1331],N,[[[R[819]],[R[820]],["array"],["array"]],["array"]]],[5,R[1332],E,R[1333],N,[[[R[820]],["array"],["array"]],["array"]]],[5,R[1334],E,R[1335],N,[[[R[820]],["array"],["array"]],["array"]]],[5,R[1336],E,R[1337],N,[[[R[820]],["array"],["array"]],["array"]]],[5,R[1338],E,R[1339],N,[[[R[820]],["array"],["array"]],["array"]]],[5,"fir",E,R[1340],N,[[["array"],["array"]],["array"]]],[5,"iir",E,R[1341],N,[[["array"]],[[R[811]],["array"]]]],[5,R[1342],E,R[1343],N,[[["f64"],["array"]]]],[5,R[1344],E,R[1345],N,[[["f64"],["array"]]]],[5,R[1346],E,R[1347],N,[[["f64"],["array"]]]],[5,R[1348],E,R[1349],N,[[["f64"],["array"]]]],[5,R[1350],E,R[1351],N,[[["f64"],["array"]]]],[5,R[1352],E,R[1353],N,[[["f64"],["array"]]]],[5,"fft_r2c",E,R[1354],N,[[["array"],["f64"],["i64"]],[["array",[R[364]]],[R[364]]]]],[5,"fft2_r2c",E,R[1355],N,[[["array"],["f64"],["i64"]],[["array",[R[364]]],[R[364]]]]],[5,"fft3_r2c",E,R[1356],N,[[["array"],["f64"],["i64"]],[["array",[R[364]]],[R[364]]]]],[5,"fft_c2r",E,R[1357],N,[[["array"],["f64"],["bool"]],["array"]]],[5,"fft2_c2r",E,R[1358],N,[[["array"],["f64"],["bool"]],["array"]]],[5,"fft3_c2r",E,R[1359],N,[[["array"],["f64"],["bool"]],["array"]]],[5,"sparse",E,R[1360],N,[[["array"],["array"],["u64"],[R[821]]],["array"]]],[5,R[1361],E,R[1362],N,[[["u64"],[R[821]]],["array"]]],[5,R[1363],E,R[1364],N,[[["array"],[R[821]]],["array"]]],[5,R[1365],E,R[1366],N,[[["array"],[R[821]]],["array"]]],[5,R[1367],E,R[1368],N,[[["array"]],["array"]]],[5,R[1369],E,R[1370],N,[[["array"]]]],[5,R[1371],E,R[1372],N,[[["array"]],["array"]]],[5,R[1373],E,R[1374],N,[[["array"]],[["i32"],["array",["i32"]]]]],[5,R[1375],E,R[1376],N,[[["array"]],[["i32"],["array",["i32"]]]]],[5,R[1377],E,R[1378],N,[[["array"]],["i64"]]],[5,R[1379],E,R[1380],N,[[["array"]],[R[821]]]],[5,"median",E,R[1381],N,[[["array"],["i64"]],["array"]]],[5,"mean",E,R[1382],N,[[["array"],["i64"]],["array"]]],[5,"stdev",E,R[1383],N,[[["array"],["i64"]],["array"]]],[5,R[1384],E,R[1385],N,[[["array"],["array"],["i64"]],["array"]]],[5,R[1386],E,R[1387],N,[[["array"],["array"],["i64"]],["array"]]],[5,"var",E,R[1388],N,[[["array"],["i64"],["bool"]],["array"]]],[5,"cov",E,R[1389],N,[[["array"],["bool"]],["array"]]],[5,"var_all",E,R[1390],N,[[["array"],["bool"]]]],[5,"mean_all",E,R[1391],N,[[["array"]]]],[5,"stdev_all",E,R[1392],N,[[["array"]]]],[5,"median_all",E,R[1393],N,[[["array"]]]],[5,R[1394],E,R[1395],N,[[["array"],["array"]]]],[5,R[1396],E,R[1397],N,[[["array"],["array"]]]],[5,"corrcoef",E,R[1398],N,[[["array"]]]],[5,"topk",E,R[1399],N,[[["u32"],["i32"],["array"],["topkfn"]]]],[5,"get_size",E,R[1400],N,[[["dtype"]],["usize"]]],[5,"fast",E,R[1401],N,[[["u32"],["array"],["bool"],["f32"]],[R[823]]]],[5,"harris",E,R[1402],N,[[["u32"],["array"],["f32"]],[R[823]]]],[5,"orb",E,R[1403],N,[[["u32"],["array"],["bool"],["f32"]]]],[5,R[1404],E,R[1405],N,[[["u32"],["array"],["i64"]]]],[5,R[1406],E,R[1407],N,[[["u32"],["array"],[R[822]],["i64"]]]],[5,R[1408],E,R[1409],N,[[["array"],[R[822]]],["array"]]],[5,"susan",E,R[1410],N,[[["u32"],["array"],["f32"]],[R[823]]]],[5,"dog",E,R[1411],N,[[["i32"],["array"]],["array"]]],[5,"homography",E,R[1412],N,[[["u32"],[R[836]],["f32"],["array"]]]],[11,"new",E,R[1413],25,[[["dim4"]],["self"]]],[11,R[1414],E,R[1415],25,[[["dim4"],["i64"]],["self"]]],[11,"new_empty",E,R[1416],25,[[["dim4"]],["self"]]],[11,R[1417],E,R[1418],25,[[["self"]],[R[832]]]],[11,R[1419],E,R[1420],25,[[["self"]],["i32"]]],[11,"elements",E,R[1421],25,[[["self"]],["usize"]]],[11,"get_type",E,R[1422],25,[[["self"]],["dtype"]]],[11,"dims",E,R[1423],25,[[["self"]],["dim4"]]],[11,"strides",E,R[1424],25,[[["self"]],["dim4"]]],[11,"numdims",E,R[1425],25,[[["self"]],["u32"]]],[11,"offset",E,R[1426],25,[[["self"]],["i64"]]],[11,"get",E,R[1427],25,[[["self"]],["i64"]]],[11,"host",E,R[1428],25,[[["self"]]]],[11,"eval",E,R[1429],25,[[["self"]]]],[11,"copy",E,R[1430],25,[[["self"]],["self"]]],[11,"is_empty",E,R[1431],25,[[["self"]],["bool"]]],[11,"is_scalar",E,R[1432],25,[[["self"]],["bool"]]],[11,"is_row",E,R[1433],25,[[["self"]],["bool"]]],[11,"is_column",E,R[1434],25,[[["self"]],["bool"]]],[11,"is_vector",E,R[1435],25,[[["self"]],["bool"]]],[11,R[828],E,R[1436],25,[[["self"]],["bool"]]],[11,"is_double",E,R[1437],25,[[["self"]],["bool"]]],[11,"is_single",E,R[1438],25,[[["self"]],["bool"]]],[11,"is_real",E,R[1439],25,[[["self"]],["bool"]]],[11,R[1440],E,R[1441],25,[[["self"]],["bool"]]],[11,R[779],E,R[1442],25,[[["self"]],["bool"]]],[11,"is_bool",E,R[1443],25,[[["self"]],["bool"]]],[11,"is_linear",E,R[1444],25,[[["self"]],["bool"]]],[11,"is_owner",E,R[1445],25,[[["self"]],["bool"]]],[11,"cast",E,R[1446],25,[[["self"]],[[R[811]],["array"]]]],[11,"is_sparse",E,R[1447],25,[[["self"]],["bool"]]],[11,"lock",E,R[1448],25,[[["self"]]]],[11,"unlock",E,R[1449],25,[[["self"]]]],[11,"device_ptr",E,R[1450],25,[[["self"]],["u64"]]],[11,R[1451],E,R[1452],25,[[["self"]],["usize"]]],[11,"new",E,R[1453],26,[[],["self"]]],[11,"elements",E,R[1454],26,[[["self"]],["u64"]]],[11,"ndims",E,R[1455],26,[[["self"]],["usize"]]],[11,"get",E,R[1456],26,[[["self"]]]],[11,"new",E,R[1457],27,[[[R[1458]]],["self"]]],[11,"call",E,R[1459],27,[[["aferror"],["self"]]]],[11,"new",E,R[1460],28,[[],["self"]]],[11,"set_index",E,R[1461],28,[[["u32"],[R[11],["bool"]],["self"],[T],["bool"]]]],[11,"len",E,R[1462],28,[[["self"]],["usize"]]],[11,"get",E,R[1463],28,[[["self"]],["i64"]]],[11,"new",E,R[1464],29,[[[T]],["self"]]],[11,"begin",E,R[1465],29,[[["self"]],[T]]],[11,"end",E,R[1466],29,[[["self"]],[T]]],[11,"step",E,R[1467],29,[[["self"]],[T]]],[11,"new",E,R[1468],30,[[[R[3]],["i32"]],["self"]]],[11,R[1469],E,R[1470],30,[[["u32"],["self"]]]],[11,"set_title",E,R[1471],30,[[[R[3]],["self"]]]],[11,R[1472],E,R[1473],30,[[["self"],["bool"]]]],[11,"set_size",E,R[1474],30,[[["u32"],["self"]]]],[11,R[1475],E,R[1476],30,[[[R[841]],["self"]]]],[11,"is_closed",E,R[1477],30,[[["self"]],["bool"]]],[11,"grid",E,R[1478],30,[[["i32"],["self"]]]],[11,"show",E,R[1479],30,[[["self"]]]],[11,"set_view",E,R[1480],30,[[["i32"],["self"]]]],[11,R[1481],E,R[1482],30,[[[R[3]],["self"]]]],[11,R[1483],E,R[1484],30,[[["array"],["self"],["bool"],[R[11],["array"]]]]],[11,R[1485],E,R[1486],30,[[["self"],["bool"],["f32"]]]],[11,R[1487],E,R[1488],30,[[["self"],["bool"],["f32"]]]],[11,"draw_image",E,R[1489],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_plot2",E,R[1490],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_plot3",E,R[1491],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_plot",E,R[1492],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"draw_hist",E,R[1493],30,[[[R[3]],["array"],["f64"],[R[11],[R[3]]],["self"]]]],[11,R[1494],E,R[1495],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,R[1496],E,R[1497],30,[[[R[3]],["array"],[R[824]],[R[11],[R[3]]],["self"]]]],[11,R[1498],E,R[1499],30,[[[R[3]],["array"],[R[824]],[R[11],[R[3]]],["self"]]]],[11,R[1500],E,R[1501],30,[[[R[3]],["array"],[R[824]],[R[11],[R[3]]],["self"]]]],[11,R[1502],E,R[1503],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,R[1504],E,R[1505],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,R[1506],E,R[1507],30,[[[R[3]],["array"],[R[11],[R[3]]],["self"]]]],[11,"new",E,R[1508],31,[[[R[11],["u64"]],[R[825]],["u64"]],["self"]]],[11,"get_type",E,R[826],31,[[["self"]],[R[825]]]],[11,"set_type",E,R[826],31,[[["self"],[R[825]]]]],[11,"set_seed",E,R[1509],31,[[["self"],["u64"]]]],[11,"get_seed",E,R[1510],31,[[["self"]],["u64"]]],[11,"get",E,R[1511],31,[[["self"]],["i64"]]],[11,"new",E,R[1512],32,[[["u64"]],["self"]]],[11,R[1513],E,R[1514],32,[[["self"]],["i64"]]],[11,"xpos",E,R[1515],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"ypos",E,R[1516],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"score",E,R[1517],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,R[1518],E,R[1519],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"size",E,R[1520],32,[[["self"]],[["array",["f32"]],["f32"]]]],[11,"get",E,R[1521],32,[[["self"]],["i64"]]],[6,R[1522],E,R[1523],N,N],[17,"PHILOX",E,R[1524],N,N],[17,"THREEFRY",E,R[1525],N,N],[17,"MERSENNE",E,R[1526],N,N],[17,R[1527],E,R[1528],N,N],[8,R[857],E,R[1529],N,N],[16,"OutType",E,R[1530],33,N],[10,"convert",E,R[1531],33,[[["self"]],["array"]]],[8,R[858],E,R[1532],N,N],[16,"OutType",E,R[1533],34,N],[10,"generate",E,R[1534],34,[[["dim4"],["self"]],["array"]]],[8,R[859],E,R[1535],N,N],[10,"set",E,R[1536],35,[[["u32"],["indexer"],[R[11],["bool"]],["self"],["bool"]]]],[8,R[860],E,R[1537],N,N],[16,"InType",E,R[1538],36,N],[16,"BaseType",E,R[1539],36,N],[16,"AbsOutType",E,R[1540],36,N],[16,"ArgOutType",E,R[1541],36,N],[16,R[1542],E,R[1543],36,N],[16,R[1544],E,R[1545],36,N],[16,R[1546],E,R[827],36,N],[16,R[1547],E,R[827],36,N],[16,R[1548],E,R[1549],36,N],[10,R[1550],E,R[1551],36,[[],["dtype"]]],[8,R[861],E,R[1552],N,N],[16,"Output",E,R[1553],37,N],[8,R[1554],E,R[1555],N,N],[8,R[862],E,R[1556],N,N],[11,"is_real",E,E,38,[[],["bool"]]],[11,R[828],E,E,38,[[],["bool"]]],[8,R[1557],E,R[1558],N,N],[8,"RealNumber",E,R[1559],N,N],[8,R[1560],E,R[829],N,N],[8,R[1561],E,R[1562],N,N],[8,R[1563],E,R[829],N,N],[8,R[1564],E,R[829],N,N],[8,R[1565],E,R[1566],N,N],[8,R[1567],E,R[830],N,N],[8,R[1568],E,R[830],N,N],[8,"Scanable",E,R[1569],N,N],[14,"mem_info",E,R[1570],N,N],[14,R[831],E,R[1571],N,N],[14,"af_print",E,R[1572],N,N],[14,"eval",E,R[1573],N,N],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[18],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[[T],["self"]]]],[11,R[20],E,E,25,[[[U]],[R[4]]]],[11,R[26],E,E,25,[[["self"]],[T]]],[11,R[23],E,E,25,[[["self"]],[R[27]]]],[11,R[21],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[],[R[4]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[18],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[[T],["self"]]]],[11,R[25],E,E,26,[[["self"]],[R[3]]]],[11,R[20],E,E,26,[[[U]],[R[4]]]],[11,R[26],E,E,26,[[["self"]],[T]]],[11,R[23],E,E,26,[[["self"]],[R[27]]]],[11,R[21],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[],[R[4]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[20],E,E,27,[[[U]],[R[4]]]],[11,R[26],E,E,27,[[["self"]],[T]]],[11,R[23],E,E,27,[[["self"]],[R[27]]]],[11,R[21],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[],[R[4]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[20],E,E,28,[[[U]],[R[4]]]],[11,R[26],E,E,28,[[["self"]],[T]]],[11,R[23],E,E,28,[[["self"]],[R[27]]]],[11,R[21],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[],[R[4]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[18],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[[T],["self"]]]],[11,R[25],E,E,29,[[["self"]],[R[3]]]],[11,R[20],E,E,29,[[[U]],[R[4]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[R[27]]]],[11,R[21],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[],[R[4]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[18],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[[T],["self"]]]],[11,R[20],E,E,30,[[[U]],[R[4]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[R[27]]]],[11,R[21],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[],[R[4]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[18],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[[T],["self"]]]],[11,R[20],E,E,31,[[[U]],[R[4]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[R[27]]]],[11,R[21],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[],[R[4]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[18],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[[T],["self"]]]],[11,R[20],E,E,32,[[[U]],[R[4]]]],[11,R[26],E,E,32,[[["self"]],[T]]],[11,R[23],E,E,32,[[["self"]],[R[27]]]],[11,R[21],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[],[R[4]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[[T],["self"]]]],[11,R[25],E,E,0,[[["self"]],[R[3]]]],[11,R[20],E,E,0,[[[U]],[R[4]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[27]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[[T],["self"]]]],[11,R[25],E,E,1,[[["self"]],[R[3]]]],[11,R[20],E,E,1,[[[U]],[R[4]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[27]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[],[R[4]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[[T],["self"]]]],[11,R[20],E,E,2,[[[U]],[R[4]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[27]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[],[R[4]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[[T],["self"]]]],[11,R[20],E,E,3,[[[U]],[R[4]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[27]]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[],[R[4]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[[T],["self"]]]],[11,R[20],E,E,4,[[[U]],[R[4]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[R[27]]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[],[R[4]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[[T],["self"]]]],[11,R[20],E,E,5,[[[U]],[R[4]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[R[27]]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[],[R[4]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[[T],["self"]]]],[11,R[20],E,E,6,[[[U]],[R[4]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[R[27]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[],[R[4]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[[T],["self"]]]],[11,R[20],E,E,7,[[[U]],[R[4]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[R[27]]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[],[R[4]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[[T],["self"]]]],[11,R[20],E,E,8,[[[U]],[R[4]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[R[27]]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[],[R[4]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[[T],["self"]]]],[11,R[20],E,E,9,[[[U]],[R[4]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[R[27]]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[],[R[4]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[[T],["self"]]]],[11,R[20],E,E,10,[[[U]],[R[4]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[R[27]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[],[R[4]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[[T],["self"]]]],[11,R[20],E,E,11,[[[U]],[R[4]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[R[27]]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[],[R[4]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[[T],["self"]]]],[11,R[20],E,E,12,[[[U]],[R[4]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[R[27]]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[],[R[4]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[[T],["self"]]]],[11,R[20],E,E,13,[[[U]],[R[4]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[R[27]]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[],[R[4]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[18],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[[T],["self"]]]],[11,R[20],E,E,14,[[[U]],[R[4]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[R[27]]]],[11,R[21],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[],[R[4]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[18],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[[T],["self"]]]],[11,R[20],E,E,15,[[[U]],[R[4]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[R[27]]]],[11,R[21],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[],[R[4]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[18],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[[T],["self"]]]],[11,R[20],E,E,16,[[[U]],[R[4]]]],[11,R[26],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[R[27]]]],[11,R[21],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[],[R[4]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[18],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[[T],["self"]]]],[11,R[20],E,E,17,[[[U]],[R[4]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[R[27]]]],[11,R[21],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[],[R[4]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[18],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[[T],["self"]]]],[11,R[20],E,E,18,[[[U]],[R[4]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[R[27]]]],[11,R[21],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[],[R[4]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[18],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[[T],["self"]]]],[11,R[20],E,E,19,[[[U]],[R[4]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[R[27]]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[],[R[4]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[18],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[[T],["self"]]]],[11,R[20],E,E,20,[[[U]],[R[4]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[R[27]]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[],[R[4]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[18],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[[T],["self"]]]],[11,R[20],E,E,21,[[[U]],[R[4]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[R[27]]]],[11,R[21],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[],[R[4]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[18],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[[T],["self"]]]],[11,R[20],E,E,22,[[[U]],[R[4]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[R[27]]]],[11,R[21],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[],[R[4]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[18],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[[T],["self"]]]],[11,R[20],E,E,23,[[[U]],[R[4]]]],[11,R[26],E,E,23,[[["self"]],[T]]],[11,R[23],E,E,23,[[["self"]],[R[27]]]],[11,R[21],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[],[R[4]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[18],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[[T],["self"]]]],[11,R[20],E,E,24,[[[U]],[R[4]]]],[11,R[26],E,E,24,[[["self"]],[T]]],[11,R[23],E,E,24,[[["self"]],[R[27]]]],[11,R[21],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[],[R[4]]]],[11,"convert",E,E,25,[[["self"]],["array"]]],[11,"set",E,E,25,[[["u32"],["indexer"],[R[11],["bool"]],["self"],["bool"]]]],[11,"set",E,E,29,[[["u32"],["indexer"],[R[11],["bool"]],["self"],["bool"]]]],[11,"eq",E,E,0,[[["self"],["aferror"]],["bool"]]],[11,"eq",E,E,1,[[[R[832]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["dtype"]],["bool"]]],[11,"eq",E,E,3,[[[R[814]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[815]]],["bool"]]],[11,"eq",E,E,5,[[[R[833]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[820]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[819]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[822]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[834]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[835]]],["bool"]]],[11,"eq",E,E,11,[[[R[840]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[841]],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["yccstd"]],["bool"]]],[11,"eq",E,E,14,[[[R[836]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[824]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[816]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[821]]],["bool"]]],[11,"eq",E,E,18,[[[R[837]],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[825]],["self"]],["bool"]]],[11,"eq",E,E,20,[[["scalar"],["self"]],["bool"]]],[11,"ne",E,E,20,[[["scalar"],["self"]],["bool"]]],[11,"eq",E,E,21,[[[R[838]],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[839]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["fluxfn"]],["bool"]]],[11,"eq",E,E,24,[[["topkfn"],["self"]],["bool"]]],[11,"eq",E,E,26,[[["dim4"],["self"]],["bool"]]],[11,"ne",E,E,26,[[["dim4"],["self"]],["bool"]]],[11,"clone",E,E,25,[[["self"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["aferror"]]],[11,"clone",E,E,1,[[["self"]],[R[832]]]],[11,"clone",E,E,2,[[["self"]],["dtype"]]],[11,"clone",E,E,3,[[["self"]],[R[814]]]],[11,"clone",E,E,4,[[["self"]],[R[815]]]],[11,"clone",E,E,5,[[["self"]],[R[833]]]],[11,"clone",E,E,6,[[["self"]],[R[820]]]],[11,"clone",E,E,7,[[["self"]],[R[819]]]],[11,"clone",E,E,8,[[["self"]],[R[822]]]],[11,"clone",E,E,9,[[["self"]],[R[834]]]],[11,"clone",E,E,10,[[["self"]],[R[835]]]],[11,"clone",E,E,11,[[["self"]],[R[840]]]],[11,"clone",E,E,12,[[["self"]],[R[841]]]],[11,"clone",E,E,13,[[["self"]],["yccstd"]]],[11,"clone",E,E,14,[[["self"]],[R[836]]]],[11,"clone",E,E,15,[[["self"]],[R[824]]]],[11,"clone",E,E,16,[[["self"]],[R[816]]]],[11,"clone",E,E,17,[[["self"]],[R[821]]]],[11,"clone",E,E,18,[[["self"]],[R[837]]]],[11,"clone",E,E,19,[[["self"]],[R[825]]]],[11,"clone",E,E,20,[[["self"]],["scalar"]]],[11,"clone",E,E,21,[[["self"]],[R[838]]]],[11,"clone",E,E,22,[[["self"]],[R[839]]]],[11,"clone",E,E,23,[[["self"]],["fluxfn"]]],[11,"clone",E,E,24,[[["self"]],["topkfn"]]],[11,"clone",E,E,26,[[["self"]],["dim4"]]],[11,"clone",E,E,29,[[["self"]],["seq"]]],[11,"clone",E,E,30,[[["self"]],["window"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"from",E,E,30,[[["u64"]],["self"]]],[11,"from",E,E,31,[[["i64"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,3,[[["u32"]],["self"]]],[11,"from",E,E,6,[[["u32"]],["self"]]],[11,"from",E,E,7,[[["u32"]],["self"]]],[11,"from",E,E,8,[[["u32"]],["self"]]],[11,"from",E,E,12,[[["u32"]],["self"]]],[11,"from",E,E,17,[[["u32"]],["self"]]],[11,"from",E,E,18,[[["u32"]],["self"]]],[11,"from",E,E,19,[[["u32"]],["self"]]],[11,"drop",E,E,25,[[["self"]]]],[11,"drop",E,E,28,[[["self"]]]],[11,"drop",E,E,30,[[["self"]]]],[11,"drop",E,E,31,[[["self"]]]],[11,"drop",E,E,32,[[["self"]]]],[11,R[761],E,E,26,[[],["self"]]],[11,R[761],E,E,29,[[],["self"]]],[11,"fmt",E,E,0,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,2,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,3,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,4,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,5,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,6,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,7,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,8,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,9,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,10,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,11,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,12,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,13,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,14,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,15,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,16,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,17,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,18,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,19,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,20,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,21,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,22,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,23,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,24,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,26,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[100]]],[[R[842]],[R[4],[R[842]]]]]],[11,"fmt",E,E,0,[[["self"],[R[100]]],[[R[842]],[R[4],[R[842]]]]]],[11,"fmt",E,E,26,[[[R[100]],["self"]],[R[4]]]],[11,"fmt",E,E,29,[[[R[100]],["self"]],[R[4]]]],[11,"div",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"div",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"div",E,E,25,[[["f64"]]]],[11,"div",E,E,25,[[["f32"]]]],[11,"div",E,E,25,[[["u64"]]]],[11,"div",E,E,25,[[["i64"]]]],[11,"div",E,E,25,[[["u32"]]]],[11,"div",E,E,25,[[["i32"]]]],[11,"div",E,E,25,[[["u8"]]]],[11,"div",E,E,25,[[["array"]]]],[11,"div",E,E,25,[[["array"]]]],[11,"add",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"add",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"add",E,E,25,[[["f64"]]]],[11,"add",E,E,25,[[["f32"]]]],[11,"add",E,E,25,[[["u64"]]]],[11,"add",E,E,25,[[["i64"]]]],[11,"add",E,E,25,[[["u32"]]]],[11,"add",E,E,25,[[["i32"]]]],[11,"add",E,E,25,[[["u8"]]]],[11,"add",E,E,25,[[["array"]]]],[11,"add",E,E,25,[[["array"]]]],[11,"sub",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"sub",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"sub",E,E,25,[[["f64"]]]],[11,"sub",E,E,25,[[["f32"]]]],[11,"sub",E,E,25,[[["u64"]]]],[11,"sub",E,E,25,[[["i64"]]]],[11,"sub",E,E,25,[[["u32"]]]],[11,"sub",E,E,25,[[["i32"]]]],[11,"sub",E,E,25,[[["u8"]]]],[11,"sub",E,E,25,[[["array"]]]],[11,"sub",E,E,25,[[["array"]]]],[11,"mul",E,E,25,[[["f64"],[R[364],["f64"]]]]],[11,"mul",E,E,25,[[["f32"],[R[364],["f32"]]]]],[11,"mul",E,E,25,[[["f64"]]]],[11,"mul",E,E,25,[[["f32"]]]],[11,"mul",E,E,25,[[["u64"]]]],[11,"mul",E,E,25,[[["i64"]]]],[11,"mul",E,E,25,[[["u32"]]]],[11,"mul",E,E,25,[[["i32"]]]],[11,"mul",E,E,25,[[["u8"]]]],[11,"mul",E,E,25,[[["array"]]]],[11,"mul",E,E,25,[[["array"]]]],[11,"rem",E,E,25,[[["array"]]]],[11,"rem",E,E,25,[[["array"]]]],[11,"neg",E,E,25,[[]]],[11,R[366],E,E,25,[[["array"],["self"]]]],[11,R[367],E,E,25,[[["array"],["self"]]]],[11,R[368],E,E,25,[[["array"],["self"]]]],[11,R[369],E,E,25,[[["array"],["self"]]]],[11,R[370],E,E,25,[[["array"],["self"]]]],[11,"bitand",E,E,25,[[["array"]]]],[11,"bitand",E,E,25,[[["array"]]]],[11,"bitor",E,E,25,[[["array"]]]],[11,"bitor",E,E,25,[[["array"]]]],[11,"bitxor",E,E,25,[[["array"]]]],[11,"bitxor",E,E,25,[[["array"]]]],[11,"shl",E,E,25,[[["array"]]]],[11,"shl",E,E,25,[[["array"]]]],[11,"shr",E,E,25,[[["array"]]]],[11,"shr",E,E,25,[[["array"]]]],[11,R[420],E,E,25,[[["array"],["self"]]]],[11,R[421],E,E,25,[[["array"],["self"]]]],[11,R[422],E,E,25,[[["array"],["self"]]]],[11,R[763],E,E,25,[[["array"],["self"]]]],[11,R[764],E,E,25,[[["array"],["self"]]]],[11,"index",E,E,26,[[["self"],["usize"]],["u64"]]],[11,R[102],E,E,0,[[["self"]],["str"]]],[11,"is_real",E,E,38,[[],["bool"]]],[11,R[828],E,E,38,[[],["bool"]]]],"p":[[4,"AfError"],[4,"Backend"],[4,"DType"],[4,R[843]],[4,R[844]],[4,R[845]],[4,R[933]],[4,R[846]],[4,R[847]],[4,R[848]],[4,"MatProp"],[4,R[969]],[4,R[982]],[4,"YCCStd"],[4,R[849]],[4,R[850]],[4,R[851]],[4,R[852]],[4,"BinaryOp"],[4,R[853]],[4,"Scalar"],[4,R[854]],[4,R[855]],[4,"FluxFn"],[4,"TopkFn"],[3,"Array"],[3,"Dim4"],[3,R[866]],[3,"Indexer"],[3,"Seq"],[3,"Window"],[3,R[856]],[3,R[872]],[8,R[857]],[8,R[858]],[8,R[859]],[8,R[860]],[8,R[861]],[8,R[862]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);